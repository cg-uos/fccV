#version 330 core

#define RENDER_MODE_BLINN_PHONG 0
#define RENDER_MODE_CURVATURE 1

#define SCALE_F  (0.000086806) //  1/11520
#define SCALE_G  (0.000520833) //  6/11520
#define SCALE_D2 (0.002604167) // 30/11520

in  vec2 vTexCoord;
out vec4 fColor;

uniform sampler2D tex_back;        // texture for exiting positions of rays
uniform sampler2D tex_front;       // texture for entering positions of rays
uniform sampler3D tex_volume;      // texture for volume dataset
uniform sampler2D tex_colormap_2d; // texture for color

uniform int   render_mode;
uniform vec3  scale_axes;        // scaling from lattice space to (normalized) bounding box space
uniform vec3  dim;               // volume dataset resolution
uniform float level;             // isosurface level
uniform float scale_step;        // scaling ray step
uniform mat4  MV;                // model-view matrix


struct TMaterial
{
    vec3  ambient;
    vec3  diffuse;
    vec3  specular;
    float shininess;
};

struct TLight
{
    vec4 position;
    vec3 ambient;
    vec3 diffuse;
    vec3 specular;
};

float c[27]; // voxel data located at stencil J_2
vec4  u1;    // parameter u
ivec3 org;   // nearest FCC lattice point
mat3  P;     // P \in G_P
vec3  R;     // diagonal elements of R \in G_r

TMaterial   uMaterial[2] =
TMaterial[2]
(
    // front material -- silver
    TMaterial(
        vec3(0.19225, 0.19225, 0.19225),
        vec3(0.50754, 0.50754, 0.50754),
        vec3(0.508273,0.508273,0.508273),
        .4*128.0),

    // back material -- red plastic
    TMaterial(
        vec3(  0,   0,   0),
        vec3(0.5, 0.0, 0.0),
        vec3(0.7, 0.6, 0.6),
        .25*128.0)
);

TLight  uLight = TLight(vec4( 1, 1, 1, 0),
                        vec3(.2,.2,.2),
                        vec3( 1, 1, 1),
                        vec3( 1, 1, 1));


ivec3 find_origin(vec3 p_in)
{
    ivec3 o = ivec3(round(p_in));
    if( (int(o.x+o.y+o.z)&0x01) != 0 ) {
        // if the 'org' is not the FCC lattice point, 
        // the nearest FCC lattice point is the farthest of six axis-alinged nearest neighbors.
        vec3 p_local_cc = p_in-o; 
        vec3 l = abs(p_local_cc);
        ivec3 offset = ivec3(int((l.x>=l.y)&&(l.x>=l.z)), 
                             int((l.y>l.x)&&(l.y>=l.z)), 
                             int((l.z>l.x)&&(l.z>l.y))) *ivec3(sign(p_local_cc));
        o += offset;
    }
    return o;
}

void preprocess(vec3 p_in)
{
    // find the nearest FCC lattice point
    org = find_origin(p_in);

    // local coordinates(p_in = org + p_local)
    vec4 p_local = vec4(p_in - vec3(org), 1);

    // computes the membership against the six planes intersecting the Voronoi cell centered at the local origin
    // (see Fig.4 (b))
    int[6] dR = int[](int(p_local.z-p_local.y>=0),
                      int(p_local.z-p_local.x>=0),
                      int(p_local.y-p_local.x>=0),
                      int(p_local.x+p_local.y>=0),
                      int(p_local.x+p_local.z>=0),
                      int(p_local.y+p_local.z>=0));
    // The even sign change group matrix R :
    // R_{xyz}:              [ 1      ]   R_{xy̅z̅}:             [ 1      ]
    // (dR[3,4,5]=(1,1,1))   [    1   ]   (dR[1,2,5]=(0,0,0))  [   -1   ]
    //                       [       1]                        [      -1]
    //
    // R_{x̅yz̅} :             [-1      ]   R_{x̅y̅z}:             [-1      ]
    // (dR[0,2,4]=(0,1,0))   [    1   ]   (dR[0,1,3]=(1,1,0))  [   -1   ]
    //                       [      -1]                        [       1]
    //
    // We stores only diagonal elements of the matrix R.
    R =    dR[3] *   dR[4] *   dR[5]  * ivec3( 1, 1, 1) +
        (1-dR[1])*(1-dR[2])*(1-dR[5]) * ivec3( 1,-1,-1) +
        (1-dR[0])*   dR[2] *(1-dR[4]) * ivec3(-1, 1,-1) +
           dR[0] *   dR[1] *(1-dR[3]) * ivec3(-1,-1, 1);

    // Transform p_local into the parallelepipe 'R_{xyz}' by the reflection computed above(Fig 4(c)).
    // Same as R^-1*p_local 
    // Note that R^{-1}=R.
    vec3  p_ref_R = R*p_local.xyz;

    // Compute the membership against the three planes intersecting the piece in Fig 4(c).
    // Three planes with their normals (-1,1,0), (-1,0,1), and (0,-1,1), respectively.
    // The input (p_ref_R) belong to one of the six tetrahedra in Fig 4(c)
    // and each piece corresponds to one of the six permutation matrices P below.
    ivec3 dP = ivec3(int(p_ref_R.y-p_ref_R.x>=0),
                     int(p_ref_R.z-p_ref_R.x>=0),
                     int(p_ref_R.z-p_ref_R.y>=0));
    
    // serialize type_P
    // (0,0,0)--> 0, (0,0,1)--> 1, (1,0,0)--> 2, (0,1,1)--> 3, (1,1,0)--> 4, (1,1,1)--> 5
    int idx_P = 2*(dP.x+dP.y)+dP.z;
    ivec3 vecP1 = ivec3(idx_P==0, idx_P==4, idx_P==3);
    ivec3 vecP2 = ivec3(idx_P==1, idx_P==2, idx_P==5);

    // Compute the permutation matrix P from idx_P.
    // P_{xyz}:     [1    ]  P_{xzy}:     [1    ]
    // (dP=(0,0,0)) [  1  ]  (dP=(0,0,1)) [    1]
    // (idx_P=0)    [    1]  (idx_P=1)    [  1  ]
    //
    // P_{yxz}:     [  1  ]  P_{yzx}:     [  1  ]
    // (dP=(1,0,0)) [1    ]  (dP=(0,1,1)) [    1]
    // (idx_P=2)    [    1]  (idx_P=3)    [1    ]
    //
    // P_{zxy}:     [    1]  P_{zyx}:     [    1]
    // (dP=(1,0,1)) [1    ]  (dP=(1,1,1)) [  1  ]
    // (idx_P=4)    [  1  ]  (idx_P=5)    [1    ]
    //
    // For p_ref_R in one of the six tetrahedra, P^{-1}*p_ref_R is inside the reference tetrahedron.
    // Note that mat3 is in column-major format.
    P = mat3(vecP1+vecP2, vecP1.zxy+vecP2.yzx, vecP1.yzx+vecP2.zxy);

    // Transform p_ref_R into the `reference tetrahedron' by multiplying P.
    // Note that P^{-1} = P^T.
    vec4 p_ref = vec4(transpose(P)*p_ref_R, 1);


    // Compute the barycentric coordinates on the reference tetrahedron.
    // v1 : [0], v2 : [1/2], v3 : [1], v4 : [ 1/2]
    //      [0]       [1/2]       [0]       [ 1/2]
    //      [0]       [1/2]       [0]       [-1/2]
    //
    u1 = vec4(1-p_ref.x-p_ref.y,
                p_ref.y+p_ref.z,
                p_ref.x-p_ref.y,
                p_ref.y-p_ref.z);
}

void fetch_coefficients(void)
{
    // To fetch the 27 coefficient, we need to transform the stencils by (R*P) which is slow.
    // Instead, since the stencils are still axis-aligned after the transformation,
    // we compute the transformed axes first.
    // (x,y,z) = R*P*[e1,e2,e3]
    ivec3 dir2x = 2*ivec3(R*P[0]);
    ivec3 dir2y = 2*ivec3(R*P[1]);
    ivec3 dir2z = 2*ivec3(R*P[2]);

#define GET_DATA() texelFetch(tex_volume, coord, 0).r
#define FETCH_C(idx, offset) {coord+=offset; c[idx]=GET_DATA();}
    ivec3 coord=org;    
    c[ 0] = GET_DATA();              //( 0, 0, 0)
    FETCH_C(15, -dir2z);             //( 0, 0,-2)
    FETCH_C(19, (dir2x+dir2y)>>1);   //( 1, 1,-2)
    FETCH_C(20, 2*dir2z);            //( 1, 1, 2)
    FETCH_C(16, -(dir2x+dir2y)>>1);  //( 0, 0, 2)    
    FETCH_C(14, -(dir2y+dir2z));     //( 0,-2, 0)
    FETCH_C(17, 2*dir2y);            //( 0, 2, 0)
    FETCH_C(21, (dir2x-dir2z)>>1);   //( 1, 2,-1)
    FETCH_C(22,  dir2z);             //( 1, 2, 1)
    FETCH_C(11, -dir2y);             //( 1, 0, 1)
    FETCH_C( 3, -dir2x);             //(-1, 0, 1)
    FETCH_C( 2, -dir2z);             //(-1, 0,-1)
    FETCH_C(10, dir2x);              //( 1, 0,-1)
    FETCH_C(12,(dir2y+dir2z)>>1);    //( 1, 1, 0)
    FETCH_C( 4, -dir2x);             //(-1, 1, 0)
    FETCH_C( 1, -dir2y);             //(-1,-1, 0)
    FETCH_C( 9,  dir2x);             //( 1,-1, 0)
    FETCH_C( 5, -(dir2x+dir2z)>>1);  //( 0,-1,-1)
    FETCH_C( 6,  dir2z);             //( 0,-1, 1)
    FETCH_C( 7, (dir2y-dir2z));      //( 0, 1,-1)
    FETCH_C( 8,  dir2z);             //( 0, 1, 1)
    FETCH_C(26,  dir2x);             //( 2, 1, 1)
    FETCH_C(25, -dir2z);             //( 2, 1,-1)
    FETCH_C(24, (dir2z-dir2y));      //( 2,-1, 1)
    FETCH_C(23, -dir2z);             //( 2,-1,-1)
    FETCH_C(18, (dir2y+dir2z)>>1);   //( 2, 0, 0)
    FETCH_C(13, -2*dir2x);           //(-2, 0, 0)
#undef FETCH_C
#undef GET_DATA
}

float eval_f(void)
{
    float val = 0;
    vec4 u2 = u1*u1;
    vec4 u3 = u2*u1;
    vec4 u4 = u3*u1;
    vec4 u5 = u4*u1;
    vec4 u6 = u5*u1;

    val += u6.x*(     (          (36*(c[15]+c[14]+c[18]+c[13]+c[17]+c[16]) + 504*(c[ 8]+c[ 3]+c[ 4]+c[11]+c[ 6]+c[ 9]+c[12]+c[10]+c[ 7]+c[ 1]+c[ 5]+c[ 2]) + 5256*(c[ 0]))));
    val += u5.x*(u1.y*(          (108*(c[15]+c[14]+c[13]) + 324*(c[18]+c[17]+c[16]) + 1692*(c[ 1]+c[ 5]+c[ 2]) + 3024*(c[ 3]+c[ 4]+c[ 6]+c[ 9]+c[10]+c[ 7]) + 4356*(c[ 8]+c[11]+c[12]) + 31536*(c[ 0])))+
                      (u1.z*     (216*(c[15]+c[14]+c[17]+c[16]) + 432*(c[18]) + 1692*(c[ 3]+c[ 4]+c[ 1]+c[ 2]) + 3024*(c[ 8]+c[ 6]+c[ 7]+c[ 5]) + 4356*(c[11]+c[ 9]+c[12]+c[10]) + 31536*(c[ 0]))+
                            u1.w*(108*(c[14]+c[13]+c[16]) + 324*(c[15]+c[18]+c[17]) + 1692*(c[ 6]+c[ 1]+c[ 3]) + 3024*(c[ 8]+c[ 4]+c[11]+c[ 9]+c[ 5]+c[ 2]) + 4356*(c[12]+c[10]+c[ 7]) + 31536*(c[ 0]))));
    val += u4.x*(u2.y*(          (90*(c[15]+c[14]+c[13]) + 1170*(c[18]+c[17]+c[16]) + 1890*(c[ 1]+c[ 5]+c[ 2]) + 7110*(c[ 3]+c[ 4]+c[ 6]+c[ 9]+c[10]+c[ 7]) + 15210*(c[ 8]+c[11]+c[12]) + 75060*(c[ 0])))+
                 u1.y*(u1.z*     (450*(c[15]+c[14]) + 1530*(c[17]+c[16]) + 3240*(c[18]) + 4140*(c[ 1]+c[ 2]) + 7740*(c[ 5]) + 7920*(c[ 3]+c[ 4]) + 14400*(c[ 6]+c[ 7]) + 21060*(c[ 8]) + 21240*(c[ 9]+c[10]) + 30780*(c[11]+c[12]) + 152640*(c[ 0]))+
                            u1.w*(270*(c[14]+c[13]) + 720*(c[15]+c[16]) + 2430*(c[18]+c[17]) + 4500*(c[ 1]) + 8100*(c[ 5]+c[ 2]+c[ 6]+c[ 3]) + 14940*(c[ 4]+c[ 9]) + 21420*(c[ 8]+c[11]+c[10]+c[ 7]) + 31140*(c[12]) + 155160*(c[ 0])))+
                      (u2.z*     (450*(c[15]+c[14]+c[17]+c[16]) + 1800*(c[ 2]+c[ 1]+c[ 4]+c[ 3]) + 2160*(c[18]) + 6840*(c[ 8]+c[ 6]+c[ 7]+c[ 5]) + 15120*(c[11]+c[ 9]+c[12]+c[10]) + 73800*(c[ 0]))+
                       u1.z*u1.w*(450*(c[14]+c[16]) + 1530*(c[15]+c[17]) + 3240*(c[18]) + 4140*(c[ 1]+c[ 3]) + 7740*(c[ 6]) + 7920*(c[ 4]+c[ 2]) + 14400*(c[ 8]+c[ 5]) + 21060*(c[ 7]) + 21240*(c[11]+c[ 9]) + 30780*(c[12]+c[10]) + 152640*(c[ 0]))+
                            u2.w*(90*(c[16]+c[14]+c[13]) + 1170*(c[15]+c[18]+c[17]) + 1890*(c[ 6]+c[ 1]+c[ 3]) + 7110*(c[ 8]+c[ 4]+c[11]+c[ 9]+c[ 5]+c[ 2]) + 15210*(c[12]+c[10]+c[ 7]) + 75060*(c[ 0]))));
    val += u3.x*(u3.y*(          (720*(c[ 5]+c[ 2]+c[ 1]) + 2160*(c[18]+c[17]+c[16]) + 8280*(c[ 3]+c[ 4]+c[ 6]+c[ 9]+c[10]+c[ 7]) + 27360*(c[11]+c[ 8]+c[12]) + 90000*(c[ 0])))+
                 u2.y*(u1.z*     (180*(c[15]+c[14]) + 2880*(c[ 2]+c[ 1]) + 4140*(c[17]+c[16]) + 6120*(c[ 5]) + 9360*(c[18]) + 14040*(c[ 3]+c[ 4]) + 25560*(c[ 6]+c[ 7]) + 38520*(c[ 9]+c[10]) + 56520*(c[ 8]) + 84240*(c[11]+c[12]) + 280080*(c[ 0]))+
                            u1.w*(180*(c[14]+c[13]) + 360*(c[15]) + 1800*(c[16]) + 3600*(c[ 1]) + 6840*(c[ 5]+c[ 2]) + 7020*(c[18]+c[17]) + 14760*(c[ 6]+c[ 3]) + 27720*(c[ 4]+c[ 9]) + 39240*(c[10]+c[ 7]) + 58680*(c[ 8]+c[11]) + 86400*(c[12]) + 290160*(c[ 0])))+
                 u1.y*(u2.z*     (540*(c[15]+c[14]) + 2340*(c[17]+c[16]) + 2880*(c[ 2]+c[ 1]) + 6480*(c[ 4]+c[ 3]) + 12600*(c[ 5]) + 12960*(c[18]) + 24480*(c[ 6]+c[ 7]) + 36360*(c[ 8]) + 56880*(c[ 9]+c[10]) + 83520*(c[11]+c[12]) + 275040*(c[ 0]))+
                       u1.z*u1.w*(720*(c[14]) + 2160*(c[15]+c[16]) + 7200*(c[ 1]) + 8640*(c[17]) + 15120*(c[ 2]+c[ 3]) + 19440*(c[18]) + 28080*(c[ 5]+c[ 6]) + 29520*(c[ 4]) + 78480*(c[ 8]+c[ 7]) + 81360*(c[ 9]) + 117360*(c[11]+c[10]) + 172800*(c[12]) + 580320*(c[ 0]))+
                            u2.w*(180*(c[14]+c[13]) + 360*(c[16]) + 1800*(c[15]) + 3600*(c[ 1]) + 6840*(c[ 6]+c[ 3]) + 7020*(c[18]+c[17]) + 14760*(c[ 5]+c[ 2]) + 27720*(c[ 4]+c[ 9]) + 39240*(c[ 8]+c[11]) + 58680*(c[10]+c[ 7]) + 86400*(c[12]) + 290160*(c[ 0])))+
                      (u3.z*     (360*(c[15]+c[14]+c[17]+c[16]) + 720*(c[ 4]+c[ 2]+c[ 3]+c[ 1]) + 5760*(c[18]) + 7200*(c[ 8]+c[ 5]+c[ 7]+c[ 6]) + 26640*(c[11]+c[12]+c[ 9]+c[10]) + 84960*(c[ 0]))+
                       u2.z*u1.w*(540*(c[14]+c[16]) + 2340*(c[15]+c[17]) + 2880*(c[ 3]+c[ 1]) + 6480*(c[ 2]+c[ 4]) + 12600*(c[ 6]) + 12960*(c[18]) + 24480*(c[ 8]+c[ 5]) + 36360*(c[ 7]) + 56880*(c[11]+c[ 9]) + 83520*(c[12]+c[10]) + 275040*(c[ 0]))+
                       u1.z*u2.w*(180*(c[16]+c[14]) + 2880*(c[ 3]+c[ 1]) + 4140*(c[15]+c[17]) + 6120*(c[ 6]) + 9360*(c[18]) + 14040*(c[ 4]+c[ 2]) + 25560*(c[ 8]+c[ 5]) + 38520*(c[11]+c[ 9]) + 56520*(c[ 7]) + 84240*(c[12]+c[10]) + 280080*(c[ 0]))+
                            u3.w*(720*(c[ 6]+c[ 3]+c[ 1]) + 2160*(c[15]+c[18]+c[17]) + 8280*(c[ 8]+c[ 4]+c[11]+c[ 9]+c[ 5]+c[ 2]) + 27360*(c[12]+c[ 7]+c[10]) + 90000*(c[ 0]))));
    val += u2.x*(u4.y*(          (90*(c[ 5]+c[ 2]+c[ 1]+c[20]+c[26]+c[22]) + 2160*(c[18]+c[17]+c[16]) + 4905*(c[10]+c[ 9]+c[ 7]+c[ 6]+c[ 4]+c[ 3]) + 26550*(c[11]+c[ 8]+c[12]) + 56700*(c[ 0])))+
                 u3.y*(u1.z*     (180*(c[20]+c[22]) + 360*(c[26]) + 540*(c[ 2]+c[ 1]) + 1800*(c[ 5]) + 5400*(c[17]+c[16]) + 11520*(c[ 4]+c[ 3]) + 12960*(c[18]) + 20700*(c[ 7]+c[ 6]) + 31860*(c[ 9]+c[10]) + 73080*(c[ 8]) + 110700*(c[11]+c[12]) + 241200*(c[ 0]))+
                            u1.w*(180*(c[26]+c[22]) + 720*(c[ 1]) + 1980*(c[ 5]+c[ 2]) + 2160*(c[16]) + 9720*(c[18]+c[17]) + 12600*(c[ 6]+c[ 3]) + 23760*(c[ 4]+c[ 9]) + 32940*(c[10]+c[ 7]) + 77580*(c[11]+c[ 8]) + 115200*(c[12]) + 255600*(c[ 0])))+
                 u2.y*(u2.z*     (90*(c[24]+c[25]+c[15]+c[14]+c[20]+c[22]) + 540*(c[26]) + 900*(c[ 2]+c[ 1]) + 4410*(c[17]+c[16]) + 7020*(c[ 5]) + 8460*(c[ 4]+c[ 3]) + 28080*(c[18]) + 30330*(c[ 7]+c[ 6]) + 70200*(c[ 8]) + 73530*(c[ 9]+c[10]) + 166140*(c[11]+c[12]) + 362880*(c[ 0]))+
                       u1.z*u1.w*(180*(c[25]+c[14]+c[22]) + 540*(c[15]+c[26]) + 2700*(c[ 1]) + 3780*(c[16]) + 7740*(c[ 2]) + 16200*(c[ 5]) + 17460*(c[17]) + 19800*(c[ 3]) + 36000*(c[ 6]) + 39240*(c[ 4]) + 42120*(c[18]) + 101340*(c[ 7]) + 108360*(c[ 9]) + 154260*(c[10]) + 154980*(c[ 8]) + 234540*(c[11]) + 350460*(c[12]) + 783000*(c[ 0]))+
                            u2.w*(90*(c[25]+c[21]+c[14]+c[13]+c[26]+c[22]) + 540*(c[15]+c[16]) + 1620*(c[ 1]) + 9000*(c[ 5]+c[ 2]+c[ 6]+c[ 3]) + 15210*(c[18]+c[17]) + 38160*(c[ 4]+c[ 9]) + 78390*(c[ 8]+c[11]+c[10]+c[ 7]) + 177660*(c[12]) + 399600*(c[ 0])))+
                 u1.y*(u3.z*     (180*(c[24]+c[25]+c[15]+c[14]) + 360*(c[26]) + 540*(c[ 2]+c[ 1]) + 1260*(c[17]+c[16]) + 1980*(c[ 4]+c[ 3]) + 9000*(c[ 5]) + 18180*(c[ 7]+c[ 6]) + 25920*(c[18]) + 27360*(c[ 8]) + 71100*(c[ 9]+c[10]) + 106380*(c[11]+c[12]) + 228960*(c[ 0]))+
                       u2.z*u1.w*(360*(c[14]) + 540*(c[25]+c[26]) + 1800*(c[15]+c[16]) + 2520*(c[ 1]) + 7740*(c[ 2]+c[ 3]) + 9000*(c[17]) + 17640*(c[ 4]) + 32400*(c[ 5]+c[ 6]) + 58320*(c[18]) + 95580*(c[ 8]+c[ 7]) + 155880*(c[ 9]) + 228060*(c[11]+c[10]) + 341640*(c[12]) + 756000*(c[ 0]))+
                       u1.z*u2.w*(180*(c[21]+c[14]+c[26]) + 540*(c[25]+c[16]) + 2700*(c[ 1]) + 3780*(c[15]) + 7740*(c[ 3]) + 16200*(c[ 6]) + 17460*(c[17]) + 19800*(c[ 2]) + 36000*(c[ 5]) + 39240*(c[ 4]) + 42120*(c[18]) + 101340*(c[ 8]) + 108360*(c[ 9]) + 154260*(c[11]) + 154980*(c[ 7]) + 234540*(c[10]) + 350460*(c[12]) + 783000*(c[ 0]))+
                            u3.w*(180*(c[25]+c[21]) + 720*(c[ 1]) + 1980*(c[ 6]+c[ 3]) + 2160*(c[15]) + 9720*(c[17]+c[18]) + 12600*(c[ 5]+c[ 2]) + 23760*(c[ 4]+c[ 9]) + 32940*(c[ 8]+c[11]) + 77580*(c[ 7]+c[10]) + 115200*(c[12]) + 255600*(c[ 0])))+
                      (u4.z*     (90*(c[24]+c[25]+c[23]+c[17]+c[ 4]+c[ 2]+c[15]+c[16]+c[ 3]+c[14]+c[ 1]+c[26]) + 3690*(c[ 8]+c[ 5]+c[ 7]+c[ 6]) + 8640*(c[18]) + 24390*(c[11]+c[12]+c[ 9]+c[10]) + 50760*(c[ 0]))+
                       u3.z*u1.w*(180*(c[23]+c[16]+c[14]+c[26]) + 360*(c[25]) + 540*(c[ 3]+c[ 1]) + 1260*(c[15]+c[17]) + 1980*(c[ 4]+c[ 2]) + 9000*(c[ 6]) + 18180*(c[ 8]+c[ 5]) + 25920*(c[18]) + 27360*(c[ 7]) + 71100*(c[11]+c[ 9]) + 106380*(c[12]+c[10]) + 228960*(c[ 0]))+
                       u2.z*u2.w*(90*(c[23]+c[21]+c[19]+c[16]+c[14]+c[26]) + 540*(c[25]) + 900*(c[ 3]+c[ 1]) + 4410*(c[15]+c[17]) + 7020*(c[ 6]) + 8460*(c[ 2]+c[ 4]) + 28080*(c[18]) + 30330*(c[ 8]+c[ 5]) + 70200*(c[ 7]) + 73530*(c[11]+c[ 9]) + 166140*(c[12]+c[10]) + 362880*(c[ 0]))+
                       u1.z*u3.w*(180*(c[19]+c[21]) + 360*(c[25]) + 540*(c[ 3]+c[ 1]) + 1800*(c[ 6]) + 5400*(c[17]+c[15]) + 11520*(c[ 4]+c[ 2]) + 12960*(c[18]) + 20700*(c[ 8]+c[ 5]) + 31860*(c[11]+c[ 9]) + 73080*(c[ 7]) + 110700*(c[12]+c[10]) + 241200*(c[ 0]))+
                            u4.w*(90*(c[19]+c[25]+c[21]+c[ 6]+c[ 3]+c[ 1]) + 2160*(c[17]+c[18]+c[15]) + 4905*(c[ 8]+c[ 4]+c[11]+c[ 9]+c[ 5]+c[ 2]) + 26550*(c[12]+c[10]+c[ 7]) + 56700*(c[ 0]))));
    val += u1.x*(u5.y*(          (360*(c[20]+c[26]+c[22]) + 1008*(c[18]+c[17]+c[16]) + 1476*(c[10]+c[ 9]+c[ 7]+c[ 6]+c[ 4]+c[ 3]) + 12672*(c[11]+c[ 8]+c[12]) + 18144*(c[ 0])))+
                 u4.y*(u1.z*     (180*(c[ 5]) + 1080*(c[20]+c[22]) + 1620*(c[26]) + 3150*(c[17]+c[16]) + 4500*(c[ 4]+c[ 3]) + 7830*(c[ 7]+c[ 6]) + 8100*(c[18]) + 12240*(c[10]+c[ 9]) + 44100*(c[ 8]) + 67860*(c[11]+c[12]) + 98280*(c[ 0]))+
                            u1.w*(180*(c[ 5]+c[ 2]) + 360*(c[20]) + 900*(c[26]+c[22]) + 1260*(c[16]) + 4950*(c[ 6]+c[ 3]) + 6210*(c[18]+c[17]) + 9360*(c[ 9]+c[ 4]) + 12690*(c[10]+c[ 7]) + 48600*(c[11]+c[ 8]) + 72360*(c[12]) + 105840*(c[ 0])))+
                 u3.y*(u2.z*     (180*(c[24]+c[25]) + 1080*(c[20]+c[22]) + 1440*(c[ 5]) + 2880*(c[26]) + 3420*(c[17]+c[16]) + 4680*(c[ 4]+c[ 3]) + 15480*(c[ 7]+c[ 6]) + 24840*(c[18]) + 38880*(c[ 9]+c[10]) + 57240*(c[ 8]) + 138240*(c[11]+c[12]) + 200880*(c[ 0]))+
                       u1.z*u1.w*(360*(c[25]) + 720*(c[20]) + 1080*(c[ 2]) + 1800*(c[22]) + 2880*(c[16]) + 3240*(c[ 5]+c[26]) + 10800*(c[ 3]) + 14760*(c[17]) + 19080*(c[ 6]) + 21600*(c[ 4]) + 37800*(c[18]) + 53280*(c[ 7]) + 59040*(c[ 9]) + 82440*(c[10]) + 130320*(c[ 8]) + 198360*(c[11]) + 299520*(c[12]) + 442080*(c[ 0]))+
                            u2.w*(180*(c[25]+c[21]) + 360*(c[16]) + 720*(c[26]+c[22]) + 1800*(c[ 5]+c[ 2]) + 5040*(c[ 6]+c[ 3]) + 13860*(c[18]+c[17]) + 21600*(c[ 4]+c[ 9]) + 42480*(c[10]+c[ 7]) + 67140*(c[11]+c[ 8]) + 154800*(c[12]) + 230400*(c[ 0])))+
                 u2.y*(u3.z*     (360*(c[20]+c[22]) + 540*(c[25]+c[24]) + 1440*(c[17]+c[16]) + 1800*(c[ 4]+c[ 3]) + 2520*(c[26]) + 3240*(c[ 5]) + 14220*(c[ 7]+c[ 6]) + 33840*(c[ 8]) + 36000*(c[18]) + 57960*(c[ 9]+c[10]) + 134280*(c[11]+c[12]) + 194400*(c[ 0]))+
                       u2.z*u1.w*(180*(c[15]) + 360*(c[20]) + 900*(c[22]) + 1800*(c[25]+c[ 2]) + 1980*(c[16]) + 4320*(c[26]) + 6840*(c[ 3]) + 11160*(c[17]) + 11880*(c[ 5]) + 15480*(c[ 4]) + 26100*(c[ 6]) + 77220*(c[ 7]) + 82080*(c[18]) + 120960*(c[ 8]) + 131400*(c[ 9]) + 189540*(c[10]) + 291600*(c[11]) + 443520*(c[12]) + 654480*(c[ 0]))+
                       u1.z*u2.w*(540*(c[15]+c[16]) + 720*(c[21]+c[22]) + 1980*(c[25]+c[26]) + 6840*(c[ 2]+c[ 3]) + 13680*(c[ 5]+c[ 6]) + 23400*(c[17]) + 34920*(c[ 4]) + 59760*(c[18]) + 94680*(c[ 9]) + 130140*(c[ 8]+c[ 7]) + 198720*(c[11]+c[10]) + 464400*(c[12]) + 691200*(c[ 0]))+
                            u3.w*(180*(c[26]+c[22]) + 360*(c[15]) + 720*(c[25]+c[21]) + 1800*(c[ 6]+c[ 3]) + 5040*(c[ 5]+c[ 2]) + 13860*(c[17]+c[18]) + 21600*(c[ 4]+c[ 9]) + 42480*(c[ 8]+c[11]) + 67140*(c[ 7]+c[10]) + 154800*(c[12]) + 230400*(c[ 0])))+
                 u1.y*(u4.z*     (180*(c[17]+c[ 4]+c[16]+c[ 3]) + 540*(c[24]+c[25]) + 1080*(c[26]) + 2880*(c[ 5]) + 5940*(c[ 7]+c[ 6]) + 9000*(c[ 8]) + 24840*(c[18]) + 40860*(c[ 9]+c[10]) + 61920*(c[11]+c[12]) + 88560*(c[ 0]))+
                       u3.z*u1.w*(360*(c[15]+c[16]) + 1080*(c[ 2]+c[ 3]) + 2520*(c[25]+c[26]) + 2880*(c[17]) + 3600*(c[ 4]) + 14760*(c[ 5]+c[ 6]) + 45360*(c[ 8]+c[ 7]) + 75600*(c[18]) + 123120*(c[ 9]) + 182520*(c[11]+c[10]) + 277920*(c[12]) + 406080*(c[ 0]))+
                       u2.z*u2.w*(180*(c[16]) + 360*(c[19]) + 900*(c[21]) + 1800*(c[ 3]+c[26]) + 1980*(c[15]) + 4320*(c[25]) + 6840*(c[ 2]) + 11160*(c[17]) + 11880*(c[ 6]) + 15480*(c[ 4]) + 26100*(c[ 5]) + 77220*(c[ 8]) + 82080*(c[18]) + 120960*(c[ 7]) + 131400*(c[ 9]) + 189540*(c[11]) + 291600*(c[10]) + 443520*(c[12]) + 654480*(c[ 0]))+
                       u1.z*u3.w*(360*(c[26]) + 720*(c[19]) + 1080*(c[ 3]) + 1800*(c[21]) + 2880*(c[15]) + 3240*(c[25]+c[ 6]) + 10800*(c[ 2]) + 14760*(c[17]) + 19080*(c[ 5]) + 21600*(c[ 4]) + 37800*(c[18]) + 53280*(c[ 8]) + 59040*(c[ 9]) + 82440*(c[11]) + 130320*(c[ 7]) + 198360*(c[10]) + 299520*(c[12]) + 442080*(c[ 0]))+
                            u4.w*(180*(c[ 6]+c[ 3]) + 360*(c[19]) + 900*(c[25]+c[21]) + 1260*(c[15]) + 4950*(c[ 5]+c[ 2]) + 6210*(c[17]+c[18]) + 9360*(c[ 4]+c[ 9]) + 12690*(c[ 8]+c[11]) + 48600*(c[10]+c[ 7]) + 72360*(c[12]) + 105840*(c[ 0])))+
                      (u5.z*     (180*(c[24]+c[25]+c[23]+c[26]) + 900*(c[ 8]+c[ 5]+c[ 7]+c[ 6]) + 6480*(c[18]) + 10800*(c[11]+c[12]+c[ 9]+c[10]) + 15120*(c[ 0]))+
                       u4.z*u1.w*(180*(c[17]+c[ 4]+c[ 2]+c[15]) + 540*(c[23]+c[26]) + 1080*(c[25]) + 2880*(c[ 6]) + 5940*(c[ 8]+c[ 5]) + 9000*(c[ 7]) + 24840*(c[18]) + 40860*(c[11]+c[ 9]) + 61920*(c[12]+c[10]) + 88560*(c[ 0]))+
                       u3.z*u2.w*(360*(c[21]+c[19]) + 540*(c[23]+c[26]) + 1440*(c[15]+c[17]) + 1800*(c[ 4]+c[ 2]) + 2520*(c[25]) + 3240*(c[ 6]) + 14220*(c[ 8]+c[ 5]) + 33840*(c[ 7]) + 36000*(c[18]) + 57960*(c[11]+c[ 9]) + 134280*(c[12]+c[10]) + 194400*(c[ 0]))+
                       u2.z*u3.w*(180*(c[23]+c[26]) + 1080*(c[21]+c[19]) + 1440*(c[ 6]) + 2880*(c[25]) + 3420*(c[15]+c[17]) + 4680*(c[ 2]+c[ 4]) + 15480*(c[ 8]+c[ 5]) + 24840*(c[18]) + 38880*(c[11]+c[ 9]) + 57240*(c[ 7]) + 138240*(c[12]+c[10]) + 200880*(c[ 0]))+
                       u1.z*u4.w*(180*(c[ 6]) + 1080*(c[21]+c[19]) + 1620*(c[25]) + 3150*(c[17]+c[15]) + 4500*(c[ 4]+c[ 2]) + 7830*(c[ 8]+c[ 5]) + 8100*(c[18]) + 12240*(c[11]+c[ 9]) + 44100*(c[ 7]) + 67860*(c[12]+c[10]) + 98280*(c[ 0]))+
                            u5.w*(360*(c[25]+c[21]+c[19]) + 1008*(c[17]+c[18]+c[15]) + 1476*(c[ 8]+c[ 4]+c[11]+c[ 9]+c[ 5]+c[ 2]) + 12672*(c[12]+c[10]+c[ 7]) + 18144*(c[ 0]))));
    val +=      (u6.y*(          (180*(c[10]+c[ 9]+c[18]+c[ 7]+c[ 6]+c[26]+c[ 4]+c[17]+c[ 3]+c[22]+c[16]+c[20]) + 2340*(c[11]+c[ 8]+c[12]+c[ 0])))+
                 u5.y*(u1.z*     (684*(c[ 4]+c[17]+c[ 3]+c[22]+c[16]+c[20]) + 1152*(c[ 7]+c[ 6]+c[26]) + 1800*(c[10]+c[ 9]+c[18]) + 9936*(c[ 8]) + 15408*(c[11]+c[12]+c[ 0]))+
                            u1.w*(288*(c[16]+c[20]) + 756*(c[ 6]+c[26]+c[ 3]+c[22]) + 1404*(c[ 9]+c[18]+c[ 4]+c[17]) + 1872*(c[10]+c[ 7]) + 11304*(c[11]+c[ 8]) + 16776*(c[12]+c[ 0])))+
                 u4.y*(u2.z*     (90*(c[24]+c[25]+c[ 5]) + 945*(c[ 4]+c[17]+c[ 3]+c[22]+c[16]+c[20]) + 2880*(c[ 7]+c[ 6]+c[26]) + 7290*(c[18]+c[ 9]+c[10]) + 16470*(c[ 8]) + 39960*(c[11]+c[12]+c[ 0]))+
                       u1.z*u1.w*(180*(c[25]+c[ 5]) + 810*(c[16]+c[20]) + 2160*(c[ 3]+c[22]) + 3690*(c[ 6]+c[26]) + 4230*(c[ 4]+c[17]) + 9900*(c[ 7]) + 11340*(c[18]+c[ 9]) + 15480*(c[10]) + 38520*(c[ 8]) + 58680*(c[11]) + 89100*(c[12]+c[ 0]))+
                            u2.w*(90*(c[25]+c[ 5]+c[21]+c[ 2]+c[16]+c[20]) + 1035*(c[ 6]+c[26]+c[ 3]+c[22]) + 4275*(c[18]+c[ 9]+c[17]+c[ 4]) + 8010*(c[10]+c[ 7]) + 20340*(c[11]+c[ 8]) + 47160*(c[12]+c[ 0])))+
                 u3.y*(u3.z*     (360*(c[25]+c[ 5]+c[24]) + 540*(c[ 4]+c[17]+c[ 3]+c[22]+c[16]+c[20]) + 3600*(c[ 7]+c[ 6]+c[26]) + 13320*(c[ 8]) + 14760*(c[18]+c[ 9]+c[10]) + 52560*(c[11]+c[12]+c[ 0]))+
                       u2.z*u1.w*(720*(c[16]+c[20]) + 1260*(c[25]+c[ 5]) + 1980*(c[ 3]+c[22]) + 4320*(c[ 4]+c[17]) + 6840*(c[ 6]+c[26]) + 19440*(c[ 7]) + 34560*(c[18]+c[ 9]) + 48600*(c[ 8]+c[10]) + 116640*(c[11]) + 179280*(c[12]+c[ 0]))+
                       u1.z*u2.w*(180*(c[16]+c[20]) + 540*(c[21]+c[ 2]) + 1440*(c[25]+c[ 5]) + 1980*(c[ 3]+c[22]) + 3780*(c[ 6]+c[26]) + 9720*(c[17]+c[ 4]) + 25740*(c[18]+c[ 9]) + 33480*(c[ 7]) + 51480*(c[10]) + 53280*(c[ 8]) + 81000*(c[11]) + 192600*(c[12]+c[ 0]))+
                            u3.w*(540*(c[25]+c[ 5]+c[21]+c[ 2]+c[ 6]+c[ 3]+c[26]+c[22]) + 6120*(c[17]+c[ 4]+c[18]+c[ 9]) + 17640*(c[ 8]+c[11]+c[10]+c[ 7]) + 65520*(c[12]+c[ 0])))+
                 u2.y*(u4.z*     (90*(c[17]+c[ 4]+c[16]+c[ 3]+c[20]+c[22]) + 540*(c[24]+c[25]+c[ 5]) + 2340*(c[ 7]+c[ 6]+c[26]) + 5400*(c[ 8]) + 15840*(c[18]+c[ 9]+c[10]) + 36900*(c[11]+c[12]+c[ 0]))+
                       u3.z*u1.w*(180*(c[16]+c[20]) + 540*(c[ 3]+c[22]) + 1620*(c[ 4]+c[17]) + 2700*(c[25]+c[ 5]) + 5940*(c[ 6]+c[26]) + 17640*(c[ 7]) + 27720*(c[ 8]) + 49680*(c[18]+c[ 9]) + 71640*(c[10]) + 110880*(c[11]) + 171000*(c[12]+c[ 0]))+
                       u2.z*u2.w*(90*(c[19]+c[15]+c[16]+c[20]) + 900*(c[21]+c[ 2]+c[ 3]+c[22]) + 4950*(c[25]+c[ 5]+c[ 6]+c[26]) + 6840*(c[17]+c[ 4]) + 48060*(c[ 8]+c[ 7]) + 54900*(c[18]+c[ 9]) + 116640*(c[11]+c[10]) + 280080*(c[12]+c[ 0]))+
                       u1.z*u3.w*(180*(c[19]+c[15]) + 540*(c[ 3]+c[22]) + 1440*(c[ 6]+c[26]) + 1980*(c[21]+c[ 2]) + 3780*(c[25]+c[ 5]) + 9720*(c[17]+c[ 4]) + 25740*(c[18]+c[ 9]) + 33480*(c[ 8]) + 51480*(c[11]) + 53280*(c[ 7]) + 81000*(c[10]) + 192600*(c[12]+c[ 0]))+
                            u4.w*(90*(c[19]+c[15]+c[ 6]+c[ 3]+c[26]+c[22]) + 1035*(c[25]+c[21]+c[ 5]+c[ 2]) + 4275*(c[17]+c[ 4]+c[18]+c[ 9]) + 8010*(c[ 8]+c[11]) + 20340*(c[ 7]+c[10]) + 47160*(c[12]+c[ 0])))+
                 u1.y*(u5.z*     (360*(c[24]+c[25]+c[ 5]) + 720*(c[ 7]+c[ 6]+c[26]) + 1080*(c[ 8]) + 8640*(c[18]+c[ 9]+c[10]) + 12960*(c[11]+c[12]+c[ 0]))+
                       u4.z*u1.w*(180*(c[17]+c[ 4]) + 2340*(c[25]+c[ 5]+c[ 6]+c[26]) + 7200*(c[ 8]+c[ 7]) + 34020*(c[18]+c[ 9]) + 50040*(c[11]+c[10]) + 76680*(c[12]+c[ 0]))+
                       u3.z*u2.w*(180*(c[19]+c[15]) + 540*(c[21]+c[ 2]) + 1620*(c[ 4]+c[17]) + 2700*(c[ 6]+c[26]) + 5940*(c[25]+c[ 5]) + 17640*(c[ 8]) + 27720*(c[ 7]) + 49680*(c[18]+c[ 9]) + 71640*(c[11]) + 110880*(c[10]) + 171000*(c[12]+c[ 0]))+
                       u2.z*u3.w*(720*(c[19]+c[15]) + 1260*(c[ 6]+c[26]) + 1980*(c[21]+c[ 2]) + 4320*(c[17]+c[ 4]) + 6840*(c[25]+c[ 5]) + 19440*(c[ 8]) + 34560*(c[18]+c[ 9]) + 48600*(c[11]+c[ 7]) + 116640*(c[10]) + 179280*(c[12]+c[ 0]))+
                       u1.z*u4.w*(180*(c[ 6]+c[26]) + 810*(c[19]+c[15]) + 2160*(c[21]+c[ 2]) + 3690*(c[25]+c[ 5]) + 4230*(c[17]+c[ 4]) + 9900*(c[ 8]) + 11340*(c[18]+c[ 9]) + 15480*(c[11]) + 38520*(c[ 7]) + 58680*(c[10]) + 89100*(c[12]+c[ 0]))+
                            u5.w*(288*(c[19]+c[15]) + 756*(c[25]+c[21]+c[ 5]+c[ 2]) + 1404*(c[17]+c[ 4]+c[18]+c[ 9]) + 1872*(c[ 8]+c[11]) + 11304*(c[10]+c[ 7]) + 16776*(c[12]+c[ 0])))+
                      (u6.z*     (90*(c[ 8]+c[24]+c[25]+c[ 5]+c[23]+c[ 7]+c[ 6]+c[26]) + 1800*(c[11]+c[18]+c[12]+c[ 9]+c[ 0]+c[10]))+
                       u5.z*u1.w*(360*(c[23]+c[ 6]+c[26]) + 720*(c[ 8]+c[25]+c[ 5]) + 1080*(c[ 7]) + 8640*(c[11]+c[18]+c[ 9]) + 12960*(c[12]+c[ 0]+c[10]))+
                       u4.z*u2.w*(90*(c[17]+c[21]+c[ 4]+c[19]+c[ 2]+c[15]) + 540*(c[23]+c[ 6]+c[26]) + 2340*(c[ 8]+c[25]+c[ 5]) + 5400*(c[ 7]) + 15840*(c[11]+c[18]+c[ 9]) + 36900*(c[12]+c[ 0]+c[10]))+
                       u3.z*u3.w*(360*(c[23]+c[ 6]+c[26]) + 540*(c[19]+c[15]+c[ 4]+c[ 2]+c[17]+c[21]) + 3600*(c[ 8]+c[25]+c[ 5]) + 13320*(c[ 7]) + 14760*(c[11]+c[18]+c[ 9]) + 52560*(c[12]+c[ 0]+c[10]))+
                       u2.z*u4.w*(90*(c[23]+c[ 6]+c[26]) + 945*(c[19]+c[15]+c[21]+c[ 2]+c[17]+c[ 4]) + 2880*(c[ 8]+c[25]+c[ 5]) + 7290*(c[11]+c[18]+c[ 9]) + 16470*(c[ 7]) + 39960*(c[12]+c[ 0]+c[10]))+
                       u1.z*u5.w*(684*(c[17]+c[ 4]+c[21]+c[19]+c[ 2]+c[15]) + 1152*(c[ 8]+c[25]+c[ 5]) + 1800*(c[11]+c[18]+c[ 9]) + 9936*(c[ 7]) + 15408*(c[12]+c[ 0]+c[10]))+
                            u6.w*(180*(c[ 8]+c[17]+c[ 4]+c[11]+c[18]+c[ 9]+c[25]+c[21]+c[19]+c[ 5]+c[ 2]+c[15]) + 2340*(c[12]+c[ 0]+c[10]+c[ 7]))));

    return val*SCALE_F;
}

vec3 eval_g(void)
{
    vec3 d = vec3(0);
    vec4 u2 = u1*u1;
    vec4 u3 = u2*u1;
    vec4 u4 = u3*u1;
    vec4 u5 = u4*u1;
    d.x += u5.x*(     (          (36*(-c[13]+c[18]) + 222*(-c[ 3]-c[ 4]-c[ 1]-c[ 2]+c[11]+c[ 9]+c[12]+c[10]))));
    d.x += u4.x*(u1.y*(          (15*(-c[15]-c[14]-c[17]-c[16]) + 90*(-c[13]) + 120*(-c[ 8]-c[ 6]-c[ 7]-c[ 5]) + 270*(c[18]) + 720*(-c[ 1]-c[ 2]) + 840*(-c[ 0]) + 1020*(c[ 9]+c[10]) + 1200*(-c[ 3]-c[ 4]) + 1500*(c[11]+c[12])))+
                      (u1.z*     (30*(-c[15]-c[14]-c[17]-c[16]) + 240*(-c[ 8]-c[ 6]-c[ 7]-c[ 5]) + 360*(c[18]) + 810*(-c[ 2]-c[ 1]-c[ 4]-c[ 3]) + 1410*(c[11]+c[ 9]+c[12]+c[10]) + 1680*(-c[ 0]))+
                            u1.w*(15*(-c[15]-c[14]-c[17]-c[16]) + 90*(-c[13]) + 120*(-c[ 8]-c[ 7]-c[ 5]-c[ 6]) + 270*(c[18]) + 720*(-c[ 1]-c[ 3]) + 840*(-c[ 0]) + 1020*(c[11]+c[ 9]) + 1200*(-c[ 4]-c[ 2]) + 1500*(c[12]+c[10]))));
    d.x += u3.x*(u2.y*(          (30*(-c[15]-c[14]) + 60*(-c[13]) + 90*(-c[17]-c[16]) + 240*(-c[ 5]) + 480*(-c[ 6]-c[ 7]) + 720*(-c[ 8]) + 780*(-c[ 2]-c[ 1]+c[18]) + 1680*(c[ 9]+c[10]) + 2400*(-c[ 3]-c[ 4]) + 3360*(-c[ 0]) + 3900*(c[11]+c[12])))+
                 u1.y*(u1.z*     (120*(-c[15]-c[14]) + 240*(-c[17]-c[16]) + 960*(-c[ 5]) + 1440*(-c[ 6]-c[ 7]) + 1800*(-c[ 2]-c[ 1]) + 1920*(-c[ 8]) + 2160*(c[18]) + 3120*(-c[ 4]-c[ 3]) + 4800*(c[ 9]+c[10]) + 7320*(c[11]+c[12]) + 10080*(-c[ 0]))+
                            u1.w*(60*(-c[14]) + 120*(-c[15]-c[16]) + 180*(-c[17]-c[13]) + 720*(-c[ 5]-c[ 6]) + 1200*(-c[ 8]-c[ 7]) + 1620*(c[18]) + 1800*(-c[ 1]) + 2880*(-c[ 2]-c[ 3]) + 3600*(c[ 9]) + 5040*(-c[ 4]) + 5280*(c[11]+c[10]) + 6720*(-c[ 0]) + 8040*(c[12])))+
                      (u2.z*     (120*(-c[15]-c[14]-c[17]-c[16]) + 840*(-c[ 4]-c[ 2]-c[ 3]-c[ 1]) + 960*(-c[ 8]-c[ 5]-c[ 7]-c[ 6]) + 1440*(c[18]) + 3240*(c[11]+c[12]+c[ 9]+c[10]) + 6720*(-c[ 0]))+
                       u1.z*u1.w*(120*(-c[14]-c[16]) + 240*(-c[15]-c[17]) + 960*(-c[ 6]) + 1440*(-c[ 8]-c[ 5]) + 1800*(-c[ 3]-c[ 1]) + 1920*(-c[ 7]) + 2160*(c[18]) + 3120*(-c[ 2]-c[ 4]) + 4800*(c[11]+c[ 9]) + 7320*(c[12]+c[10]) + 10080*(-c[ 0]))+
                            u2.w*(30*(-c[16]-c[14]) + 60*(-c[13]) + 90*(-c[15]-c[17]) + 240*(-c[ 6]) + 480*(-c[ 8]-c[ 5]) + 720*(-c[ 7]) + 780*(-c[ 3]-c[ 1]+c[18]) + 1680*(c[11]+c[ 9]) + 2400*(-c[ 4]-c[ 2]) + 3360*(-c[ 0]) + 3900*(c[12]+c[10]))));
    d.x += u2.x*(u3.y*(          (30*(c[20]+c[22]) + 60*(-c[ 5]+c[26]) + 180*(-c[17]-c[16]) + 270*(-c[ 2]-c[ 1]) + 690*(-c[ 7]-c[ 6]) + 1080*(c[18]) + 1170*(c[ 9]+c[10]) + 1500*(-c[ 8]) + 2220*(-c[ 4]-c[ 3]) + 4770*(c[11]+c[12]) + 4800*(-c[ 0])))+
                 u2.y*(u1.z*     (30*(c[24]+c[25]+c[20]+c[22]) + 60*(-c[15]-c[14]) + 180*(c[26]) + 600*(-c[17]-c[16]) + 720*(-c[ 5]) + 1140*(-c[ 2]-c[ 1]) + 2670*(-c[ 7]-c[ 6]) + 4200*(-c[ 4]-c[ 3]) + 4680*(c[18]) + 4860*(-c[ 8]) + 5250*(c[ 9]+c[10]) + 13260*(c[11]+c[12]) + 19080*(-c[ 0]))+
                            u1.w*(30*(c[25]+c[22]) + 60*(-c[14]) + 90*(-c[15]-c[13]+c[26]) + 270*(-c[16]) + 600*(-c[17]) + 720*(-c[ 5]) + 1350*(-c[ 1]) + 1380*(-c[ 6]) + 2130*(-c[ 2]) + 2730*(-c[ 7]) + 3510*(-c[ 8]+c[18]) + 4080*(-c[ 3]) + 4200*(c[ 9]) + 6090*(c[10]) + 7320*(-c[ 4]) + 9750*(c[11]) + 14580*(-c[ 0]) + 15210*(c[12])))+
                 u1.y*(u2.z*     (90*(c[24]+c[25]) + 180*(-c[15]-c[14]+c[26]) + 540*(-c[17]-c[16]) + 1170*(-c[ 2]-c[ 1]) + 1800*(-c[ 5]) + 2250*(-c[ 4]-c[ 3]) + 3150*(-c[ 7]-c[ 6]) + 4500*(-c[ 8]) + 6480*(c[18]) + 7110*(c[ 9]+c[10]) + 11430*(c[11]+c[12]) + 23040*(-c[ 0]))+
                       u1.z*u1.w*(180*(c[25]+c[26]) + 240*(-c[14]) + 480*(-c[15]-c[16]) + 1320*(-c[17]) + 2760*(-c[ 1]) + 3240*(-c[ 5]-c[ 6]) + 4980*(-c[ 2]-c[ 3]) + 7380*(-c[ 8]-c[ 7]) + 8880*(-c[ 4]) + 9720*(c[18]) + 11280*(c[ 9]) + 17340*(c[11]+c[10]) + 27480*(c[12]) + 38160*(-c[ 0]))+
                            u2.w*(30*(c[21]+c[26]) + 60*(-c[14]) + 90*(-c[16]-c[13]+c[25]) + 270*(-c[15]) + 600*(-c[17]) + 720*(-c[ 6]) + 1350*(-c[ 1]) + 1380*(-c[ 5]) + 2130*(-c[ 3]) + 2730*(-c[ 8]) + 3510*(-c[ 7]+c[18]) + 4080*(-c[ 2]) + 4200*(c[ 9]) + 6090*(c[11]) + 7320*(-c[ 4]) + 9750*(c[10]) + 14580*(-c[ 0]) + 15210*(c[12])))+
                      (u3.z*     (60*(c[24]+c[25]+c[23]+c[26]) + 120*(-c[17]-c[15]-c[16]-c[14]) + 300*(-c[ 4]-c[ 2]-c[ 3]-c[ 1]) + 1140*(-c[ 8]-c[ 5]-c[ 7]-c[ 6]) + 2880*(c[18]) + 2940*(c[11]+c[12]+c[ 9]+c[10]) + 8640*(-c[ 0]))+
                       u2.z*u1.w*(90*(c[23]+c[26]) + 180*(-c[16]-c[14]+c[25]) + 540*(-c[15]-c[17]) + 1170*(-c[ 3]-c[ 1]) + 1800*(-c[ 6]) + 2250*(-c[ 4]-c[ 2]) + 3150*(-c[ 8]-c[ 5]) + 4500*(-c[ 7]) + 6480*(c[18]) + 7110*(c[11]+c[ 9]) + 11430*(c[12]+c[10]) + 23040*(-c[ 0]))+
                       u1.z*u2.w*(30*(c[23]+c[21]+c[19]+c[26]) + 60*(-c[16]-c[14]) + 180*(c[25]) + 600*(-c[15]-c[17]) + 720*(-c[ 6]) + 1140*(-c[ 3]-c[ 1]) + 2670*(-c[ 8]-c[ 5]) + 4200*(-c[ 2]-c[ 4]) + 4680*(c[18]) + 4860*(-c[ 7]) + 5250*(c[11]+c[ 9]) + 13260*(c[12]+c[10]) + 19080*(-c[ 0]))+
                            u3.w*(30*(c[19]+c[21]) + 60*(-c[ 6]+c[25]) + 180*(-c[17]-c[15]) + 270*(-c[ 3]-c[ 1]) + 690*(-c[ 8]-c[ 5]) + 1080*(c[18]) + 1170*(c[11]+c[ 9]) + 1500*(-c[ 7]) + 2220*(-c[ 4]-c[ 2]) + 4770*(c[12]+c[10]) + 4800*(-c[ 0]))));
    d.x += u1.x*(u4.y*(          (30*(-c[ 2]-c[ 1]) + 150*(c[20]+c[22]) + 195*(-c[17]-c[16]) + 240*(c[26]) + 330*(-c[ 7]-c[ 6]) + 405*(c[10]+c[ 9]) + 630*(c[18]) + 885*(-c[ 4]-c[ 3]) + 1500*(-c[ 8]) + 2460*(c[11]+c[12]) + 2520*(-c[ 0])))+
                 u3.y*(u1.z*     (60*(c[24]+c[25]) + 120*(-c[ 5]) + 180*(-c[ 2]-c[ 1]) + 300*(c[20]+c[22]) + 660*(-c[17]-c[16]) + 840*(c[26]) + 1740*(-c[ 7]-c[ 6]) + 2280*(-c[ 4]-c[ 3]) + 2340*(c[ 9]+c[10]) + 3960*(c[18]) + 5280*(-c[ 8]) + 9180*(c[11]+c[12]) + 13440*(-c[ 0]))+
                            u1.w*(60*(c[25]) + 120*(-c[ 5]+c[20]) + 240*(-c[16]-c[ 1]+c[22]) + 480*(-c[ 2]+c[26]) + 780*(-c[17]) + 1020*(-c[ 6]) + 1920*(c[ 9]) + 2100*(-c[ 7]) + 2400*(-c[ 3]) + 2760*(c[10]) + 3060*(c[18]) + 4140*(-c[ 8]) + 4320*(-c[ 4]) + 7200*(c[11]) + 11520*(-c[ 0]+c[12])))+
                 u2.y*(u2.z*     (30*(-c[15]-c[14]) + 150*(c[20]+c[22]) + 240*(c[25]+c[24]) + 300*(-c[ 2]-c[ 1]) + 720*(-c[ 5]) + 750*(-c[17]-c[16]) + 1080*(c[26]) + 1920*(-c[ 4]-c[ 3]) + 3000*(-c[ 7]-c[ 6]) + 4470*(c[ 9]+c[10]) + 6480*(-c[ 8]) + 8640*(c[18]) + 11760*(c[11]+c[12]) + 23760*(-c[ 0]))+
                       u1.z*u1.w*(60*(-c[14]) + 120*(-c[15]+c[20]) + 240*(c[22]) + 540*(c[25]) + 600*(-c[16]) + 900*(-c[ 1]) + 1260*(c[26]) + 1440*(-c[ 5]) + 1980*(-c[ 2]) + 2100*(-c[17]) + 3300*(-c[ 6]) + 4320*(-c[ 3]) + 7680*(c[ 9]) + 7920*(-c[ 4]) + 8040*(-c[ 7]) + 11340*(-c[ 8]) + 11760*(c[10]) + 13320*(c[18]) + 19020*(c[11]) + 31020*(c[12]) + 42840*(-c[ 0]))+
                            u2.w*(30*(-c[14]-c[13]) + 90*(-c[15]-c[16]+c[21]+c[22]) + 300*(c[25]+c[26]) + 540*(-c[ 1]) + 720*(-c[ 5]-c[ 6]) + 1170*(-c[17]) + 1860*(-c[ 2]-c[ 3]) + 3060*(c[ 9]) + 4440*(-c[ 8]-c[ 7]) + 4890*(c[18]) + 6900*(-c[ 4]) + 6990*(c[11]+c[10]) + 18000*(-c[ 0]) + 18180*(c[12])))+
                 u1.y*(u3.z*     (60*(-c[15]-c[14]) + 180*(-c[ 2]-c[ 1]) + 300*(-c[17]-c[16]+c[24]+c[25]) + 540*(-c[ 4]-c[ 3]) + 600*(c[26]) + 1080*(-c[ 5]) + 2100*(-c[ 7]-c[ 6]) + 3120*(-c[ 8]) + 3540*(c[ 9]+c[10]) + 5820*(c[11]+c[12]) + 7920*(c[18]) + 17280*(-c[ 0]))+
                       u2.z*u1.w*(120*(-c[14]) + 420*(-c[15]-c[16]) + 840*(-c[ 1]) + 1080*(c[25]+c[26]) + 1560*(-c[17]) + 2040*(-c[ 2]-c[ 3]) + 3420*(-c[ 5]-c[ 6]) + 4080*(-c[ 4]) + 9180*(-c[ 8]-c[ 7]) + 9600*(c[ 9]) + 15240*(c[11]+c[10]) + 18360*(c[18]) + 25080*(c[12]) + 48960*(-c[ 0]))+
                       u1.z*u2.w*(60*(-c[14]) + 120*(-c[16]+c[19]) + 240*(c[21]) + 540*(c[26]) + 600*(-c[15]) + 900*(-c[ 1]) + 1260*(c[25]) + 1440*(-c[ 6]) + 1980*(-c[ 3]) + 2100*(-c[17]) + 3300*(-c[ 5]) + 4320*(-c[ 2]) + 7680*(c[ 9]) + 7920*(-c[ 4]) + 8040*(-c[ 8]) + 11340*(-c[ 7]) + 11760*(c[11]) + 13320*(c[18]) + 19020*(c[10]) + 31020*(c[12]) + 42840*(-c[ 0]))+
                            u3.w*(60*(c[26]) + 120*(-c[ 6]+c[19]) + 240*(-c[15]-c[ 1]+c[21]) + 480*(-c[ 3]+c[25]) + 780*(-c[17]) + 1020*(-c[ 5]) + 1920*(c[ 9]) + 2100*(-c[ 8]) + 2400*(-c[ 2]) + 2760*(c[11]) + 3060*(c[18]) + 4140*(-c[ 7]) + 4320*(-c[ 4]) + 7200*(c[10]) + 11520*(-c[ 0]+c[12])))+
                      (u4.z*     (30*(-c[17]-c[ 4]-c[ 2]-c[15]-c[16]-c[ 3]-c[14]-c[ 1]) + 120*(c[24]+c[25]+c[23]+c[26]) + 480*(-c[ 8]-c[ 5]-c[ 7]-c[ 6]) + 870*(c[11]+c[12]+c[ 9]+c[10]) + 2520*(c[18]) + 4320*(-c[ 0]))+
                       u3.z*u1.w*(60*(-c[16]-c[14]) + 180*(-c[ 3]-c[ 1]) + 300*(-c[17]-c[15]+c[23]+c[26]) + 540*(-c[ 4]-c[ 2]) + 600*(c[25]) + 1080*(-c[ 6]) + 2100*(-c[ 8]-c[ 5]) + 3120*(-c[ 7]) + 3540*(c[11]+c[ 9]) + 5820*(c[12]+c[10]) + 7920*(c[18]) + 17280*(-c[ 0]))+
                       u2.z*u2.w*(30*(-c[16]-c[14]) + 150*(c[21]+c[19]) + 240*(c[23]+c[26]) + 300*(-c[ 3]-c[ 1]) + 720*(-c[ 6]) + 750*(-c[15]-c[17]) + 1080*(c[25]) + 1920*(-c[ 4]-c[ 2]) + 3000*(-c[ 8]-c[ 5]) + 4470*(c[11]+c[ 9]) + 6480*(-c[ 7]) + 8640*(c[18]) + 11760*(c[12]+c[10]) + 23760*(-c[ 0]))+
                       u1.z*u3.w*(60*(c[23]+c[26]) + 120*(-c[ 6]) + 180*(-c[ 3]-c[ 1]) + 300*(c[21]+c[19]) + 660*(-c[15]-c[17]) + 840*(c[25]) + 1740*(-c[ 8]-c[ 5]) + 2280*(-c[ 2]-c[ 4]) + 2340*(c[11]+c[ 9]) + 3960*(c[18]) + 5280*(-c[ 7]) + 9180*(c[12]+c[10]) + 13440*(-c[ 0]))+
                            u4.w*(30*(-c[ 3]-c[ 1]) + 150*(c[21]+c[19]) + 195*(-c[17]-c[15]) + 240*(c[25]) + 330*(-c[ 8]-c[ 5]) + 405*(c[11]+c[ 9]) + 630*(c[18]) + 885*(-c[ 4]-c[ 2]) + 1500*(-c[ 7]) + 2460*(c[12]+c[10]) + 2520*(-c[ 0]))));
    d.x +=      (u5.y*(          (54*(-c[ 7]-c[ 6]-c[17]-c[16]+c[10]+c[ 9]+c[22]+c[20]) + 132*(-c[ 4]-c[ 3]+c[18]+c[26]) + 456*(-c[ 8]-c[ 0]+c[11]+c[12])))+
                 u4.y*(u1.z*     (30*(c[24]+c[25]) + 135*(c[22]+c[20]) + 210*(-c[17]-c[16]) + 345*(-c[ 7]-c[ 6]) + 390*(c[ 9]+c[10]) + 435*(-c[ 4]-c[ 3]) + 690*(c[26]) + 1080*(c[18]) + 1860*(-c[ 8]) + 2010*(c[11]+c[12]) + 3060*(-c[ 0]))+
                            u1.w*(30*(-c[ 2]+c[25]) + 75*(-c[16]+c[20]) + 210*(-c[ 6]+c[22]) + 330*(-c[17]+c[ 9]) + 465*(-c[ 7]-c[ 3]+c[10]+c[26]) + 855*(-c[ 4]+c[18]) + 1680*(-c[ 8]+c[11]) + 2790*(-c[ 0]+c[12])))+
                 u3.y*(u2.z*     (60*(-c[ 5]) + 90*(c[22]+c[20]) + 150*(c[25]+c[24]) + 300*(-c[17]-c[16]) + 510*(-c[ 4]-c[ 3]) + 780*(-c[ 7]-c[ 6]) + 900*(c[ 9]+c[10]) + 1320*(c[26]) + 2880*(-c[ 8]) + 3240*(c[11]+c[12]+c[18]) + 7200*(-c[ 0]))+
                       u1.z*u1.w*(120*(-c[ 5]+c[20]) + 180*(-c[ 2]) + 240*(-c[16]) + 360*(c[25]+c[22]) + 900*(-c[ 6]) + 1020*(-c[17]) + 1140*(-c[ 3]) + 1680*(c[ 9]) + 1740*(c[26]) + 2160*(-c[ 4]) + 2400*(-c[ 7]) + 2460*(c[10]) + 5220*(c[18]) + 5520*(-c[ 8]) + 5820*(c[11]) + 9840*(c[12]) + 13920*(-c[ 0]))+
                            u2.w*(30*(-c[16]+c[20]) + 60*(-c[ 5]+c[21]) + 210*(-c[ 6]-c[ 2]+c[25]+c[22]) + 510*(-c[ 3]+c[26]) + 690*(-c[17]+c[ 9]) + 1500*(-c[ 7]+c[10]) + 1980*(-c[ 4]+c[18]) + 2310*(-c[ 8]+c[11]) + 6300*(-c[ 0]+c[12])))+
                 u2.y*(u3.z*     (180*(-c[ 5]-c[17]-c[16]) + 240*(-c[ 4]-c[ 3]) + 270*(c[24]+c[25]) + 810*(-c[ 7]-c[ 6]) + 900*(c[ 9]+c[10]) + 1140*(c[26]) + 2040*(-c[ 8]) + 2220*(c[11]+c[12]) + 4560*(c[18]) + 7800*(-c[ 0]))+
                       u2.z*u1.w*(30*(-c[15]+c[20]) + 120*(c[22]) + 240*(-c[16]) + 300*(-c[ 2]) + 630*(-c[ 5]) + 870*(-c[ 3]) + 1050*(-c[17]+c[25]) + 1380*(-c[ 6]) + 1770*(-c[ 4]) + 2250*(c[26]) + 2940*(c[ 9]) + 4050*(-c[ 7]) + 4230*(c[10]) + 6300*(-c[ 8]) + 6840*(c[11]) + 11160*(c[18]) + 11580*(c[12]) + 23580*(-c[ 0]))+
                       u1.z*u2.w*(30*(c[19]+c[20]) + 60*(-c[15]-c[16]) + 180*(c[21]+c[22]) + 630*(-c[ 5]-c[ 6]) + 840*(-c[ 2]-c[ 3]) + 1320*(c[25]+c[26]) + 1620*(-c[17]) + 2520*(c[ 9]) + 3540*(-c[ 4]) + 5670*(-c[ 8]-c[ 7]) + 5760*(c[11]+c[10]) + 8340*(c[18]) + 15960*(c[12]) + 21840*(-c[ 0]))+
                            u3.w*(30*(-c[15]+c[19]) + 60*(-c[ 6]+c[22]) + 210*(-c[ 5]-c[ 3]+c[21]+c[26]) + 510*(-c[ 2]+c[25]) + 690*(-c[17]+c[ 9]) + 1500*(-c[ 8]+c[11]) + 1980*(-c[ 4]+c[18]) + 2310*(-c[ 7]+c[10]) + 6300*(-c[ 0]+c[12])))+
                 u1.y*(u4.z*     (30*(-c[17]-c[ 4]-c[16]-c[ 3]) + 180*(-c[ 5]) + 210*(c[24]+c[25]) + 390*(-c[ 7]-c[ 6]+c[ 9]+c[10]) + 420*(c[26]) + 480*(c[11]+c[12]) + 600*(-c[ 8]) + 3060*(c[18]) + 3960*(-c[ 0]))+
                       u3.z*u1.w*(60*(-c[15]-c[16]) + 180*(-c[ 2]-c[ 3]) + 360*(-c[17]) + 480*(-c[ 4]) + 900*(-c[ 5]-c[ 6]) + 1140*(c[25]+c[26]) + 2160*(c[ 9]) + 2760*(-c[ 8]-c[ 7]) + 2940*(c[11]+c[10]) + 4800*(c[12]) + 10080*(c[18]) + 16560*(-c[ 0]))+
                       u2.z*u2.w*(30*(-c[16]+c[19]) + 120*(c[21]) + 240*(-c[15]) + 300*(-c[ 3]) + 630*(-c[ 6]) + 870*(-c[ 2]) + 1050*(-c[17]+c[26]) + 1380*(-c[ 5]) + 1770*(-c[ 4]) + 2250*(c[25]) + 2940*(c[ 9]) + 4050*(-c[ 8]) + 4230*(c[11]) + 6300*(-c[ 7]) + 6840*(c[10]) + 11160*(c[18]) + 11580*(c[12]) + 23580*(-c[ 0]))+
                       u1.z*u3.w*(120*(-c[ 6]+c[19]) + 180*(-c[ 3]) + 240*(-c[15]) + 360*(c[21]+c[26]) + 900*(-c[ 5]) + 1020*(-c[17]) + 1140*(-c[ 2]) + 1680*(c[ 9]) + 1740*(c[25]) + 2160*(-c[ 4]) + 2400*(-c[ 8]) + 2460*(c[11]) + 5220*(c[18]) + 5520*(-c[ 7]) + 5820*(c[10]) + 9840*(c[12]) + 13920*(-c[ 0]))+
                            u4.w*(30*(-c[ 3]+c[26]) + 75*(-c[15]+c[19]) + 210*(-c[ 5]+c[21]) + 330*(-c[17]+c[ 9]) + 465*(-c[ 8]-c[ 2]+c[11]+c[25]) + 855*(-c[ 4]+c[18]) + 1680*(-c[ 7]+c[10]) + 2790*(-c[ 0]+c[12])))+
                      (u5.z*     (60*(-c[ 8]-c[ 5]-c[ 7]-c[ 6]+c[24]+c[25]+c[23]+c[26]) + 720*(-c[ 0]+c[18]))+
                       u4.z*u1.w*(30*(-c[17]-c[ 4]-c[ 2]-c[15]) + 180*(-c[ 6]) + 210*(c[23]+c[26]) + 390*(-c[ 8]-c[ 5]+c[11]+c[ 9]) + 420*(c[25]) + 480*(c[12]+c[10]) + 600*(-c[ 7]) + 3060*(c[18]) + 3960*(-c[ 0]))+
                       u3.z*u2.w*(180*(-c[17]-c[15]-c[ 6]) + 240*(-c[ 4]-c[ 2]) + 270*(c[23]+c[26]) + 810*(-c[ 8]-c[ 5]) + 900*(c[11]+c[ 9]) + 1140*(c[25]) + 2040*(-c[ 7]) + 2220*(c[12]+c[10]) + 4560*(c[18]) + 7800*(-c[ 0]))+
                       u2.z*u3.w*(60*(-c[ 6]) + 90*(c[19]+c[21]) + 150*(c[23]+c[26]) + 300*(-c[15]-c[17]) + 510*(-c[ 4]-c[ 2]) + 780*(-c[ 8]-c[ 5]) + 900*(c[11]+c[ 9]) + 1320*(c[25]) + 2880*(-c[ 7]) + 3240*(c[12]+c[10]+c[18]) + 7200*(-c[ 0]))+
                       u1.z*u4.w*(30*(c[23]+c[26]) + 135*(c[19]+c[21]) + 210*(-c[15]-c[17]) + 345*(-c[ 8]-c[ 5]) + 390*(c[11]+c[ 9]) + 435*(-c[ 2]-c[ 4]) + 690*(c[25]) + 1080*(c[18]) + 1860*(-c[ 7]) + 2010*(c[12]+c[10]) + 3060*(-c[ 0]))+
                            u5.w*(54*(-c[ 8]-c[17]-c[ 5]-c[15]+c[11]+c[ 9]+c[21]+c[19]) + 132*(-c[ 4]-c[ 2]+c[18]+c[25]) + 456*(-c[ 0]-c[ 7]+c[12]+c[10]))));

    d.y += u5.x*(     (          (36*(-c[14]+c[17]) + 222*(-c[ 1]-c[ 5]-c[ 9]-c[ 6]+c[ 8]+c[12]+c[ 4]+c[ 7]))));
    d.y += u4.x*(u1.y*(          (15*(-c[15]-c[18]-c[13]-c[16]) + 90*(-c[14]) + 120*(-c[ 3]-c[11]-c[10]-c[ 2]) + 270*(c[17]) + 720*(-c[ 1]-c[ 5]) + 840*(-c[ 0]) + 1020*(c[ 4]+c[ 7]) + 1200*(-c[ 6]-c[ 9]) + 1500*(c[ 8]+c[12])))+
                      (u1.z*     (180*(-c[14]+c[17]) + 630*(-c[ 1]+c[ 4]) + 1110*(-c[ 6]-c[ 5]+c[ 8]+c[ 7]) + 1590*(-c[ 9]+c[12]))+
                            u1.w*(15*(-c[15]-c[18]-c[13]-c[16]) + 90*(-c[14]) + 120*(-c[11]-c[10]-c[ 2]-c[ 3]) + 270*(c[17]) + 720*(-c[ 6]-c[ 1]) + 840*(-c[ 0]) + 1020*(c[ 8]+c[ 4]) + 1200*(-c[ 9]-c[ 5]) + 1500*(c[12]+c[ 7]))));
    d.y += u3.x*(u2.y*(          (30*(-c[15]-c[13]) + 60*(-c[14]) + 90*(-c[18]-c[16]) + 240*(-c[ 2]) + 480*(-c[ 3]-c[10]) + 720*(-c[11]) + 780*(-c[ 5]-c[ 1]+c[17]) + 1680*(c[ 4]+c[ 7]) + 2400*(-c[ 6]-c[ 9]) + 3360*(-c[ 0]) + 3900*(c[ 8]+c[12])))+
                 u1.y*(u1.z*     (60*(-c[15]-c[16]) + 120*(-c[18]) + 240*(-c[ 3]-c[ 2]) + 300*(-c[14]) + 720*(-c[11]-c[10]) + 1020*(c[17]) + 1560*(-c[ 1]) + 2160*(c[ 4]) + 2640*(-c[ 5]) + 3360*(-c[ 0]) + 3840*(c[ 7]) + 4560*(-c[ 6]) + 5760*(c[ 8]) + 6720*(-c[ 9]) + 8520*(c[12]))+
                            u1.w*(60*(-c[13]) + 120*(-c[15]-c[16]) + 180*(-c[18]-c[14]) + 720*(-c[ 2]-c[ 3]) + 1200*(-c[11]-c[10]) + 1620*(c[17]) + 1800*(-c[ 1]) + 2880*(-c[ 5]-c[ 6]) + 3600*(c[ 4]) + 5040*(-c[ 9]) + 5280*(c[ 8]+c[ 7]) + 6720*(-c[ 0]) + 8040*(c[12])))+
                      (u2.z*     (300*(-c[14]+c[17]) + 600*(-c[ 1]+c[ 4]) + 1980*(-c[ 6]-c[ 5]+c[ 8]+c[ 7]) + 4440*(-c[ 9]+c[12]))+
                       u1.z*u1.w*(60*(-c[15]-c[16]) + 120*(-c[18]) + 240*(-c[ 2]-c[ 3]) + 300*(-c[14]) + 720*(-c[11]-c[10]) + 1020*(c[17]) + 1560*(-c[ 1]) + 2160*(c[ 4]) + 2640*(-c[ 6]) + 3360*(-c[ 0]) + 3840*(c[ 8]) + 4560*(-c[ 5]) + 5760*(c[ 7]) + 6720*(-c[ 9]) + 8520*(c[12]))+
                            u2.w*(30*(-c[13]-c[16]) + 60*(-c[14]) + 90*(-c[15]-c[18]) + 240*(-c[ 3]) + 480*(-c[11]-c[ 2]) + 720*(-c[10]) + 780*(-c[ 6]-c[ 1]+c[17]) + 1680*(c[ 8]+c[ 4]) + 2400*(-c[ 9]-c[ 5]) + 3360*(-c[ 0]) + 3900*(c[12]+c[ 7]))));
    d.y += u2.x*(u3.y*(          (30*(c[20]+c[26]) + 60*(-c[ 2]+c[22]) + 180*(-c[18]-c[16]) + 270*(-c[ 5]-c[ 1]) + 690*(-c[10]-c[ 3]) + 1080*(c[17]) + 1170*(c[ 7]+c[ 4]) + 1500*(-c[11]) + 2220*(-c[ 9]-c[ 6]) + 4770*(c[ 8]+c[12]) + 4800*(-c[ 0])))+
                 u2.y*(u1.z*     (30*(-c[15]-c[24]) + 60*(c[20]) + 90*(-c[14]+c[26]+c[22]) + 180*(-c[ 2]) + 210*(-c[16]) + 540*(-c[18]) + 780*(-c[ 3]) + 1020*(-c[ 1]) + 1800*(-c[ 5]) + 2070*(c[17]) + 2130*(-c[10]) + 2460*(c[ 4]) + 3060*(-c[11]) + 4350*(c[ 7]) + 6540*(-c[ 6]) + 9780*(-c[ 9]) + 9900*(-c[ 0]) + 10710*(c[ 8]) + 16260*(c[12]))+
                            u1.w*(30*(c[26]+c[21]) + 60*(-c[13]) + 90*(-c[15]-c[14]+c[22]) + 270*(-c[16]) + 600*(-c[18]) + 720*(-c[ 2]) + 1350*(-c[ 1]) + 1380*(-c[ 3]) + 2130*(-c[ 5]) + 2730*(-c[10]) + 3510*(-c[11]+c[17]) + 4080*(-c[ 6]) + 4200*(c[ 4]) + 6090*(c[ 7]) + 7320*(-c[ 9]) + 9750*(c[ 8]) + 14580*(-c[ 0]) + 15210*(c[12])))+
                 u1.y*(u2.z*     (30*(-c[16]-c[15]+c[25]+c[20]+c[22]) + 60*(-c[24]) + 90*(c[26]) + 120*(-c[ 3]-c[ 2]) + 270*(-c[14]) + 360*(-c[18]) + 990*(-c[ 1]) + 1170*(c[17]) + 1470*(-c[10]) + 1530*(c[ 4]) + 1560*(-c[11]) + 3060*(-c[ 5]) + 4710*(c[ 7]) + 5040*(-c[ 0]) + 5820*(-c[ 6]) + 7470*(c[ 8]) + 13500*(-c[ 9]) + 17370*(c[12]))+
                       u1.z*u1.w*(60*(c[25]+c[26]+c[22]+c[21]) + 240*(-c[15]-c[16]) + 360*(-c[14]) + 960*(-c[ 2]-c[ 3]) + 1080*(-c[18]) + 2640*(-c[ 1]) + 4320*(c[17]) + 5100*(-c[11]-c[10]) + 5520*(c[ 4]) + 7440*(-c[ 5]-c[ 6]) + 14340*(c[ 8]+c[ 7]) + 20160*(-c[ 0]) + 20400*(-c[ 9]) + 33360*(c[12]))+
                            u2.w*(30*(c[25]+c[22]) + 60*(-c[13]) + 90*(-c[14]-c[16]+c[21]) + 270*(-c[15]) + 600*(-c[18]) + 720*(-c[ 3]) + 1350*(-c[ 1]) + 1380*(-c[ 2]) + 2130*(-c[ 6]) + 2730*(-c[11]) + 3510*(-c[10]+c[17]) + 4080*(-c[ 5]) + 4200*(c[ 4]) + 6090*(c[ 8]) + 7320*(-c[ 9]) + 9750*(c[ 7]) + 14580*(-c[ 0]) + 15210*(c[12])))+
                      (u3.z*     (30*(-c[24]-c[23]+c[25]+c[26]) + 180*(-c[14]+c[17]) + 240*(-c[ 1]+c[ 4]) + 1530*(-c[ 5]-c[ 6]+c[ 8]+c[ 7]) + 5880*(-c[ 9]+c[12]))+
                       u2.z*u1.w*(30*(-c[15]-c[16]+c[26]+c[21]+c[19]) + 60*(-c[23]) + 90*(c[25]) + 120*(-c[ 2]-c[ 3]) + 270*(-c[14]) + 360*(-c[18]) + 990*(-c[ 1]) + 1170*(c[17]) + 1470*(-c[11]) + 1530*(c[ 4]) + 1560*(-c[10]) + 3060*(-c[ 6]) + 4710*(c[ 8]) + 5040*(-c[ 0]) + 5820*(-c[ 5]) + 7470*(c[ 7]) + 13500*(-c[ 9]) + 17370*(c[12]))+
                       u1.z*u2.w*(30*(-c[23]-c[16]) + 60*(c[19]) + 90*(-c[14]+c[25]+c[21]) + 180*(-c[ 3]) + 210*(-c[15]) + 540*(-c[18]) + 780*(-c[ 2]) + 1020*(-c[ 1]) + 1800*(-c[ 6]) + 2070*(c[17]) + 2130*(-c[11]) + 2460*(c[ 4]) + 3060*(-c[10]) + 4350*(c[ 8]) + 6540*(-c[ 5]) + 9780*(-c[ 9]) + 9900*(-c[ 0]) + 10710*(c[ 7]) + 16260*(c[12]))+
                            u3.w*(30*(c[25]+c[19]) + 60*(-c[ 3]+c[21]) + 180*(-c[18]-c[15]) + 270*(-c[ 6]-c[ 1]) + 690*(-c[11]-c[ 2]) + 1080*(c[17]) + 1170*(c[ 8]+c[ 4]) + 1500*(-c[10]) + 2220*(-c[ 9]-c[ 5]) + 4770*(c[12]+c[ 7]) + 4800*(-c[ 0]))));
    d.y += u1.x*(u4.y*(          (30*(-c[ 5]-c[ 1]) + 150*(c[20]+c[26]) + 195*(-c[18]-c[16]) + 240*(c[22]) + 330*(-c[10]-c[ 3]) + 405*(c[ 7]+c[ 4]) + 630*(c[17]) + 885*(-c[ 9]-c[ 6]) + 1500*(-c[11]) + 2460*(c[ 8]+c[12]) + 2520*(-c[ 0])))+
                 u3.y*(u1.z*     (60*(-c[24]) + 180*(-c[ 1]) + 360*(-c[16]) + 420*(-c[ 5]+c[20]) + 540*(c[26]) + 600*(-c[ 3]+c[22]) + 900*(-c[18]) + 1200*(c[ 4]) + 1620*(c[17]) + 1680*(-c[10]) + 2040*(c[ 7]) + 3660*(-c[ 6]) + 4680*(-c[11]) + 5580*(-c[ 9]) + 7680*(c[ 8]) + 8160*(-c[ 0]) + 12180*(c[12]))+
                            u1.w*(60*(c[21]) + 120*(-c[ 2]+c[20]) + 240*(-c[16]-c[ 1]+c[26]) + 480*(-c[ 5]+c[22]) + 780*(-c[18]) + 1020*(-c[ 3]) + 1920*(c[ 4]) + 2100*(-c[10]) + 2400*(-c[ 6]) + 2760*(c[ 7]) + 3060*(c[17]) + 4140*(-c[11]) + 4320*(-c[ 9]) + 7200*(c[ 8]) + 11520*(-c[ 0]+c[12])))+
                 u2.y*(u2.z*     (30*(-c[14]) + 90*(c[25]) + 150*(-c[16]) + 210*(-c[24]) + 240*(-c[ 3]) + 300*(-c[ 1]) + 390*(c[20]) + 480*(c[22]) + 720*(c[26]) + 1200*(c[ 4]) + 1260*(-c[18]-c[ 5]) + 1380*(c[17]) + 2460*(-c[10]) + 3390*(c[ 7]) + 4800*(-c[11]) + 5130*(-c[ 6]) + 8460*(c[ 8]) + 8640*(-c[ 0]) + 12150*(-c[ 9]) + 20520*(c[12]))+
                       u1.z*u1.w*(60*(-c[15]-c[14]) + 180*(c[25]) + 240*(c[20]+c[21]) + 300*(-c[16]) + 360*(-c[ 2]) + 660*(c[26]) + 780*(c[22]) + 900*(-c[ 1]) + 1200*(-c[ 3]) + 2580*(-c[18]) + 3180*(-c[ 5]) + 4200*(c[ 4]) + 5640*(c[17]) + 6600*(-c[ 6]) + 7140*(-c[10]) + 9960*(-c[11]) + 10500*(c[ 7]) + 16560*(c[ 8]) + 18840*(-c[ 9]) + 27720*(-c[ 0]) + 39900*(c[12]))+
                            u2.w*(30*(-c[14]-c[13]) + 90*(-c[15]-c[16]+c[25]+c[26]) + 300*(c[21]+c[22]) + 540*(-c[ 1]) + 720*(-c[ 2]-c[ 3]) + 1170*(-c[18]) + 1860*(-c[ 5]-c[ 6]) + 3060*(c[ 4]) + 4440*(-c[11]-c[10]) + 4890*(c[17]) + 6900*(-c[ 9]) + 6990*(c[ 8]+c[ 7]) + 18000*(-c[ 0]) + 18180*(c[12])))+
                 u1.y*(u3.z*     (60*(-c[14]) + 120*(c[20]+c[22]) + 180*(-c[ 1]+c[25]) + 240*(-c[24]) + 420*(c[ 4]+c[17]+c[26]) + 600*(-c[18]) + 1200*(-c[10]) + 1380*(-c[ 5]) + 1560*(-c[11]) + 2280*(c[ 7]) + 2820*(-c[ 6]) + 2880*(-c[ 0]) + 3720*(c[ 8]) + 11100*(-c[ 9]) + 14340*(c[12]))+
                       u2.z*u1.w*(60*(-c[16]-c[15]) + 120*(-c[14]+c[20]+c[19]) + 240*(-c[ 3]-c[ 2]) + 300*(c[22]+c[21]) + 600*(c[25]+c[26]) + 840*(-c[ 1]) + 2520*(-c[18]) + 2640*(c[ 4]) + 3000*(c[17]) + 5520*(-c[ 5]-c[ 6]) + 6900*(-c[11]-c[10]) + 11520*(c[ 8]+c[ 7]) + 18720*(-c[ 0]) + 25920*(-c[ 9]) + 42840*(c[12]))+
                       u1.z*u2.w*(60*(-c[14]-c[16]) + 180*(c[26]) + 240*(c[22]+c[19]) + 300*(-c[15]) + 360*(-c[ 3]) + 660*(c[25]) + 780*(c[21]) + 900*(-c[ 1]) + 1200*(-c[ 2]) + 2580*(-c[18]) + 3180*(-c[ 6]) + 4200*(c[ 4]) + 5640*(c[17]) + 6600*(-c[ 5]) + 7140*(-c[11]) + 9960*(-c[10]) + 10500*(c[ 8]) + 16560*(c[ 7]) + 18840*(-c[ 9]) + 27720*(-c[ 0]) + 39900*(c[12]))+
                            u3.w*(60*(c[22]) + 120*(-c[ 3]+c[19]) + 240*(-c[15]-c[ 1]+c[25]) + 480*(-c[ 6]+c[21]) + 780*(-c[18]) + 1020*(-c[ 2]) + 1920*(c[ 4]) + 2100*(-c[11]) + 2400*(-c[ 5]) + 2760*(c[ 8]) + 3060*(c[17]) + 4140*(-c[10]) + 4320*(-c[ 9]) + 7200*(c[ 7]) + 11520*(-c[ 0]+c[12])))+
                      (u4.z*     (30*(-c[14]-c[ 1]+c[17]+c[ 4]) + 90*(-c[24]-c[23]+c[25]+c[26]) + 510*(-c[ 5]-c[ 6]+c[ 8]+c[ 7]) + 3510*(-c[ 9]+c[12]))+
                       u3.z*u1.w*(60*(-c[14]) + 120*(c[21]+c[19]) + 180*(-c[ 1]+c[26]) + 240*(-c[23]) + 420*(c[25]+c[ 4]+c[17]) + 600*(-c[18]) + 1200*(-c[11]) + 1380*(-c[ 6]) + 1560*(-c[10]) + 2280*(c[ 8]) + 2820*(-c[ 5]) + 2880*(-c[ 0]) + 3720*(c[ 7]) + 11100*(-c[ 9]) + 14340*(c[12]))+
                       u2.z*u2.w*(30*(-c[14]) + 90*(c[26]) + 150*(-c[15]) + 210*(-c[23]) + 240*(-c[ 2]) + 300*(-c[ 1]) + 390*(c[19]) + 480*(c[21]) + 720*(c[25]) + 1200*(c[ 4]) + 1260*(-c[18]-c[ 6]) + 1380*(c[17]) + 2460*(-c[11]) + 3390*(c[ 8]) + 4800*(-c[10]) + 5130*(-c[ 5]) + 8460*(c[ 7]) + 8640*(-c[ 0]) + 12150*(-c[ 9]) + 20520*(c[12]))+
                       u1.z*u3.w*(60*(-c[23]) + 180*(-c[ 1]) + 360*(-c[15]) + 420*(-c[ 6]+c[19]) + 540*(c[25]) + 600*(-c[ 2]+c[21]) + 900*(-c[18]) + 1200*(c[ 4]) + 1620*(c[17]) + 1680*(-c[11]) + 2040*(c[ 8]) + 3660*(-c[ 5]) + 4680*(-c[10]) + 5580*(-c[ 9]) + 7680*(c[ 7]) + 8160*(-c[ 0]) + 12180*(c[12]))+
                            u4.w*(30*(-c[ 1]-c[ 6]) + 150*(c[25]+c[19]) + 195*(-c[18]-c[15]) + 240*(c[21]) + 330*(-c[11]-c[ 2]) + 405*(c[ 8]+c[ 4]) + 630*(c[17]) + 885*(-c[ 9]-c[ 5]) + 1500*(-c[10]) + 2460*(c[12]+c[ 7]) + 2520*(-c[ 0]))));
    d.y +=      (u5.y*(          (54*(-c[10]-c[18]-c[ 3]-c[16]+c[ 7]+c[26]+c[ 4]+c[20]) + 132*(-c[ 9]-c[ 6]+c[17]+c[22]) + 456*(-c[11]-c[ 0]+c[ 8]+c[12])))+
                 u4.y*(u1.z*     (30*(-c[ 5]-c[24]) + 135*(-c[ 3]-c[16]) + 210*(c[ 4]+c[20]) + 345*(c[ 7]+c[26]) + 390*(-c[10]-c[18]) + 435*(c[17]+c[22]) + 690*(-c[ 6]) + 1080*(-c[ 9]) + 1860*(c[ 8]) + 2010*(-c[11]-c[ 0]) + 3060*(c[12]))+
                            u1.w*(30*(-c[ 5]+c[21]) + 75*(-c[16]+c[20]) + 210*(-c[ 3]+c[26]) + 330*(-c[18]+c[ 4]) + 465*(-c[10]-c[ 6]+c[ 7]+c[22]) + 855*(-c[ 9]+c[17]) + 1680*(-c[11]+c[ 8]) + 2790*(-c[ 0]+c[12])))+
                 u3.y*(u2.z*     (60*(c[25]) + 90*(-c[ 3]-c[16]) + 150*(-c[24]-c[ 5]) + 300*(c[ 4]+c[20]) + 510*(c[17]+c[22]) + 780*(c[ 7]+c[26]) + 900*(-c[18]-c[10]) + 1320*(-c[ 6]) + 2880*(c[ 8]) + 3240*(-c[11]-c[ 0]-c[ 9]) + 7200*(c[12]))+
                       u1.z*u1.w*(120*(-c[16]+c[25]) + 180*(c[21]) + 240*(c[20]) + 360*(-c[ 3]-c[ 5]) + 900*(c[26]) + 1020*(c[ 4]) + 1140*(c[22]) + 1680*(-c[18]) + 1740*(-c[ 6]) + 2160*(c[17]) + 2400*(c[ 7]) + 2460*(-c[10]) + 5220*(-c[ 9]) + 5520*(c[ 8]) + 5820*(-c[11]) + 9840*(-c[ 0]) + 13920*(c[12]))+
                            u2.w*(30*(-c[16]+c[20]) + 60*(-c[ 2]+c[25]) + 210*(-c[ 3]-c[ 5]+c[26]+c[21]) + 510*(-c[ 6]+c[22]) + 690*(-c[18]+c[ 4]) + 1500*(-c[10]+c[ 7]) + 1980*(-c[ 9]+c[17]) + 2310*(-c[11]+c[ 8]) + 6300*(-c[ 0]+c[12])))+
                 u2.y*(u3.z*     (180*(c[25]+c[ 4]+c[20]) + 240*(c[17]+c[22]) + 270*(-c[ 5]-c[24]) + 810*(c[ 7]+c[26]) + 900*(-c[18]-c[10]) + 1140*(-c[ 6]) + 2040*(c[ 8]) + 2220*(-c[11]-c[ 0]) + 4560*(-c[ 9]) + 7800*(c[12]))+
                       u2.z*u1.w*(30*(-c[16]+c[19]) + 120*(-c[ 3]) + 240*(c[20]) + 300*(c[21]) + 630*(c[25]) + 870*(c[22]) + 1050*(-c[ 5]+c[ 4]) + 1380*(c[26]) + 1770*(c[17]) + 2250*(-c[ 6]) + 2940*(-c[18]) + 4050*(c[ 7]) + 4230*(-c[10]) + 6300*(c[ 8]) + 6840*(-c[11]) + 11160*(-c[ 9]) + 11580*(-c[ 0]) + 23580*(c[12]))+
                       u1.z*u2.w*(30*(-c[15]-c[16]) + 60*(c[20]+c[19]) + 180*(-c[ 3]-c[ 2]) + 630*(c[25]+c[26]) + 840*(c[22]+c[21]) + 1320*(-c[ 5]-c[ 6]) + 1620*(c[ 4]) + 2520*(-c[18]) + 3540*(c[17]) + 5670*(c[ 8]+c[ 7]) + 5760*(-c[11]-c[10]) + 8340*(-c[ 9]) + 15960*(-c[ 0]) + 21840*(c[12]))+
                            u3.w*(30*(-c[15]+c[19]) + 60*(-c[ 3]+c[26]) + 210*(-c[ 2]-c[ 6]+c[25]+c[22]) + 510*(-c[ 5]+c[21]) + 690*(-c[18]+c[ 4]) + 1500*(-c[11]+c[ 8]) + 1980*(-c[ 9]+c[17]) + 2310*(-c[10]+c[ 7]) + 6300*(-c[ 0]+c[12])))+
                 u1.y*(u4.z*     (30*(c[20]+c[22]+c[17]+c[ 4]) + 180*(c[25]) + 210*(-c[24]-c[ 5]) + 390*(-c[18]-c[10]+c[ 7]+c[26]) + 420*(-c[ 6]) + 480*(-c[11]-c[ 0]) + 600*(c[ 8]) + 3060*(-c[ 9]) + 3960*(c[12]))+
                       u3.z*u1.w*(60*(c[20]+c[19]) + 180*(c[22]+c[21]) + 360*(c[ 4]) + 480*(c[17]) + 900*(c[25]+c[26]) + 1140*(-c[ 5]-c[ 6]) + 2160*(-c[18]) + 2760*(c[ 8]+c[ 7]) + 2940*(-c[11]-c[10]) + 4800*(-c[ 0]) + 10080*(-c[ 9]) + 16560*(c[12]))+
                       u2.z*u2.w*(30*(-c[15]+c[20]) + 120*(-c[ 2]) + 240*(c[19]) + 300*(c[22]) + 630*(c[26]) + 870*(c[21]) + 1050*(-c[ 6]+c[ 4]) + 1380*(c[25]) + 1770*(c[17]) + 2250*(-c[ 5]) + 2940*(-c[18]) + 4050*(c[ 8]) + 4230*(-c[11]) + 6300*(c[ 7]) + 6840*(-c[10]) + 11160*(-c[ 9]) + 11580*(-c[ 0]) + 23580*(c[12]))+
                       u1.z*u3.w*(120*(-c[15]+c[26]) + 180*(c[22]) + 240*(c[19]) + 360*(-c[ 2]-c[ 6]) + 900*(c[25]) + 1020*(c[ 4]) + 1140*(c[21]) + 1680*(-c[18]) + 1740*(-c[ 5]) + 2160*(c[17]) + 2400*(c[ 8]) + 2460*(-c[11]) + 5220*(-c[ 9]) + 5520*(c[ 7]) + 5820*(-c[10]) + 9840*(-c[ 0]) + 13920*(c[12]))+
                            u4.w*(30*(-c[ 6]+c[22]) + 75*(-c[15]+c[19]) + 210*(-c[ 2]+c[25]) + 330*(-c[18]+c[ 4]) + 465*(-c[11]-c[ 5]+c[ 8]+c[21]) + 855*(-c[ 9]+c[17]) + 1680*(-c[10]+c[ 7]) + 2790*(-c[ 0]+c[12])))+
                      (u5.z*     (60*(-c[24]-c[ 5]-c[ 6]-c[23]+c[ 8]+c[25]+c[ 7]+c[26]) + 720*(-c[ 9]+c[12]))+
                       u4.z*u1.w*(30*(c[17]+c[ 4]+c[21]+c[19]) + 180*(c[26]) + 210*(-c[ 6]-c[23]) + 390*(-c[11]-c[18]+c[ 8]+c[25]) + 420*(-c[ 5]) + 480*(-c[ 0]-c[10]) + 600*(c[ 7]) + 3060*(-c[ 9]) + 3960*(c[12]))+
                       u3.z*u2.w*(180*(c[ 4]+c[19]+c[26]) + 240*(c[17]+c[21]) + 270*(-c[ 6]-c[23]) + 810*(c[ 8]+c[25]) + 900*(-c[11]-c[18]) + 1140*(-c[ 5]) + 2040*(c[ 7]) + 2220*(-c[ 0]-c[10]) + 4560*(-c[ 9]) + 7800*(c[12]))+
                       u2.z*u3.w*(60*(c[26]) + 90*(-c[ 2]-c[15]) + 150*(-c[ 6]-c[23]) + 300*(c[19]+c[ 4]) + 510*(c[21]+c[17]) + 780*(c[ 8]+c[25]) + 900*(-c[11]-c[18]) + 1320*(-c[ 5]) + 2880*(c[ 7]) + 3240*(-c[ 0]-c[10]-c[ 9]) + 7200*(c[12]))+
                       u1.z*u4.w*(30*(-c[23]-c[ 6]) + 135*(-c[ 2]-c[15]) + 210*(c[ 4]+c[19]) + 345*(c[ 8]+c[25]) + 390*(-c[11]-c[18]) + 435*(c[17]+c[21]) + 690*(-c[ 5]) + 1080*(-c[ 9]) + 1860*(c[ 7]) + 2010*(-c[ 0]-c[10]) + 3060*(c[12]))+
                            u5.w*(54*(-c[11]-c[18]-c[ 2]-c[15]+c[ 8]+c[ 4]+c[25]+c[19]) + 132*(-c[ 9]-c[ 5]+c[17]+c[21]) + 456*(-c[ 0]-c[10]+c[12]+c[ 7]))));

    d.z += u5.x*(     (          (36*(-c[15]+c[16]) + 222*(-c[10]-c[ 7]-c[ 5]-c[ 2]+c[ 8]+c[ 3]+c[11]+c[ 6]))));
    d.z += u4.x*(u1.y*(          (15*(-c[14]-c[18]-c[13]-c[17]) + 90*(-c[15]) + 120*(-c[ 4]-c[ 9]-c[12]-c[ 1]) + 270*(c[16]) + 720*(-c[ 5]-c[ 2]) + 840*(-c[ 0]) + 1020*(c[ 3]+c[ 6]) + 1200*(-c[10]-c[ 7]) + 1500*(c[ 8]+c[11])))+
                      (u1.z*     (180*(-c[15]+c[16]) + 630*(-c[ 2]+c[ 3]) + 1110*(-c[ 7]-c[ 5]+c[ 8]+c[ 6]) + 1590*(-c[10]+c[11]))+
                            u1.w*(15*(c[18]+c[14]+c[17]+c[13]) + 90*(c[16]) + 120*(c[ 4]+c[ 9]+c[12]+c[ 1]) + 270*(-c[15]) + 720*(c[ 6]+c[ 3]) + 840*(c[ 0]) + 1020*(-c[ 5]-c[ 2]) + 1200*(c[ 8]+c[11]) + 1500*(-c[10]-c[ 7]))));
    d.z += u3.x*(u2.y*(          (30*(-c[14]-c[13]) + 60*(-c[15]) + 90*(-c[18]-c[17]) + 240*(-c[ 1]) + 480*(-c[ 4]-c[ 9]) + 720*(-c[12]) + 780*(-c[ 5]-c[ 2]+c[16]) + 1680*(c[ 3]+c[ 6]) + 2400*(-c[10]-c[ 7]) + 3360*(-c[ 0]) + 3900*(c[11]+c[ 8])))+
                 u1.y*(u1.z*     (60*(-c[14]-c[17]) + 120*(-c[18]) + 240*(-c[ 4]-c[ 1]) + 300*(-c[15]) + 720*(-c[12]-c[ 9]) + 1020*(c[16]) + 1560*(-c[ 2]) + 2160*(c[ 3]) + 2640*(-c[ 5]) + 3360*(-c[ 0]) + 3840*(c[ 6]) + 4560*(-c[ 7]) + 5760*(c[ 8]) + 6720*(-c[10]) + 8520*(c[11]))+
                            u1.w*(480*(-c[15]+c[16]) + 2640*(-c[ 5]-c[ 2]+c[ 6]+c[ 3]) + 6480*(-c[10]-c[ 7]+c[ 8]+c[11])))+
                      (u2.z*     (300*(-c[15]+c[16]) + 600*(-c[ 2]+c[ 3]) + 1980*(-c[ 7]-c[ 5]+c[ 8]+c[ 6]) + 4440*(-c[10]+c[11]))+
                       u1.z*u1.w*(60*(c[14]+c[17]) + 120*(c[18]) + 240*(c[ 4]+c[ 1]) + 300*(c[16]) + 720*(c[12]+c[ 9]) + 1020*(-c[15]) + 1560*(c[ 3]) + 2160*(-c[ 2]) + 2640*(c[ 6]) + 3360*(c[ 0]) + 3840*(-c[ 5]) + 4560*(c[ 8]) + 5760*(-c[ 7]) + 6720*(c[11]) + 8520*(-c[10]))+
                            u2.w*(30*(c[14]+c[13]) + 60*(c[16]) + 90*(c[18]+c[17]) + 240*(c[ 1]) + 480*(c[ 4]+c[ 9]) + 720*(c[12]) + 780*(-c[15]+c[ 6]+c[ 3]) + 1680*(-c[ 5]-c[ 2]) + 2400*(c[ 8]+c[11]) + 3360*(c[ 0]) + 3900*(-c[10]-c[ 7]))));
    d.z += u2.x*(u3.y*(          (30*(c[26]+c[22]) + 60*(-c[ 1]+c[20]) + 180*(-c[18]-c[17]) + 270*(-c[ 5]-c[ 2]) + 690*(-c[ 9]-c[ 4]) + 1080*(c[16]) + 1170*(c[ 6]+c[ 3]) + 1500*(-c[12]) + 2220*(-c[10]-c[ 7]) + 4770*(c[11]+c[ 8]) + 4800*(-c[ 0])))+
                 u2.y*(u1.z*     (30*(-c[25]-c[14]) + 60*(c[22]) + 90*(-c[15]+c[20]+c[26]) + 180*(-c[ 1]) + 210*(-c[17]) + 540*(-c[18]) + 780*(-c[ 4]) + 1020*(-c[ 2]) + 1800*(-c[ 5]) + 2070*(c[16]) + 2130*(-c[ 9]) + 2460*(c[ 3]) + 3060*(-c[12]) + 4350*(c[ 6]) + 6540*(-c[ 7]) + 9780*(-c[10]) + 9900*(-c[ 0]) + 10710*(c[ 8]) + 16260*(c[11]))+
                            u1.w*(30*(-c[25]-c[21]-c[14]-c[13]) + 60*(c[26]+c[22]) + 180*(-c[ 1]-c[15]) + 210*(-c[18]-c[17]) + 840*(-c[ 4]-c[ 9]) + 900*(c[16]) + 1620*(-c[12]) + 2010*(-c[ 5]-c[ 2]) + 3300*(c[ 6]+c[ 3]) + 5400*(-c[ 0]) + 9660*(-c[10]-c[ 7]) + 12660*(c[11]+c[ 8])))+
                 u1.y*(u2.z*     (30*(-c[17]-c[14]+c[24]+c[20]+c[22]) + 60*(-c[25]) + 90*(c[26]) + 120*(-c[ 4]-c[ 1]) + 270*(-c[15]) + 360*(-c[18]) + 990*(-c[ 2]) + 1170*(c[16]) + 1470*(-c[ 9]) + 1530*(c[ 3]) + 1560*(-c[12]) + 3060*(-c[ 5]) + 4710*(c[ 6]) + 5040*(-c[ 0]) + 5820*(-c[ 7]) + 7470*(c[ 8]) + 13500*(-c[10]) + 17370*(c[11]))+
                       u1.z*u1.w*(60*(-c[21]+c[22]) + 120*(-c[25]+c[26]) + 1080*(-c[15]+c[16]) + 4020*(-c[ 2]+c[ 3]) + 6600*(-c[ 5]+c[ 6]) + 17880*(-c[ 7]+c[ 8]) + 26760*(-c[10]+c[11]))+
                            u2.w*(30*(c[14]+c[13]+c[26]+c[22]) + 60*(-c[25]-c[21]) + 180*(c[16]+c[ 1]) + 210*(c[18]+c[17]) + 840*(c[ 4]+c[ 9]) + 900*(-c[15]) + 1620*(c[12]) + 2010*(c[ 6]+c[ 3]) + 3300*(-c[ 5]-c[ 2]) + 5400*(c[ 0]) + 9660*(c[ 8]+c[11]) + 12660*(-c[10]-c[ 7])))+
                      (u3.z*     (30*(-c[25]-c[23]+c[24]+c[26]) + 180*(-c[15]+c[16]) + 240*(-c[ 2]+c[ 3]) + 1530*(-c[ 5]-c[ 7]+c[ 8]+c[ 6]) + 5880*(-c[10]+c[11]))+
                       u2.z*u1.w*(30*(-c[23]-c[21]-c[19]+c[17]+c[14]) + 60*(c[26]) + 90*(-c[25]) + 120*(c[ 4]+c[ 1]) + 270*(c[16]) + 360*(c[18]) + 990*(c[ 3]) + 1170*(-c[15]) + 1470*(c[ 9]) + 1530*(-c[ 2]) + 1560*(c[12]) + 3060*(c[ 6]) + 4710*(-c[ 5]) + 5040*(c[ 0]) + 5820*(c[ 8]) + 7470*(-c[ 7]) + 13500*(c[11]) + 17370*(-c[10]))+
                       u1.z*u2.w*(30*(c[14]+c[26]) + 60*(-c[21]) + 90*(-c[25]-c[19]+c[16]) + 180*(c[ 1]) + 210*(c[17]) + 540*(c[18]) + 780*(c[ 4]) + 1020*(c[ 3]) + 1800*(c[ 6]) + 2070*(-c[15]) + 2130*(c[ 9]) + 2460*(-c[ 2]) + 3060*(c[12]) + 4350*(-c[ 5]) + 6540*(c[ 8]) + 9780*(c[11]) + 9900*(c[ 0]) + 10710*(-c[ 7]) + 16260*(-c[10]))+
                            u3.w*(30*(-c[25]-c[21]) + 60*(-c[19]+c[ 1]) + 180*(c[17]+c[18]) + 270*(c[ 6]+c[ 3]) + 690*(c[ 4]+c[ 9]) + 1080*(-c[15]) + 1170*(-c[ 5]-c[ 2]) + 1500*(c[12]) + 2220*(c[ 8]+c[11]) + 4770*(-c[ 7]-c[10]) + 4800*(c[ 0]))));
    d.z += u1.x*(u4.y*(          (30*(-c[ 5]-c[ 2]) + 150*(c[26]+c[22]) + 195*(-c[18]-c[17]) + 240*(c[20]) + 330*(-c[ 9]-c[ 4]) + 405*(c[ 6]+c[ 3]) + 630*(c[16]) + 885*(-c[10]-c[ 7]) + 1500*(-c[12]) + 2460*(c[11]+c[ 8]) + 2520*(-c[ 0])))+
                 u3.y*(u1.z*     (60*(-c[25]) + 180*(-c[ 2]) + 360*(-c[17]) + 420*(-c[ 5]+c[22]) + 540*(c[26]) + 600*(-c[ 4]+c[20]) + 900*(-c[18]) + 1200*(c[ 3]) + 1620*(c[16]) + 1680*(-c[ 9]) + 2040*(c[ 6]) + 3660*(-c[ 7]) + 4680*(-c[12]) + 5580*(-c[10]) + 7680*(c[ 8]) + 8160*(-c[ 0]) + 12180*(c[11]))+
                            u1.w*(60*(-c[25]-c[21]) + 240*(c[20]) + 360*(c[26]+c[22]) + 480*(-c[18]-c[17]-c[ 5]-c[ 2]) + 720*(c[16]) + 960*(-c[ 9]-c[ 4]) + 1620*(c[ 6]+c[ 3]) + 3360*(-c[12]) + 5700*(-c[10]-c[ 7]) + 6240*(-c[ 0]) + 10020*(c[11]+c[ 8])))+
                 u2.y*(u2.z*     (30*(-c[15]) + 90*(c[24]) + 150*(-c[17]) + 210*(-c[25]) + 240*(-c[ 4]) + 300*(-c[ 2]) + 390*(c[22]) + 480*(c[20]) + 720*(c[26]) + 1200*(c[ 3]) + 1260*(-c[18]-c[ 5]) + 1380*(c[16]) + 2460*(-c[ 9]) + 3390*(c[ 6]) + 4800*(-c[12]) + 5130*(-c[ 7]) + 8460*(c[ 8]) + 8640*(-c[ 0]) + 12150*(-c[10]) + 20520*(c[11]))+
                       u1.z*u1.w*(180*(-c[15]) + 240*(-c[21]) + 360*(c[20]) + 420*(-c[17]) + 480*(-c[25]) + 660*(c[22]) + 840*(-c[ 4]) + 960*(c[26]) + 1020*(-c[18]) + 1260*(c[16]) + 1740*(-c[ 2]) + 2040*(-c[ 9]) + 2940*(-c[ 5]) + 3120*(c[ 3]) + 4980*(c[ 6]) + 5040*(-c[12]) + 9360*(-c[ 0]) + 16740*(-c[ 7]) + 21780*(c[ 8]) + 25020*(-c[10]) + 32940*(c[11]))+
                            u2.w*(180*(-c[15]+c[16]) + 270*(-c[25]-c[21]+c[26]+c[22]) + 1620*(-c[ 5]-c[ 2]+c[ 6]+c[ 3]) + 12330*(-c[10]-c[ 7]+c[11]+c[ 8])))+
                 u1.y*(u3.z*     (60*(-c[15]) + 120*(c[20]+c[22]) + 180*(-c[ 2]+c[24]) + 240*(-c[25]) + 420*(c[ 3]+c[16]+c[26]) + 600*(-c[18]) + 1200*(-c[ 9]) + 1380*(-c[ 5]) + 1560*(-c[12]) + 2280*(c[ 6]) + 2820*(-c[ 7]) + 2880*(-c[ 0]) + 3720*(c[ 8]) + 11100*(-c[10]) + 14340*(c[11]))+
                       u2.z*u1.w*(120*(-c[19]+c[20]) + 300*(-c[21]+c[22]) + 600*(-c[15]+c[16]) + 840*(-c[25]+c[26]) + 1680*(-c[ 2]+c[ 3]) + 4740*(-c[ 5]+c[ 6]) + 14580*(-c[ 7]+c[ 8]) + 34020*(-c[10]+c[11]))+
                       u1.z*u2.w*(180*(c[16]) + 240*(c[22]) + 360*(-c[19]) + 420*(c[17]) + 480*(c[26]) + 660*(-c[21]) + 840*(c[ 4]) + 960*(-c[25]) + 1020*(c[18]) + 1260*(-c[15]) + 1740*(c[ 3]) + 2040*(c[ 9]) + 2940*(c[ 6]) + 3120*(-c[ 2]) + 4980*(-c[ 5]) + 5040*(c[12]) + 9360*(c[ 0]) + 16740*(c[ 8]) + 21780*(-c[ 7]) + 25020*(c[11]) + 32940*(-c[10]))+
                            u3.w*(60*(c[26]+c[22]) + 240*(-c[19]) + 360*(-c[25]-c[21]) + 480*(c[17]+c[18]+c[ 6]+c[ 3]) + 720*(-c[15]) + 960*(c[ 4]+c[ 9]) + 1620*(-c[ 5]-c[ 2]) + 3360*(c[12]) + 5700*(c[ 8]+c[11]) + 6240*(c[ 0]) + 10020*(-c[ 7]-c[10])))+
                      (u4.z*     (30*(-c[ 2]-c[15]+c[16]+c[ 3]) + 90*(-c[25]-c[23]+c[24]+c[26]) + 510*(-c[ 5]-c[ 7]+c[ 8]+c[ 6]) + 3510*(-c[10]+c[11]))+
                       u3.z*u1.w*(60*(c[16]) + 120*(-c[21]-c[19]) + 180*(-c[23]+c[ 3]) + 240*(c[26]) + 420*(-c[25]-c[ 2]-c[15]) + 600*(c[18]) + 1200*(c[ 9]) + 1380*(c[ 6]) + 1560*(c[12]) + 2280*(-c[ 5]) + 2820*(c[ 8]) + 2880*(c[ 0]) + 3720*(-c[ 7]) + 11100*(c[11]) + 14340*(-c[10]))+
                       u2.z*u2.w*(30*(c[16]) + 90*(-c[23]) + 150*(c[17]) + 210*(c[26]) + 240*(c[ 4]) + 300*(c[ 3]) + 390*(-c[21]) + 480*(-c[19]) + 720*(-c[25]) + 1200*(-c[ 2]) + 1260*(c[18]+c[ 6]) + 1380*(-c[15]) + 2460*(c[ 9]) + 3390*(-c[ 5]) + 4800*(c[12]) + 5130*(c[ 8]) + 8460*(-c[ 7]) + 8640*(c[ 0]) + 12150*(c[11]) + 20520*(-c[10]))+
                       u1.z*u3.w*(60*(c[26]) + 180*(c[ 3]) + 360*(c[17]) + 420*(-c[21]+c[ 6]) + 540*(-c[25]) + 600*(-c[19]+c[ 4]) + 900*(c[18]) + 1200*(-c[ 2]) + 1620*(-c[15]) + 1680*(c[ 9]) + 2040*(-c[ 5]) + 3660*(c[ 8]) + 4680*(c[12]) + 5580*(c[11]) + 7680*(-c[ 7]) + 8160*(c[ 0]) + 12180*(-c[10]))+
                            u4.w*(30*(c[ 6]+c[ 3]) + 150*(-c[25]-c[21]) + 195*(c[17]+c[18]) + 240*(-c[19]) + 330*(c[ 4]+c[ 9]) + 405*(-c[ 5]-c[ 2]) + 630*(-c[15]) + 885*(c[ 8]+c[11]) + 1500*(c[12]) + 2460*(-c[10]-c[ 7]) + 2520*(c[ 0]))));
    d.z +=      (u5.y*(          (54*(-c[ 9]-c[18]-c[ 4]-c[17]+c[ 6]+c[26]+c[ 3]+c[22]) + 132*(-c[10]-c[ 7]+c[16]+c[20]) + 456*(-c[12]-c[ 0]+c[11]+c[ 8])))+
                 u4.y*(u1.z*     (30*(-c[25]-c[ 5]) + 135*(-c[ 4]-c[17]) + 210*(c[ 3]+c[22]) + 345*(c[ 6]+c[26]) + 390*(-c[ 9]-c[18]) + 435*(c[16]+c[20]) + 690*(-c[ 7]) + 1080*(-c[10]) + 1860*(c[ 8]) + 2010*(-c[12]-c[ 0]) + 3060*(c[11]))+
                            u1.w*(30*(-c[25]-c[ 5]-c[21]-c[ 2]) + 210*(c[16]+c[20]) + 255*(-c[ 9]-c[18]-c[ 4]-c[17]) + 285*(c[ 6]+c[26]+c[ 3]+c[22]) + 1110*(-c[10]-c[ 7]) + 1740*(-c[12]-c[ 0]) + 2640*(c[11]+c[ 8])))+
                 u3.y*(u2.z*     (60*(c[24]) + 90*(-c[ 4]-c[17]) + 150*(-c[25]-c[ 5]) + 300*(c[ 3]+c[22]) + 510*(c[16]+c[20]) + 780*(c[ 6]+c[26]) + 900*(-c[18]-c[ 9]) + 1320*(-c[ 7]) + 2880*(c[ 8]) + 3240*(-c[12]-c[ 0]-c[10]) + 7200*(c[11]))+
                       u1.z*u1.w*(180*(-c[21]-c[ 2]) + 360*(-c[25]-c[ 5]) + 420*(-c[ 4]-c[17]) + 480*(c[16]+c[20]) + 780*(c[ 3]+c[22]) + 1020*(-c[18]-c[ 9]) + 1200*(c[ 6]+c[26]) + 4560*(-c[ 7]) + 4800*(-c[12]-c[ 0]) + 6840*(-c[10]) + 7920*(c[ 8]) + 12120*(c[11]))+
                            u2.w*(60*(c[16]+c[20]) + 210*(-c[18]-c[ 9]-c[17]-c[ 4]-c[25]-c[ 5]-c[21]-c[ 2]) + 420*(c[ 6]+c[26]+c[ 3]+c[22]) + 1320*(-c[12]-c[ 0]) + 3480*(-c[10]-c[ 7]) + 4740*(c[11]+c[ 8])))+
                 u2.y*(u3.z*     (180*(c[24]+c[ 3]+c[22]) + 240*(c[16]+c[20]) + 270*(-c[25]-c[ 5]) + 810*(c[ 6]+c[26]) + 900*(-c[18]-c[ 9]) + 1140*(-c[ 7]) + 2040*(c[ 8]) + 2220*(-c[12]-c[ 0]) + 4560*(-c[10]) + 7800*(c[11]))+
                       u2.z*u1.w*(30*(-c[19]-c[15]) + 120*(-c[ 4]-c[17]) + 300*(-c[21]-c[ 2]) + 330*(c[16]+c[20]) + 690*(c[ 3]+c[22]) + 1020*(-c[18]-c[ 9]-c[25]-c[ 5]) + 1770*(c[ 6]+c[26]) + 3720*(-c[12]-c[ 0]) + 6300*(-c[ 7]) + 8280*(c[ 8]) + 14580*(-c[10]) + 19440*(c[11]))+
                       u1.z*u2.w*(90*(-c[19]-c[15]+c[16]+c[20]) + 720*(-c[21]-c[ 2]+c[ 3]+c[22]) + 1170*(-c[25]-c[ 5]+c[ 6]+c[26]) + 9900*(-c[ 7]+c[ 8]) + 14760*(-c[10]+c[11]))+
                            u3.w*(60*(-c[19]-c[15]) + 210*(c[17]+c[ 4]+c[18]+c[ 9]+c[ 6]+c[ 3]+c[26]+c[22]) + 420*(-c[25]-c[ 5]-c[21]-c[ 2]) + 1320*(c[12]+c[ 0]) + 3480*(c[ 8]+c[11]) + 4740*(-c[10]-c[ 7])))+
                 u1.y*(u4.z*     (30*(c[16]+c[ 3]+c[20]+c[22]) + 180*(c[24]) + 210*(-c[25]-c[ 5]) + 390*(-c[18]-c[ 9]+c[ 6]+c[26]) + 420*(-c[ 7]) + 480*(-c[12]-c[ 0]) + 600*(c[ 8]) + 3060*(-c[10]) + 3960*(c[11]))+
                       u3.z*u1.w*(60*(-c[19]-c[15]+c[16]+c[20]) + 180*(-c[21]-c[ 2]+c[ 3]+c[22]) + 1080*(-c[25]-c[ 5]+c[ 6]+c[26]) + 3360*(-c[ 7]+c[ 8]) + 13080*(-c[10]+c[11]))+
                       u2.z*u2.w*(30*(c[16]+c[20]) + 120*(c[17]+c[ 4]) + 300*(c[ 3]+c[22]) + 330*(-c[19]-c[15]) + 690*(-c[21]-c[ 2]) + 1020*(c[18]+c[ 9]+c[ 6]+c[26]) + 1770*(-c[25]-c[ 5]) + 3720*(c[12]+c[ 0]) + 6300*(c[ 8]) + 8280*(-c[ 7]) + 14580*(c[11]) + 19440*(-c[10]))+
                       u1.z*u3.w*(180*(c[ 3]+c[22]) + 360*(c[ 6]+c[26]) + 420*(c[17]+c[ 4]) + 480*(-c[19]-c[15]) + 780*(-c[21]-c[ 2]) + 1020*(c[18]+c[ 9]) + 1200*(-c[25]-c[ 5]) + 4560*(c[ 8]) + 4800*(c[12]+c[ 0]) + 6840*(c[11]) + 7920*(-c[ 7]) + 12120*(-c[10]))+
                            u4.w*(30*(c[ 6]+c[ 3]+c[26]+c[22]) + 210*(-c[19]-c[15]) + 255*(c[17]+c[ 4]+c[18]+c[ 9]) + 285*(-c[25]-c[21]-c[ 5]-c[ 2]) + 1110*(c[ 8]+c[11]) + 1740*(c[12]+c[ 0]) + 2640*(-c[ 7]-c[10])))+
                      (u5.z*     (60*(-c[25]-c[ 5]-c[ 7]-c[23]+c[ 8]+c[24]+c[ 6]+c[26]) + 720*(-c[10]+c[11]))+
                       u4.z*u1.w*(30*(-c[21]-c[19]-c[ 2]-c[15]) + 180*(-c[23]) + 210*(c[ 6]+c[26]) + 390*(-c[25]-c[ 5]+c[18]+c[ 9]) + 420*(c[ 8]) + 480*(c[12]+c[ 0]) + 600*(-c[ 7]) + 3060*(c[11]) + 3960*(-c[10]))+
                       u3.z*u2.w*(180*(-c[21]-c[ 2]-c[23]) + 240*(-c[19]-c[15]) + 270*(c[ 6]+c[26]) + 810*(-c[25]-c[ 5]) + 900*(c[18]+c[ 9]) + 1140*(c[ 8]) + 2040*(-c[ 7]) + 2220*(c[12]+c[ 0]) + 4560*(c[11]) + 7800*(-c[10]))+
                       u2.z*u3.w*(60*(-c[23]) + 90*(c[17]+c[ 4]) + 150*(c[ 6]+c[26]) + 300*(-c[21]-c[ 2]) + 510*(-c[19]-c[15]) + 780*(-c[25]-c[ 5]) + 900*(c[18]+c[ 9]) + 1320*(c[ 8]) + 2880*(-c[ 7]) + 3240*(c[12]+c[ 0]+c[11]) + 7200*(-c[10]))+
                       u1.z*u4.w*(30*(c[ 6]+c[26]) + 135*(c[17]+c[ 4]) + 210*(-c[21]-c[ 2]) + 345*(-c[25]-c[ 5]) + 390*(c[18]+c[ 9]) + 435*(-c[19]-c[15]) + 690*(c[ 8]) + 1080*(c[11]) + 1860*(-c[ 7]) + 2010*(c[12]+c[ 0]) + 3060*(-c[10]))+
                            u5.w*(54*(-c[25]-c[21]-c[ 5]-c[ 2]+c[17]+c[ 4]+c[18]+c[ 9]) + 132*(-c[19]-c[15]+c[ 8]+c[11]) + 456*(-c[10]-c[ 7]+c[12]+c[ 0]))));
    return d*SCALE_G;
}

vec3[2] eval_d2(void)
{
    vec3 dii = vec3(0,0,0);
    vec3 dij = vec3(0,0,0);
    vec4 u2 = u1*u1;
    vec4 u3 = u2*u1;
    vec4 u4 = u3*u1;

    dii.x += u4.x*(     (          (6*(-c[15]-c[14]-c[17]-c[16]) + 36*(c[18]+c[13]) + 48*(-c[ 8]-c[ 6]-c[ 7]-c[ 5]) + 60*(c[11]+c[ 9]+c[12]+c[10]+c[ 2]+c[ 1]+c[ 4]+c[ 3]) + 336*(-c[ 0]))));
    dii.x += u3.x*(u1.y*(          (12*(-c[15]-c[14]) + 36*(-c[17]-c[16]) + 72*(c[13]) + 96*(-c[ 5]) + 144*(c[ 9]+c[10]) + 192*(-c[ 6]-c[ 7]) + 216*(c[18]+c[ 2]+c[ 1]) + 264*(c[11]+c[12]) + 288*(-c[ 8]) + 336*(c[ 4]+c[ 3]) + 1344*(-c[ 0])))+
                      (u1.z*     (24*(-c[15]-c[14]-c[17]-c[16]) + 168*(c[11]+c[12]+c[ 9]+c[10]) + 192*(-c[ 8]-c[ 5]-c[ 7]-c[ 6]) + 288*(c[18]) + 312*(c[ 4]+c[ 2]+c[ 3]+c[ 1]) + 1344*(-c[ 0]))+
                            u1.w*(12*(-c[14]-c[16]) + 36*(-c[15]-c[17]) + 72*(c[13]) + 96*(-c[ 6]) + 144*(c[11]+c[ 9]) + 192*(-c[ 8]-c[ 5]) + 216*(c[18]+c[ 3]+c[ 1]) + 264*(c[12]+c[10]) + 288*(-c[ 7]) + 336*(c[ 2]+c[ 4]) + 1344*(-c[ 0]))));
    dii.x += u2.x*(u2.y*(          (6*(c[24]+c[25]+c[15]+c[14]+c[20]+c[22]) + 36*(c[26]+c[13]) + 42*(c[ 9]+c[10]) + 66*(-c[17]-c[16]) + 240*(c[ 2]+c[ 1]) + 246*(-c[ 7]-c[ 6]) + 312*(c[11]+c[12]) + 468*(c[18]) + 540*(-c[ 8]) + 600*(c[ 4]+c[ 3]) + 1800*(-c[ 0])))+
                 u1.y*(u1.z*     (36*(-c[ 9]-c[10]+c[24]+c[25]) + 72*(-c[17]-c[16]+c[26]) + 144*(-c[ 5]) + 180*(c[11]+c[12]) + 396*(-c[ 7]-c[ 6]) + 612*(c[ 2]+c[ 1]) + 648*(-c[ 8]) + 972*(c[ 4]+c[ 3]) + 1296*(c[18]) + 3168*(-c[ 0]))+
                            u1.w*(12*(-c[14]) + 24*(-c[15]-c[16]) + 36*(c[25]+c[26]) + 96*(c[ 9]) + 108*(c[13]) + 156*(-c[17]) + 216*(-c[ 5]-c[ 6]) + 300*(c[11]+c[10]) + 528*(c[ 1]) + 672*(c[12]) + 732*(c[ 2]+c[ 3]) + 756*(-c[ 8]-c[ 7]) + 972*(c[18]) + 1248*(c[ 4]) + 3600*(-c[ 0])))+
                      (u2.z*     (36*(c[24]+c[25]+c[23]+c[26]) + 108*(-c[ 8]-c[ 5]-c[ 7]-c[ 6]) + 180*(-c[11]-c[12]-c[ 9]-c[10]) + 324*(c[ 4]+c[ 2]+c[ 3]+c[ 1]) + 864*(c[18]) + 1152*(-c[ 0]))+
                       u1.z*u1.w*(36*(-c[11]-c[ 9]+c[23]+c[26]) + 72*(-c[15]-c[17]+c[25]) + 144*(-c[ 6]) + 180*(c[12]+c[10]) + 396*(-c[ 8]-c[ 5]) + 612*(c[ 3]+c[ 1]) + 648*(-c[ 7]) + 972*(c[ 4]+c[ 2]) + 1296*(c[18]) + 3168*(-c[ 0]))+
                            u2.w*(6*(c[23]+c[21]+c[19]+c[16]+c[14]+c[26]) + 36*(c[25]+c[13]) + 42*(c[11]+c[ 9]) + 66*(-c[15]-c[17]) + 240*(c[ 3]+c[ 1]) + 246*(-c[ 8]-c[ 5]) + 312*(c[12]+c[10]) + 468*(c[18]) + 540*(-c[ 7]) + 600*(c[ 2]+c[ 4]) + 1800*(-c[ 0]))));
    dii.x += u1.x*(u3.y*(          (12*(c[24]+c[25]) + 48*(c[20]+c[22]) + 60*(-c[17]-c[16]) + 72*(-c[11]-c[12]-c[ 7]-c[ 6]+c[ 2]+c[ 1]) + 144*(c[26]) + 360*(c[18]) + 432*(c[ 4]+c[ 3]) + 456*(-c[ 8]) + 768*(-c[ 0])))+
                 u2.y*(u1.z*     (12*(c[15]+c[14]) + 48*(c[20]+c[22]) + 60*(-c[17]-c[16]) + 84*(c[25]+c[24]) + 132*(-c[ 7]-c[ 6]) + 312*(-c[ 9]-c[10]) + 336*(c[ 2]+c[ 1]) + 360*(c[26]) + 600*(-c[11]-c[12]) + 648*(-c[ 8]) + 912*(c[ 4]+c[ 3]) + 1584*(c[18]) + 1872*(-c[ 0]))+
                            u1.w*(12*(-c[16]+c[15]+c[14]) + 24*(c[20]) + 36*(c[22]+c[13]) + 84*(-c[10]) + 96*(-c[11]+c[25]) + 108*(-c[ 6]) + 120*(c[12]) + 144*(-c[ 9]) + 180*(-c[17]) + 216*(c[26]) + 360*(c[ 1]) + 456*(c[ 2]) + 516*(-c[ 7]) + 768*(c[ 3]) + 864*(-c[ 8]) + 1260*(c[18]) + 1344*(c[ 4]) + 2736*(-c[ 0])))+
                 u1.y*(u2.z*     (36*(c[17]+c[16]+c[15]+c[14]) + 72*(-c[ 8]+c[ 5]) + 144*(c[24]+c[25]) + 288*(c[26]) + 360*(c[ 2]+c[ 1]) + 576*(c[ 4]+c[ 3]) + 720*(-c[ 9]-c[10]) + 1080*(-c[11]-c[12]) + 1152*(-c[ 0]) + 2160*(c[18]))+
                       u1.z*u1.w*(24*(c[15]+c[16]) + 48*(c[14]) + 72*(-c[ 5]-c[ 6]) + 96*(-c[17]) + 360*(c[25]+c[26]) + 672*(-c[ 9]) + 720*(-c[ 8]-c[ 7]) + 768*(c[ 1]) + 840*(-c[11]-c[10]) + 960*(-c[12]) + 1176*(c[ 2]+c[ 3]) + 1920*(c[ 4]) + 3456*(c[18]) + 4320*(-c[ 0]))+
                            u2.w*(12*(-c[15]+c[16]+c[14]) + 24*(c[19]) + 36*(c[21]+c[13]) + 84*(-c[11]) + 96*(-c[10]+c[26]) + 108*(-c[ 5]) + 120*(c[12]) + 144*(-c[ 9]) + 180*(-c[17]) + 216*(c[25]) + 360*(c[ 1]) + 456*(c[ 3]) + 516*(-c[ 8]) + 768*(c[ 2]) + 864*(-c[ 7]) + 1260*(c[18]) + 1344*(c[ 4]) + 2736*(-c[ 0])))+
                      (u3.z*     (24*(c[17]+c[15]+c[16]+c[14]) + 72*(c[ 8]+c[24]+c[25]+c[ 5]+c[23]+c[ 7]+c[ 6]+c[26]) + 96*(c[ 4]+c[ 2]+c[ 3]+c[ 1]) + 480*(-c[11]-c[12]-c[ 9]-c[10]) + 864*(c[18]))+
                       u2.z*u1.w*(36*(c[17]+c[15]+c[16]+c[14]) + 72*(-c[ 7]+c[ 6]) + 144*(c[23]+c[26]) + 288*(c[25]) + 360*(c[ 3]+c[ 1]) + 576*(c[ 4]+c[ 2]) + 720*(-c[11]-c[ 9]) + 1080*(-c[12]-c[10]) + 1152*(-c[ 0]) + 2160*(c[18]))+
                       u1.z*u2.w*(12*(c[16]+c[14]) + 48*(c[21]+c[19]) + 60*(-c[15]-c[17]) + 84*(c[23]+c[26]) + 132*(-c[ 8]-c[ 5]) + 312*(-c[11]-c[ 9]) + 336*(c[ 3]+c[ 1]) + 360*(c[25]) + 600*(-c[12]-c[10]) + 648*(-c[ 7]) + 912*(c[ 4]+c[ 2]) + 1584*(c[18]) + 1872*(-c[ 0]))+
                            u3.w*(12*(c[23]+c[26]) + 48*(c[21]+c[19]) + 60*(-c[15]-c[17]) + 72*(-c[ 8]-c[12]-c[10]-c[ 5]+c[ 3]+c[ 1]) + 144*(c[25]) + 360*(c[18]) + 432*(c[ 2]+c[ 4]) + 456*(-c[ 7]) + 768*(-c[ 0]))));
    dii.x +=      (u4.y*(          (3*(-c[ 9]-c[10]-c[ 7]-c[ 6]-c[17]-c[22]-c[16]-c[20]) + 6*(c[24]+c[25]+c[ 2]+c[ 1]) + 72*(-c[ 8]) + 90*(-c[11]-c[12]+c[18]+c[26]+c[ 4]+c[ 3]) + 108*(-c[ 0])))+
                 u3.y*(u1.z*     (12*(c[17]+c[16]) + 24*(-c[22]-c[20]) + 36*(c[ 7]+c[ 6]+c[ 2]+c[ 1]) + 48*(c[25]+c[24]) + 96*(-c[ 8]) + 108*(-c[ 9]-c[10]) + 192*(-c[ 0]) + 252*(c[ 4]+c[ 3]) + 360*(c[26]) + 504*(c[18]) + 540*(-c[11]-c[12]))+
                            u1.w*(24*(c[ 6]+c[22]) + 48*(-c[ 9]-c[17]+c[ 1]) + 60*(-c[10]-c[ 7]+c[25]+c[ 2]) + 252*(c[26]+c[ 3]) + 276*(-c[11]-c[ 8]) + 336*(-c[12]) + 432*(c[18]+c[ 4]) + 480*(-c[ 0])))+
                 u2.y*(u2.z*     (6*(c[15]+c[14]) + 30*(-c[20]-c[22]) + 36*(c[ 5]) + 42*(c[17]+c[16]) + 60*(c[ 2]+c[ 1]) + 72*(c[ 8]+c[ 0]) + 114*(c[24]+c[25]+c[ 7]+c[ 6]) + 240*(c[ 4]+c[ 3]) + 354*(-c[ 9]-c[10]) + 468*(c[26]) + 1008*(c[18]) + 1020*(-c[11]-c[12]))+
                       u1.z*u1.w*(12*(-c[ 7]-c[20]+c[15]+c[14]) + 24*(c[16]) + 36*(c[ 5]) + 108*(c[ 6]) + 180*(c[ 1]) + 252*(-c[ 8]) + 276*(c[ 2]) + 312*(c[25]) + 360*(-c[ 9]) + 516*(c[ 3]) + 648*(c[26]) + 660*(-c[10]) + 864*(-c[ 0]) + 876*(c[ 4]) + 1068*(-c[11]) + 1572*(-c[12]) + 1800*(c[18]))+
                            u2.w*(6*(c[19]+c[15]+c[16]+c[20]+c[14]+c[13]) + 18*(c[ 5]+c[ 6]+c[21]+c[22]) + 90*(-c[17]) + 108*(-c[ 9]+c[ 1]) + 204*(c[25]+c[26]+c[ 2]+c[ 3]) + 246*(-c[11]-c[ 8]-c[10]-c[ 7]) + 444*(-c[12]) + 672*(c[ 4]) + 690*(c[18]) + 768*(-c[ 0])))+
                 u1.y*(u3.z*     (12*(c[15]+c[14]) + 36*(c[17]+c[16]+c[ 2]+c[ 1]) + 72*(c[ 5]) + 84*(c[ 4]+c[ 3]) + 108*(c[24]+c[25]+c[ 7]+c[ 6]) + 144*(c[ 8]) + 216*(c[26]) + 288*(c[ 0]) + 396*(-c[ 9]-c[10]) + 780*(-c[11]-c[12]) + 864*(c[18]))+
                       u2.z*u1.w*(24*(c[14]) + 48*(c[15]+c[16]) + 96*(c[17]) + 144*(-c[ 0]+c[ 5]+c[ 6]) + 168*(c[ 1]) + 180*(c[ 8]+c[ 7]) + 300*(c[ 2]+c[ 3]) + 468*(c[25]+c[26]) + 528*(c[ 4]) + 624*(-c[ 9]) + 1284*(-c[11]-c[10]) + 2136*(-c[12]) + 2376*(c[18]))+
                       u1.z*u2.w*(12*(-c[ 8]-c[19]+c[16]+c[14]) + 24*(c[15]) + 36*(c[ 6]) + 108*(c[ 5]) + 180*(c[ 1]) + 252*(-c[ 7]) + 276*(c[ 3]) + 312*(c[26]) + 360*(-c[ 9]) + 516*(c[ 2]) + 648*(c[25]) + 660*(-c[11]) + 864*(-c[ 0]) + 876*(c[ 4]) + 1068*(-c[10]) + 1572*(-c[12]) + 1800*(c[18]))+
                            u3.w*(24*(c[ 5]+c[21]) + 48*(-c[ 9]-c[17]+c[ 1]) + 60*(-c[ 8]-c[11]+c[26]+c[ 3]) + 252*(c[25]+c[ 2]) + 276*(-c[10]-c[ 7]) + 336*(-c[12]) + 432*(c[18]+c[ 4]) + 480*(-c[ 0])))+
                      (u4.z*     (6*(c[17]+c[ 4]+c[ 2]+c[15]+c[16]+c[ 3]+c[14]+c[ 1]) + 36*(c[ 8]+c[24]+c[25]+c[ 5]+c[23]+c[ 7]+c[ 6]+c[26]) + 144*(c[ 0]) + 174*(-c[11]-c[12]-c[ 9]-c[10]) + 216*(c[18]))+
                       u3.z*u1.w*(12*(c[16]+c[14]) + 36*(c[17]+c[15]+c[ 3]+c[ 1]) + 72*(c[ 6]) + 84*(c[ 4]+c[ 2]) + 108*(c[ 8]+c[ 5]+c[23]+c[26]) + 144*(c[ 7]) + 216*(c[25]) + 288*(c[ 0]) + 396*(-c[11]-c[ 9]) + 780*(-c[12]-c[10]) + 864*(c[18]))+
                       u2.z*u2.w*(6*(c[16]+c[14]) + 30*(-c[21]-c[19]) + 36*(c[ 6]) + 42*(c[17]+c[15]) + 60*(c[ 3]+c[ 1]) + 72*(c[ 0]+c[ 7]) + 114*(c[ 8]+c[ 5]+c[23]+c[26]) + 240*(c[ 4]+c[ 2]) + 354*(-c[11]-c[ 9]) + 468*(c[25]) + 1008*(c[18]) + 1020*(-c[12]-c[10]))+
                       u1.z*u3.w*(12*(c[15]+c[17]) + 24*(-c[19]-c[21]) + 36*(c[ 8]+c[ 5]+c[ 3]+c[ 1]) + 48*(c[23]+c[26]) + 96*(-c[ 7]) + 108*(-c[11]-c[ 9]) + 192*(-c[ 0]) + 252*(c[ 4]+c[ 2]) + 360*(c[25]) + 504*(c[18]) + 540*(-c[12]-c[10]))+
                            u4.w*(3*(-c[ 8]-c[11]-c[ 9]-c[ 5]-c[19]-c[15]-c[21]-c[17]) + 6*(c[23]+c[26]+c[ 3]+c[ 1]) + 72*(-c[ 7]) + 90*(-c[12]-c[10]+c[18]+c[25]+c[ 2]+c[ 4]) + 108*(-c[ 0]))));

    dii.y += u4.x*(     (          (6*(-c[15]-c[18]-c[13]-c[16]) + 36*(c[14]+c[17]) + 48*(-c[ 3]-c[11]-c[10]-c[ 2]) + 60*(c[ 8]+c[ 4]+c[ 6]+c[ 9]+c[12]+c[ 7]+c[ 1]+c[ 5]) + 336*(-c[ 0]))));
    dii.y += u3.x*(u1.y*(          (12*(-c[13]-c[15]) + 36*(-c[18]-c[16]) + 72*(c[14]) + 96*(-c[ 2]) + 144*(c[ 4]+c[ 7]) + 192*(-c[ 3]-c[10]) + 216*(c[ 5]+c[ 1]+c[17]) + 264*(c[ 8]+c[12]) + 288*(-c[11]) + 336*(c[ 6]+c[ 9]) + 1344*(-c[ 0])))+
                      (u1.z*     (24*(-c[15]-c[16]) + 48*(-c[18]) + 96*(-c[ 3]-c[ 2]) + 120*(c[ 4]+c[ 1]) + 144*(c[14]+c[17]) + 240*(c[ 8]+c[ 6]+c[ 7]+c[ 5]) + 288*(-c[11]-c[10]) + 360*(c[12]+c[ 9]) + 1344*(-c[ 0]))+
                            u1.w*(12*(-c[16]-c[13]) + 36*(-c[15]-c[18]) + 72*(c[14]) + 96*(-c[ 3]) + 144*(c[ 8]+c[ 4]) + 192*(-c[11]-c[ 2]) + 216*(c[ 1]+c[17]+c[ 6]) + 264*(c[12]+c[ 7]) + 288*(-c[10]) + 336*(c[ 9]+c[ 5]) + 1344*(-c[ 0]))));
    dii.y += u2.x*(u2.y*(          (6*(c[20]+c[26]+c[15]+c[13]+c[24]+c[21]) + 36*(c[22]+c[14]) + 42*(c[ 7]+c[ 4]) + 66*(-c[18]-c[16]) + 240*(c[ 5]+c[ 1]) + 246*(-c[10]-c[ 3]) + 312*(c[12]) + 330*(c[ 8]) + 468*(c[17]) + 558*(-c[11]) + 600*(c[ 9]+c[ 6]) + 1800*(-c[ 0])))+
                 u1.y*(u1.z*     (12*(-c[15]+c[20]+c[26]+c[24]+c[21]) + 36*(c[22]) + 72*(-c[ 2]) + 84*(-c[16]) + 180*(c[ 4]+c[14]) + 216*(-c[18]) + 312*(-c[ 3]) + 396*(c[ 1]) + 420*(c[ 7]) + 600*(c[ 5]) + 612*(c[17]) + 708*(c[ 8]) + 852*(-c[10]) + 960*(c[ 6]) + 1116*(c[12]) + 1188*(-c[11]) + 1440*(c[ 9]) + 3960*(-c[ 0]))+
                            u1.w*(12*(-c[13]) + 24*(-c[16]-c[15]) + 36*(c[22]+c[21]) + 96*(c[ 4]) + 108*(c[14]) + 156*(-c[18]) + 216*(-c[ 2]-c[ 3]) + 300*(c[ 8]+c[ 7]) + 528*(c[ 1]) + 672*(c[12]) + 732*(c[ 5]+c[ 6]) + 756*(-c[11]-c[10]) + 972*(c[17]) + 1248*(c[ 9]) + 3600*(-c[ 0])))+
                      (u2.z*     (6*(c[24]+c[25]+c[20]+c[26]+c[22]+c[23]+c[21]+c[19]) + 12*(-c[16]-c[15]) + 48*(-c[ 3]-c[ 2]) + 108*(c[ 4]+c[ 1]) + 144*(-c[18]) + 180*(c[17]+c[14]) + 330*(c[ 8]+c[ 5]+c[ 7]+c[ 6]) + 606*(-c[11]-c[10]) + 756*(c[12]) + 792*(c[ 9]) + 2016*(-c[ 0]))+
                       u1.z*u1.w*(12*(-c[16]+c[25]+c[22]+c[23]+c[19]) + 36*(c[21]) + 72*(-c[ 3]) + 84*(-c[15]) + 180*(c[ 4]+c[14]) + 216*(-c[18]) + 312*(-c[ 2]) + 396*(c[ 1]) + 420*(c[ 8]) + 600*(c[ 6]) + 612*(c[17]) + 708*(c[ 7]) + 852*(-c[11]) + 960*(c[ 5]) + 1116*(c[12]) + 1188*(-c[10]) + 1440*(c[ 9]) + 3960*(-c[ 0]))+
                            u2.w*(6*(c[25]+c[13]+c[22]+c[23]+c[19]+c[16]) + 36*(c[21]+c[14]) + 42*(c[ 8]+c[ 4]) + 66*(-c[18]-c[15]) + 240*(c[ 6]+c[ 1]) + 246*(-c[11]-c[ 2]) + 312*(c[12]) + 330*(c[ 7]) + 468*(c[17]) + 558*(-c[10]) + 600*(c[ 9]+c[ 5]) + 1800*(-c[ 0]))));
    dii.y += u1.x*(u3.y*(          (12*(c[24]+c[21]) + 36*(-c[ 8]) + 48*(c[20]+c[26]) + 60*(-c[18]-c[16]) + 72*(-c[12]-c[10]-c[ 3]+c[ 5]+c[ 1]) + 144*(c[22]) + 360*(c[17]) + 432*(c[ 9]+c[ 6]) + 492*(-c[11]) + 768*(-c[ 0])))+
                 u2.y*(u1.z*     (36*(c[14]) + 48*(c[21]) + 60*(c[24]) + 96*(c[ 4]) + 120*(c[20]) + 132*(-c[16]+c[26]) + 192*(-c[ 3]) + 228*(c[ 7]) + 240*(c[ 1]) + 252*(c[ 8]) + 288*(c[22]) + 336*(-c[18]+c[ 5]) + 576*(c[12]) + 600*(-c[10]) + 720*(c[17]) + 1152*(c[ 6]) + 1656*(-c[11]+c[ 9]) + 3024*(-c[ 0]))+
                            u1.w*(12*(-c[16]+c[15]+c[13]) + 24*(c[20]) + 36*(c[26]+c[14]) + 84*(-c[ 7]) + 96*(-c[ 8]+c[21]) + 108*(-c[ 3]) + 120*(c[12]) + 144*(-c[ 4]) + 180*(-c[18]) + 216*(c[22]) + 360*(c[ 1]) + 456*(c[ 5]) + 516*(-c[10]) + 768*(c[ 6]) + 864*(-c[11]) + 1260*(c[17]) + 1344*(c[ 9]) + 2736*(-c[ 0])))+
                 u1.y*(u2.z*     (24*(c[19]) + 36*(c[25]) + 60*(-c[16]+c[21]) + 84*(c[24]) + 96*(-c[ 3]+c[20]) + 108*(c[14]) + 120*(c[26]) + 144*(c[ 4]) + 168*(c[22]) + 216*(c[ 1]) + 408*(c[ 7]) + 432*(c[17]) + 444*(c[ 5]) + 468*(c[ 8]) + 504*(-c[18]) + 864*(c[ 6]) + 1056*(-c[10]) + 1224*(c[12]) + 1740*(-c[11]) + 2016*(c[ 9]) + 3456*(-c[ 0]))+
                       u1.z*u1.w*(24*(-c[16]-c[15]) + 48*(c[20]+c[19]) + 72*(c[25]+c[26]) + 96*(c[ 4]) + 144*(-c[ 3]-c[ 2]+c[14]) + 264*(c[22]+c[21]) + 480*(c[ 8]+c[ 7]) + 624*(-c[18]) + 672*(c[ 1]) + 1272*(c[ 5]+c[ 6]) + 1440*(c[12]) + 1584*(c[17]) + 2040*(-c[11]-c[10]) + 3456*(c[ 9]) + 6624*(-c[ 0]))+
                            u2.w*(12*(-c[15]+c[13]+c[16]) + 24*(c[19]) + 36*(c[25]+c[14]) + 84*(-c[ 8]) + 96*(-c[ 7]+c[22]) + 108*(-c[ 2]) + 120*(c[12]) + 144*(-c[ 4]) + 180*(-c[18]) + 216*(c[21]) + 360*(c[ 1]) + 456*(c[ 6]) + 516*(-c[11]) + 768*(c[ 5]) + 864*(-c[10]) + 1260*(c[17]) + 1344*(c[ 9]) + 2736*(-c[ 0])))+
                      (u3.z*     (24*(c[20]+c[22]+c[21]+c[19]) + 36*(c[25]+c[24]+c[26]+c[23]) + 48*(c[ 4]+c[ 1]) + 72*(c[17]+c[14]) + 180*(c[ 8]+c[ 5]+c[ 7]+c[ 6]) + 240*(-c[18]) + 552*(-c[11]-c[10]) + 576*(c[12]) + 720*(c[ 9]) + 1152*(-c[ 0]))+
                       u2.z*u1.w*(24*(c[20]) + 36*(c[26]) + 60*(-c[15]+c[22]) + 84*(c[23]) + 96*(-c[ 2]+c[19]) + 108*(c[14]) + 120*(c[25]) + 144*(c[ 4]) + 168*(c[21]) + 216*(c[ 1]) + 408*(c[ 8]) + 432*(c[17]) + 444*(c[ 6]) + 468*(c[ 7]) + 504*(-c[18]) + 864*(c[ 5]) + 1056*(-c[11]) + 1224*(c[12]) + 1740*(-c[10]) + 2016*(c[ 9]) + 3456*(-c[ 0]))+
                       u1.z*u2.w*(36*(c[14]) + 48*(c[22]) + 60*(c[23]) + 96*(c[ 4]) + 120*(c[19]) + 132*(-c[15]+c[25]) + 192*(-c[ 2]) + 228*(c[ 8]) + 240*(c[ 1]) + 252*(c[ 7]) + 288*(c[21]) + 336*(-c[18]+c[ 6]) + 576*(c[12]) + 600*(-c[11]) + 720*(c[17]) + 1152*(c[ 5]) + 1656*(-c[10]+c[ 9]) + 3024*(-c[ 0]))+
                            u3.w*(12*(c[22]+c[23]) + 36*(-c[ 7]) + 48*(c[25]+c[19]) + 60*(-c[18]-c[15]) + 72*(-c[12]-c[11]-c[ 2]+c[ 6]+c[ 1]) + 144*(c[21]) + 360*(c[17]) + 432*(c[ 9]+c[ 5]) + 492*(-c[10]) + 768*(-c[ 0]))));
    dii.y +=      (u4.y*(          (3*(-c[10]-c[18]-c[ 7]-c[26]-c[ 4]-c[ 3]-c[16]-c[20]) + 6*(c[ 5]+c[ 1]+c[24]+c[21]) + 72*(-c[ 8]) + 90*(-c[11]-c[12]+c[ 9]+c[ 6]+c[17]+c[22]) + 108*(-c[ 0])))+
                 u3.y*(u1.z*     (12*(c[ 4]+c[20]) + 24*(-c[ 3]-c[16]) + 36*(c[ 7]+c[26]+c[ 1]+c[21]) + 48*(c[ 5]+c[24]) + 84*(-c[12]) + 96*(-c[ 8]) + 108*(-c[10]-c[18]) + 252*(c[17]+c[22]) + 360*(c[ 6]) + 504*(c[ 9]) + 540*(-c[11]) + 648*(-c[ 0]))+
                            u1.w*(24*(c[26]+c[ 3]) + 48*(-c[18]-c[ 4]+c[ 1]) + 60*(-c[10]-c[ 7]+c[ 5]+c[21]) + 252*(c[ 6]+c[22]) + 276*(-c[11]-c[ 8]) + 336*(-c[12]) + 432*(c[ 9]+c[17]) + 480*(-c[ 0])))+
                 u2.y*(u2.z*     (6*(c[14]+c[19]) + 30*(-c[ 3]-c[16]) + 36*(c[25]) + 42*(c[ 4]+c[20]) + 60*(c[ 1]+c[21]) + 72*(c[ 8]) + 114*(c[ 7]+c[26]+c[24]+c[ 5]) + 240*(c[17]+c[22]) + 252*(c[12]) + 336*(-c[18]) + 354*(-c[10]) + 468*(c[ 6]) + 990*(c[ 9]) + 1020*(-c[11]) + 1200*(-c[ 0]))+
                       u1.z*u1.w*(12*(-c[ 7]-c[16]+c[14]+c[19]) + 24*(c[20]) + 36*(c[25]) + 108*(c[26]) + 180*(c[ 1]) + 252*(-c[ 8]) + 276*(c[21]) + 312*(c[ 5]) + 324*(-c[12]-c[18]) + 516*(c[22]) + 648*(c[ 6]) + 660*(-c[10]) + 876*(c[17]) + 1068*(-c[11]) + 1764*(c[ 9]) + 2112*(-c[ 0]))+
                            u2.w*(6*(c[20]+c[15]+c[14]+c[13]+c[19]+c[16]) + 18*(c[26]+c[ 3]+c[25]+c[ 2]) + 90*(-c[18]) + 108*(-c[ 4]+c[ 1]) + 204*(c[ 6]+c[22]+c[ 5]+c[21]) + 246*(-c[11]-c[ 8]-c[10]-c[ 7]) + 444*(-c[12]) + 672*(c[ 9]) + 690*(c[17]) + 768*(-c[ 0])))+
                 u1.y*(u3.z*     (12*(c[14]+c[19]) + 36*(c[ 4]+c[20]+c[ 1]+c[21]) + 72*(c[25]) + 84*(c[17]+c[22]) + 108*(c[ 5]+c[24]+c[ 7]+c[26]) + 144*(c[ 8]) + 216*(c[ 6]) + 360*(-c[18]) + 396*(-c[10]+c[12]) + 780*(-c[11]) + 828*(c[ 9]) + 888*(-c[ 0]))+
                       u2.z*u1.w*(24*(c[14]) + 48*(c[20]+c[19]) + 96*(c[ 4]) + 144*(c[25]+c[26]) + 168*(c[ 1]) + 180*(c[ 8]+c[ 7]) + 300*(c[22]+c[21]) + 360*(c[12]) + 468*(c[ 5]+c[ 6]) + 528*(c[17]) + 552*(-c[18]) + 1284*(-c[11]-c[10]) + 2304*(c[ 9]) + 2640*(-c[ 0]))+
                       u1.z*u2.w*(12*(-c[ 8]-c[15]+c[20]+c[14]) + 24*(c[19]) + 36*(c[26]) + 108*(c[25]) + 180*(c[ 1]) + 252*(-c[ 7]) + 276*(c[22]) + 312*(c[ 6]) + 324*(-c[12]-c[18]) + 516*(c[21]) + 648*(c[ 5]) + 660*(-c[11]) + 876*(c[17]) + 1068*(-c[10]) + 1764*(c[ 9]) + 2112*(-c[ 0]))+
                            u3.w*(24*(c[25]+c[ 2]) + 48*(-c[ 4]-c[18]+c[ 1]) + 60*(-c[ 8]-c[11]+c[ 6]+c[22]) + 252*(c[ 5]+c[21]) + 276*(-c[10]-c[ 7]) + 336*(-c[12]) + 432*(c[17]+c[ 9]) + 480*(-c[ 0])))+
                      (u4.z*     (6*(c[20]+c[22]+c[14]+c[ 1]+c[17]+c[ 4]+c[21]+c[19]) + 36*(c[ 8]+c[24]+c[25]+c[ 5]+c[ 7]+c[ 6]+c[26]+c[23]) + 156*(-c[18]) + 162*(c[12]) + 174*(-c[11]-c[10]) + 192*(-c[ 0]) + 198*(c[ 9]))+
                       u3.z*u1.w*(12*(c[20]+c[14]) + 36*(c[ 4]+c[22]+c[19]+c[ 1]) + 72*(c[26]) + 84*(c[17]+c[21]) + 108*(c[ 8]+c[25]+c[ 6]+c[23]) + 144*(c[ 7]) + 216*(c[ 5]) + 360*(-c[18]) + 396*(-c[11]+c[12]) + 780*(-c[10]) + 828*(c[ 9]) + 888*(-c[ 0]))+
                       u2.z*u2.w*(6*(c[20]+c[14]) + 30*(-c[ 2]-c[15]) + 36*(c[26]) + 42*(c[ 4]+c[19]) + 60*(c[22]+c[ 1]) + 72*(c[ 7]) + 114*(c[ 8]+c[25]+c[ 6]+c[23]) + 240*(c[17]+c[21]) + 252*(c[12]) + 336*(-c[18]) + 354*(-c[11]) + 468*(c[ 5]) + 990*(c[ 9]) + 1020*(-c[10]) + 1200*(-c[ 0]))+
                       u1.z*u3.w*(12*(c[ 4]+c[19]) + 24*(-c[ 2]-c[15]) + 36*(c[ 8]+c[25]+c[22]+c[ 1]) + 48*(c[ 6]+c[23]) + 84*(-c[12]) + 96*(-c[ 7]) + 108*(-c[11]-c[18]) + 252*(c[17]+c[21]) + 360*(c[ 5]) + 504*(c[ 9]) + 540*(-c[10]) + 648*(-c[ 0]))+
                            u4.w*(3*(-c[ 8]-c[ 4]-c[11]-c[18]-c[25]-c[ 2]-c[19]-c[15]) + 6*(c[22]+c[ 1]+c[23]+c[ 6]) + 72*(-c[ 7]) + 90*(-c[12]-c[10]+c[17]+c[ 9]+c[21]+c[ 5]) + 108*(-c[ 0]))));

    dii.z += u4.x*(     (          (6*(-c[14]-c[18]-c[13]-c[17]) + 36*(c[15]+c[16]) + 48*(-c[ 4]-c[ 9]-c[12]-c[ 1]) + 60*(c[ 8]+c[ 3]+c[11]+c[ 6]+c[10]+c[ 7]+c[ 5]+c[ 2]) + 336*(-c[ 0]))));
    dii.z += u3.x*(u1.y*(          (12*(-c[14]-c[13]) + 36*(-c[18]-c[17]) + 72*(c[15]) + 96*(-c[ 1]) + 144*(c[ 3]+c[ 6]) + 192*(-c[ 4]-c[ 9]) + 216*(c[ 5]+c[ 2]+c[16]) + 264*(c[11]+c[ 8]) + 288*(-c[12]) + 336*(c[10]+c[ 7]) + 1344*(-c[ 0])))+
                      (u1.z*     (24*(-c[14]-c[17]) + 48*(-c[18]) + 96*(-c[ 4]-c[ 1]) + 120*(c[ 3]+c[ 2]) + 144*(c[15]+c[16]) + 240*(c[ 8]+c[ 6]+c[ 7]+c[ 5]) + 288*(-c[12]-c[ 9]) + 360*(c[11]+c[10]) + 1344*(-c[ 0]))+
                            u1.w*(12*(-c[14]-c[13]) + 36*(-c[18]-c[17]) + 72*(c[16]) + 96*(-c[ 1]) + 144*(c[ 5]+c[ 2]) + 192*(-c[ 4]-c[ 9]) + 216*(c[15]+c[ 6]+c[ 3]) + 264*(c[10]+c[ 7]) + 288*(-c[12]) + 336*(c[ 8]+c[11]) + 1344*(-c[ 0]))));
    dii.z += u2.x*(u2.y*(          (6*(c[26]+c[22]+c[25]+c[21]+c[14]+c[13]) + 36*(c[20]+c[15]) + 42*(c[ 6]+c[ 3]) + 66*(-c[18]-c[17]) + 240*(c[ 5]+c[ 2]) + 246*(-c[ 9]-c[ 4]) + 330*(c[11]+c[ 8]) + 468*(c[16]) + 576*(-c[12]) + 600*(c[10]+c[ 7]) + 1800*(-c[ 0])))+
                 u1.y*(u1.z*     (12*(-c[14]+c[26]+c[22]+c[25]+c[21]) + 36*(c[20]) + 72*(-c[ 1]) + 84*(-c[17]) + 180*(c[ 3]+c[15]) + 216*(-c[18]) + 312*(-c[ 4]) + 396*(c[ 2]) + 420*(c[ 6]) + 600*(c[ 5]) + 612*(c[16]) + 708*(c[ 8]) + 852*(-c[ 9]) + 960*(c[ 7]) + 1152*(c[11]) + 1224*(-c[12]) + 1440*(c[10]) + 3960*(-c[ 0]))+
                            u1.w*(12*(c[26]+c[22]+c[25]+c[21]) + 24*(-c[14]-c[13]) + 144*(-c[ 1]) + 168*(-c[18]-c[17]) + 288*(c[16]+c[15]) + 516*(c[ 5]+c[ 2]+c[ 6]+c[ 3]) + 672*(-c[ 4]-c[ 9]) + 1200*(c[11]+c[ 8]+c[10]+c[ 7]) + 1296*(-c[12]) + 4320*(-c[ 0])))+
                      (u2.z*     (6*(c[24]+c[25]+c[20]+c[26]+c[22]+c[23]+c[21]+c[19]) + 12*(-c[17]-c[14]) + 48*(-c[ 4]-c[ 1]) + 108*(c[ 3]+c[ 2]) + 144*(-c[18]) + 180*(c[16]+c[15]) + 330*(c[ 8]+c[ 5]+c[ 7]+c[ 6]) + 588*(-c[ 9]) + 624*(-c[12]) + 774*(c[11]+c[10]) + 2016*(-c[ 0]))+
                       u1.z*u1.w*(12*(-c[14]+c[25]+c[26]+c[22]+c[21]) + 36*(c[19]) + 72*(-c[ 1]) + 84*(-c[17]) + 180*(c[ 2]+c[16]) + 216*(-c[18]) + 312*(-c[ 4]) + 396*(c[ 3]) + 420*(c[ 5]) + 600*(c[ 6]) + 612*(c[15]) + 708*(c[ 7]) + 852*(-c[ 9]) + 960*(c[ 8]) + 1152*(c[10]) + 1224*(-c[12]) + 1440*(c[11]) + 3960*(-c[ 0]))+
                            u2.w*(6*(c[25]+c[21]+c[14]+c[13]+c[26]+c[22]) + 36*(c[16]+c[19]) + 42*(c[ 5]+c[ 2]) + 66*(-c[18]-c[17]) + 240*(c[ 6]+c[ 3]) + 246*(-c[ 4]-c[ 9]) + 330*(c[10]+c[ 7]) + 468*(c[15]) + 576*(-c[12]) + 600*(c[ 8]+c[11]) + 1800*(-c[ 0]))));
    dii.z += u1.x*(u3.y*(          (12*(c[25]+c[21]) + 36*(-c[11]-c[ 8]) + 48*(c[26]+c[22]) + 60*(-c[18]-c[17]) + 72*(-c[ 9]-c[ 4]+c[ 5]+c[ 2]) + 144*(c[20]) + 360*(c[16]) + 432*(c[10]+c[ 7]) + 528*(-c[12]) + 768*(-c[ 0])))+
                 u2.y*(u1.z*     (36*(c[15]) + 48*(c[21]) + 60*(c[25]) + 96*(c[ 3]) + 120*(c[22]) + 132*(-c[17]+c[26]) + 192*(-c[ 4]) + 228*(c[ 6]) + 240*(c[ 2]) + 252*(c[ 8]) + 288*(c[20]) + 336*(-c[18]+c[ 5]) + 600*(-c[ 9]) + 720*(c[11]+c[16]) + 1152*(c[ 7]) + 1656*(c[10]) + 1800*(-c[12]) + 3024*(-c[ 0]))+
                            u1.w*(72*(c[25]+c[21]+c[15]) + 108*(c[26]+c[22]) + 144*(c[20]) + 288*(-c[18]-c[17]) + 324*(c[ 6]+c[ 3]) + 360*(c[16]+c[ 5]+c[ 2]) + 576*(-c[ 9]-c[ 4]) + 1080*(c[11]+c[ 8]) + 1512*(c[10]+c[ 7]) + 2016*(-c[12]) + 3744*(-c[ 0])))+
                 u1.y*(u2.z*     (24*(c[19]) + 36*(c[24]) + 60*(-c[17]+c[21]) + 84*(c[25]) + 96*(-c[ 4]+c[22]) + 108*(c[15]) + 120*(c[26]) + 144*(c[ 3]) + 168*(c[20]) + 216*(c[ 2]) + 408*(c[ 6]) + 432*(c[16]) + 444*(c[ 5]) + 468*(c[ 8]) + 504*(-c[18]) + 864*(c[ 7]) + 984*(-c[ 9]) + 1404*(c[11]) + 1920*(-c[12]) + 1944*(c[10]) + 3456*(-c[ 0]))+
                       u1.z*u1.w*(144*(c[20]+c[19]) + 168*(c[22]+c[21]) + 192*(c[25]+c[26]) + 336*(-c[17]) + 432*(c[16]+c[15]) + 552*(c[ 3]+c[ 2]) + 672*(-c[ 4]) + 816*(-c[18]+c[ 5]+c[ 6]) + 1632*(-c[ 9]) + 2016*(c[ 8]+c[ 7]) + 3168*(c[11]+c[10]) + 4032*(-c[12]) + 7488*(-c[ 0]))+
                            u2.w*(72*(c[16]+c[26]+c[22]) + 108*(c[25]+c[21]) + 144*(c[19]) + 288*(-c[17]-c[18]) + 324*(c[ 5]+c[ 2]) + 360*(c[ 6]+c[ 3]+c[15]) + 576*(-c[ 4]-c[ 9]) + 1080*(c[10]+c[ 7]) + 1512*(c[11]+c[ 8]) + 2016*(-c[12]) + 3744*(-c[ 0])))+
                      (u3.z*     (24*(c[20]+c[22]+c[21]+c[19]) + 36*(c[25]+c[24]+c[26]+c[23]) + 48*(c[ 3]+c[ 2]) + 72*(c[16]+c[15]) + 180*(c[ 8]+c[ 5]+c[ 7]+c[ 6]) + 240*(-c[18]) + 480*(-c[ 9]) + 624*(-c[12]) + 648*(c[11]+c[10]) + 1152*(-c[ 0]))+
                       u2.z*u1.w*(24*(c[20]) + 36*(c[23]) + 60*(-c[17]+c[22]) + 84*(c[26]) + 96*(-c[ 4]+c[21]) + 108*(c[16]) + 120*(c[25]) + 144*(c[ 2]) + 168*(c[19]) + 216*(c[ 3]) + 408*(c[ 5]) + 432*(c[15]) + 444*(c[ 6]) + 468*(c[ 7]) + 504*(-c[18]) + 864*(c[ 8]) + 984*(-c[ 9]) + 1404*(c[10]) + 1920*(-c[12]) + 1944*(c[11]) + 3456*(-c[ 0]))+
                       u1.z*u2.w*(36*(c[16]) + 48*(c[22]) + 60*(c[26]) + 96*(c[ 2]) + 120*(c[21]) + 132*(-c[17]+c[25]) + 192*(-c[ 4]) + 228*(c[ 5]) + 240*(c[ 3]) + 252*(c[ 7]) + 288*(c[19]) + 336*(-c[18]+c[ 6]) + 600*(-c[ 9]) + 720*(c[10]+c[15]) + 1152*(c[ 8]) + 1656*(c[11]) + 1800*(-c[12]) + 3024*(-c[ 0]))+
                            u3.w*(12*(c[26]+c[22]) + 36*(-c[ 7]-c[10]) + 48*(c[25]+c[21]) + 60*(-c[17]-c[18]) + 72*(-c[ 4]-c[ 9]+c[ 6]+c[ 3]) + 144*(c[19]) + 360*(c[15]) + 432*(c[ 8]+c[11]) + 528*(-c[12]) + 768*(-c[ 0]))));
    dii.z +=      (u4.y*(          (3*(-c[ 9]-c[18]-c[ 6]-c[26]-c[ 4]-c[17]-c[ 3]-c[22]) + 6*(c[25]+c[ 5]+c[21]+c[ 2]) + 72*(-c[11]-c[ 8]) + 90*(c[10]+c[ 7]+c[16]+c[20]) + 108*(-c[12]-c[ 0])))+
                 u3.y*(u1.z*     (12*(c[ 3]+c[22]) + 24*(-c[ 4]-c[17]+c[11]) + 36*(c[ 6]+c[26]+c[21]+c[ 2]) + 48*(c[25]+c[ 5]) + 96*(-c[ 8]) + 108*(-c[ 9]-c[18]) + 252*(c[16]+c[20]) + 360*(c[ 7]) + 504*(c[10]) + 648*(-c[12]-c[ 0]))+
                            u1.w*(60*(c[ 6]+c[26]+c[ 3]+c[22]+c[25]+c[ 5]+c[21]+c[ 2]) + 120*(-c[ 9]-c[18]-c[ 4]-c[17]) + 144*(c[16]+c[20]) + 216*(c[11]+c[ 8]) + 504*(c[10]+c[ 7]) + 864*(-c[12]-c[ 0])))+
                 u2.y*(u2.z*     (6*(c[19]+c[15]) + 30*(-c[ 4]-c[17]) + 36*(c[24]) + 42*(c[ 3]+c[22]) + 60*(c[21]+c[ 2]) + 72*(c[ 8]) + 114*(c[ 6]+c[26]+c[25]+c[ 5]) + 240*(c[16]+c[20]) + 336*(-c[18]-c[ 9]) + 432*(c[11]) + 468*(c[ 7]) + 972*(c[10]) + 1200*(-c[12]-c[ 0]))+
                       u1.z*u1.w*(36*(c[19]+c[15]) + 180*(c[ 3]+c[22]+c[21]+c[ 2]) + 252*(-c[ 4]-c[17]+c[ 6]+c[26]+c[16]+c[20]+c[25]+c[ 5]) + 612*(-c[18]-c[ 9]) + 792*(c[ 8]) + 1224*(c[ 7]) + 1368*(c[11]) + 1800*(c[10]) + 2880*(-c[12]-c[ 0]))+
                            u2.w*(36*(c[16]+c[20]+c[19]+c[15]) + 126*(c[ 6]+c[26]+c[ 3]+c[22]+c[25]+c[ 5]+c[21]+c[ 2]) + 252*(-c[18]-c[ 9]-c[17]-c[ 4]) + 756*(c[11]+c[ 8]+c[10]+c[ 7]) + 1584*(-c[12]-c[ 0])))+
                 u1.y*(u3.z*     (12*(c[19]+c[15]) + 36*(c[ 3]+c[22]+c[21]+c[ 2]) + 72*(c[24]) + 84*(c[16]+c[20]) + 108*(c[25]+c[ 5]+c[ 6]+c[26]) + 144*(c[ 8]) + 216*(c[ 7]) + 360*(-c[18]-c[ 9]) + 504*(c[11]) + 792*(c[10]) + 888*(-c[12]-c[ 0]))+
                       u2.z*u1.w*(96*(-c[ 4]-c[17]) + 120*(c[16]+c[20]+c[19]+c[15]) + 156*(c[ 3]+c[22]+c[21]+c[ 2]) + 300*(c[25]+c[ 5]+c[ 6]+c[26]) + 792*(c[ 8]+c[ 7]) + 816*(-c[18]-c[ 9]) + 1944*(c[11]+c[10]) + 2976*(-c[12]-c[ 0]))+
                       u1.z*u2.w*(36*(c[16]+c[20]) + 180*(c[ 3]+c[22]+c[21]+c[ 2]) + 252*(-c[17]-c[ 4]+c[25]+c[ 5]+c[ 6]+c[26]+c[19]+c[15]) + 612*(-c[18]-c[ 9]) + 792*(c[ 7]) + 1224*(c[ 8]) + 1368*(c[10]) + 1800*(c[11]) + 2880*(-c[12]-c[ 0]))+
                            u3.w*(60*(c[25]+c[ 5]+c[21]+c[ 2]+c[ 6]+c[ 3]+c[26]+c[22]) + 120*(-c[17]-c[ 4]-c[18]-c[ 9]) + 144*(c[19]+c[15]) + 216*(c[10]+c[ 7]) + 504*(c[ 8]+c[11]) + 864*(-c[12]-c[ 0])))+
                      (u4.z*     (6*(c[16]+c[ 3]+c[20]+c[22]+c[21]+c[19]+c[ 2]+c[15]) + 36*(c[ 8]+c[24]+c[25]+c[ 5]+c[ 7]+c[ 6]+c[26]+c[23]) + 156*(-c[18]-c[ 9]) + 180*(c[11]+c[10]) + 192*(-c[12]-c[ 0]))+
                       u3.z*u1.w*(12*(c[16]+c[20]) + 36*(c[ 3]+c[22]+c[21]+c[ 2]) + 72*(c[23]) + 84*(c[19]+c[15]) + 108*(c[25]+c[ 5]+c[ 6]+c[26]) + 144*(c[ 7]) + 216*(c[ 8]) + 360*(-c[18]-c[ 9]) + 504*(c[10]) + 792*(c[11]) + 888*(-c[12]-c[ 0]))+
                       u2.z*u2.w*(6*(c[16]+c[20]) + 30*(-c[17]-c[ 4]) + 36*(c[23]) + 42*(c[21]+c[ 2]) + 60*(c[ 3]+c[22]) + 72*(c[ 7]) + 114*(c[25]+c[ 5]+c[ 6]+c[26]) + 240*(c[19]+c[15]) + 336*(-c[18]-c[ 9]) + 432*(c[10]) + 468*(c[ 8]) + 972*(c[11]) + 1200*(-c[12]-c[ 0]))+
                       u1.z*u3.w*(12*(c[21]+c[ 2]) + 24*(-c[17]-c[ 4]+c[10]) + 36*(c[25]+c[ 5]+c[ 3]+c[22]) + 48*(c[ 6]+c[26]) + 96*(-c[ 7]) + 108*(-c[18]-c[ 9]) + 252*(c[19]+c[15]) + 360*(c[ 8]) + 504*(c[11]) + 648*(-c[12]-c[ 0]))+
                            u4.w*(3*(-c[17]-c[ 4]-c[18]-c[ 9]-c[25]-c[21]-c[ 5]-c[ 2]) + 6*(c[ 6]+c[ 3]+c[26]+c[22]) + 72*(-c[ 7]-c[10]) + 90*(c[ 8]+c[11]+c[19]+c[15]) + 108*(-c[12]-c[ 0]))));

    dij.x += u4.x*(     (          (96*(-c[ 6]-c[ 7]+c[ 8]+c[ 5]))));
    dij.x += u3.x*(u1.y*(          (12*(-c[17]-c[16]+c[15]+c[14]) + 48*(-c[11]-c[12]-c[ 3]-c[ 4]+c[ 9]+c[10]+c[ 2]+c[ 1]) + 264*(c[ 5]) + 384*(-c[ 6]-c[ 7]) + 504*(c[ 8])))+
                      (u1.z*     (384*(-c[ 6]-c[ 7]+c[ 8]+c[ 5]))+
                            u1.w*(12*(-c[14]-c[16]+c[15]+c[17]) + 48*(-c[11]-c[ 9]-c[ 1]-c[ 3]+c[12]+c[ 4]+c[10]+c[ 2]) + 264*(-c[ 6]) + 384*(c[ 8]+c[ 5]) + 504*(-c[ 7]))));
    dij.x += u2.x*(u2.y*(          (6*(-c[21]) + 12*(c[18]+c[26]+c[13]) + 18*(c[20]+c[22]+c[15]+c[14]) + 36*(c[ 0]) + 54*(-c[17]-c[16]) + 108*(c[ 2]+c[ 1]) + 132*(c[10]+c[ 9]) + 138*(-c[ 4]-c[ 3]) + 180*(-c[12]) + 198*(-c[11]) + 264*(c[ 5]) + 516*(-c[ 7]-c[ 6]) + 912*(c[ 8])))+
                 u1.y*(u1.z*     (12*(-c[24]-c[25]-c[21]) + 24*(c[20]+c[26]+c[22]) + 36*(-c[17]-c[16]+c[15]+c[14]) + 72*(c[ 0]) + 120*(-c[ 4]-c[ 3]+c[ 2]+c[ 1]) + 168*(-c[12]+c[ 9]+c[10]) + 204*(-c[11]) + 768*(c[ 5]) + 1128*(-c[ 7]-c[ 6]) + 1416*(c[ 8]))+
                            u1.w*(12*(-c[25]+c[26]) + 24*(-c[21]+c[22]) + 72*(-c[16]+c[15]) + 264*(-c[ 3]+c[ 2]) + 312*(-c[11]+c[10]) + 780*(-c[ 6]+c[ 5]) + 1464*(-c[ 7]+c[ 8])))+
                      (u2.z*     (6*(-c[21]-c[19]+c[20]+c[22]) + 12*(-c[24]-c[25]+c[26]+c[23]) + 18*(-c[11]+c[10]) + 552*(-c[ 7]-c[ 6]+c[ 8]+c[ 5]))+
                       u1.z*u1.w*(12*(c[26]+c[22]+c[23]) + 24*(-c[25]-c[21]-c[19]) + 36*(-c[16]-c[14]+c[15]+c[17]) + 72*(-c[ 0]) + 120*(-c[ 3]-c[ 1]+c[ 4]+c[ 2]) + 168*(-c[11]-c[ 9]+c[12]) + 204*(c[10]) + 768*(-c[ 6]) + 1128*(c[ 8]+c[ 5]) + 1416*(-c[ 7]))+
                            u2.w*(6*(c[22]) + 12*(-c[18]-c[25]-c[13]) + 18*(-c[21]-c[14]-c[16]-c[19]) + 36*(-c[ 0]) + 54*(c[15]+c[17]) + 108*(-c[ 3]-c[ 1]) + 132*(-c[11]-c[ 9]) + 138*(c[ 4]+c[ 2]) + 180*(c[12]) + 198*(c[10]) + 264*(-c[ 6]) + 516*(c[ 8]+c[ 5]) + 912*(-c[ 7]))));
    dij.x += u1.x*(u3.y*(          (12*(-c[21]) + 24*(c[ 2]+c[ 1]) + 60*(-c[ 4]-c[ 3]) + 72*(c[26]+c[ 5]) + 96*(c[20]+c[22]) + 108*(-c[17]-c[16]) + 156*(c[10]+c[ 9]) + 228*(-c[ 7]-c[ 6]) + 288*(c[ 0]) + 336*(-c[12]) + 372*(-c[11]) + 528*(c[ 8])))+
                 u2.y*(u1.z*     (12*(c[15]+c[14]) + 24*(-c[18]) + 36*(-c[24]-c[25]) + 48*(-c[21]) + 72*(c[ 2]+c[ 1]) + 120*(-c[ 4]-c[ 3]) + 156*(-c[17]-c[16]) + 192*(c[26]) + 204*(c[20]+c[22]) + 384*(c[ 5]) + 420*(c[10]+c[ 9]) + 648*(c[ 0]) + 672*(-c[12]) + 816*(-c[11]) + 876*(-c[ 7]-c[ 6]) + 1296*(c[ 8]))+
                            u1.w*(12*(c[14]+c[13]) + 36*(-c[25]+c[15]) + 72*(-c[ 4]+c[20]+c[ 1]) + 84*(-c[21]) + 108*(-c[16]+c[26]) + 120*(-c[17]) + 168*(c[ 9]+c[22]) + 216*(c[ 2]) + 288*(c[ 0]) + 324*(-c[ 3]) + 360*(-c[12]) + 456*(c[ 5]) + 516*(c[10]) + 696*(-c[ 6]) + 708*(-c[11]) + 1140*(-c[ 7]) + 1524*(c[ 8])))+
                 u1.y*(u2.z*     (12*(c[15]+c[14]) + 24*(-c[19]) + 48*(-c[ 4]-c[17]-c[ 3]-c[16]+c[ 2]+c[ 1]) + 60*(-c[21]) + 84*(-c[24]-c[25]) + 132*(c[20]+c[22]) + 168*(c[26]) + 288*(c[ 0]) + 324*(c[ 9]) + 360*(-c[12]) + 396*(c[10]) + 540*(-c[11]) + 600*(c[ 5]) + 948*(-c[ 7]-c[ 6]) + 1080*(c[ 8]))+
                       u1.z*u1.w*(96*(-c[16]-c[19]+c[20]+c[15]) + 192*(-c[25]+c[26]) + 216*(-c[21]+c[22]) + 336*(-c[ 3]+c[ 2]) + 1128*(-c[11]+c[10]) + 1368*(-c[ 6]+c[ 5]) + 2424*(-c[ 7]+c[ 8]))+
                            u2.w*(12*(-c[14]-c[13]) + 36*(-c[16]+c[26]) + 72*(-c[ 1]-c[19]+c[ 4]) + 84*(c[22]) + 108*(-c[25]+c[15]) + 120*(c[17]) + 168*(-c[ 9]-c[21]) + 216*(-c[ 3]) + 288*(-c[ 0]) + 324*(c[ 2]) + 360*(c[12]) + 456*(-c[ 6]) + 516*(-c[11]) + 696*(c[ 5]) + 708*(c[10]) + 1140*(c[ 8]) + 1524*(-c[ 7])))+
                      (u3.z*     (24*(-c[21]-c[19]+c[20]+c[22]) + 48*(-c[25]-c[24]+c[26]+c[23]) + 72*(-c[11]+c[10]) + 288*(-c[ 7]-c[ 6]+c[ 8]+c[ 5]))+
                       u2.z*u1.w*(12*(-c[16]-c[14]) + 24*(c[20]) + 48*(-c[ 3]-c[ 1]+c[ 4]+c[17]+c[ 2]+c[15]) + 60*(c[22]) + 84*(c[26]+c[23]) + 132*(-c[21]-c[19]) + 168*(-c[25]) + 288*(-c[ 0]) + 324*(-c[ 9]) + 360*(c[12]) + 396*(-c[11]) + 540*(c[10]) + 600*(-c[ 6]) + 948*(c[ 8]+c[ 5]) + 1080*(-c[ 7]))+
                       u1.z*u2.w*(12*(-c[14]-c[16]) + 24*(c[18]) + 36*(c[26]+c[23]) + 48*(c[22]) + 72*(-c[ 3]-c[ 1]) + 120*(c[ 4]+c[ 2]) + 156*(c[15]+c[17]) + 192*(-c[25]) + 204*(-c[21]-c[19]) + 384*(-c[ 6]) + 420*(-c[11]-c[ 9]) + 648*(-c[ 0]) + 672*(c[12]) + 816*(c[10]) + 876*(c[ 8]+c[ 5]) + 1296*(-c[ 7]))+
                            u3.w*(12*(c[22]) + 24*(-c[ 3]-c[ 1]) + 60*(c[ 4]+c[ 2]) + 72*(-c[25]-c[ 6]) + 96*(-c[21]-c[19]) + 108*(c[17]+c[15]) + 156*(-c[11]-c[ 9]) + 228*(c[ 8]+c[ 5]) + 288*(-c[ 0]) + 336*(c[12]) + 372*(c[10]) + 528*(-c[ 7]))));
    dij.x +=      (u4.y*(          (6*(-c[21]+c[ 5]) + 12*(-c[ 4]-c[ 3]+c[18]+c[26]) + 39*(-c[ 7]-c[ 6]-c[17]-c[16]+c[10]+c[ 9]+c[22]+c[20]) + 102*(-c[12]+c[ 0]) + 120*(-c[11]+c[ 8])))+
                  u3.y*(u1.z*     (24*(-c[24]-c[25]+c[18]) + 36*(-c[ 4]-c[ 3]-c[21]) + 48*(c[ 5]) + 84*(-c[17]-c[16]) + 96*(c[26]) + 120*(c[22]+c[20]) + 180*(c[10]+c[ 9]) + 204*(-c[ 7]-c[ 6]) + 336*(-c[12]) + 360*(c[ 0]) + 384*(c[ 8]) + 444*(-c[11]))+
                             u1.w*(12*(-c[ 4]+c[18]) + 24*(-c[25]+c[ 2]) + 48*(-c[16]+c[20]) + 60*(-c[21]+c[ 5]) + 84*(-c[ 3]+c[26]) + 108*(-c[17]+c[ 9]) + 168*(-c[ 6]+c[22]) + 228*(-c[ 7]+c[10]) + 288*(-c[12]+c[ 0]) + 420*(-c[11]+c[ 8])))+
                  u2.y*(u2.z*     (6*(-c[19]) + 30*(-c[ 4]-c[ 3]) + 48*(-c[17]-c[16]+c[18]) + 60*(-c[21]) + 90*(-c[24]-c[25]) + 120*(c[ 5]) + 132*(c[22]+c[20]) + 192*(c[26]) + 288*(c[ 9]) + 306*(c[10]) + 342*(-c[ 7]-c[ 6]) + 372*(c[ 0]) + 396*(-c[12]) + 468*(c[ 8]) + 576*(-c[11]))+
                        u1.z*u1.w*(12*(c[15]) + 24*(-c[19]) + 36*(-c[ 4]) + 60*(-c[16]) + 72*(c[ 2]) + 120*(-c[17]+c[20]) + 144*(-c[ 3]) + 180*(-c[25]) + 204*(c[ 9]) + 228*(-c[21]) + 288*(c[26]) + 312*(c[ 5]) + 348*(c[22]) + 384*(-c[12]) + 480*(c[ 0]) + 516*(-c[ 6]) + 828*(-c[ 7]+c[10]) + 1044*(c[ 8]) + 1188*(-c[11]))+
                             u2.w*(18*(-c[16]-c[19]+c[20]+c[15]) + 90*(-c[ 3]-c[25]+c[26]+c[ 2]) + 180*(-c[ 6]-c[21]+c[22]+c[ 5]) + 486*(-c[11]-c[ 7]+c[ 8]+c[10])))+
                  u1.y*(u3.z*     (12*(-c[19]) + 36*(-c[21]) + 60*(c[22]+c[20]) + 72*(c[ 0]+c[18]) + 108*(-c[25]-c[24]) + 120*(c[ 5]) + 144*(c[26]) + 192*(-c[12]+c[ 9]) + 228*(-c[ 7]-c[ 6]+c[10]) + 264*(c[ 8]) + 300*(-c[11]))+
                        u2.z*u1.w*(12*(-c[16]+c[15]) + 48*(-c[ 3]+c[ 2]) + 84*(-c[19]+c[20]) + 228*(-c[21]+c[22]) + 300*(-c[25]+c[26]) + 480*(-c[ 6]+c[ 5]) + 900*(-c[ 7]+c[ 8]) + 1044*(-c[11]+c[10]))+
                        u1.z*u2.w*(12*(-c[16]) + 24*(c[20]) + 36*(c[ 4]) + 60*(c[15]) + 72*(-c[ 3]) + 120*(-c[19]+c[17]) + 144*(c[ 2]) + 180*(c[26]) + 204*(-c[ 9]) + 228*(c[22]) + 288*(-c[25]) + 312*(-c[ 6]) + 348*(-c[21]) + 384*(c[12]) + 480*(-c[ 0]) + 516*(c[ 5]) + 828*(-c[11]+c[ 8]) + 1044*(-c[ 7]) + 1188*(c[10]))+
                             u3.w*(12*(-c[18]+c[ 4]) + 24*(-c[ 3]+c[26]) + 48*(-c[19]+c[15]) + 60*(-c[ 6]+c[22]) + 84*(-c[25]+c[ 2]) + 108*(-c[ 9]+c[17]) + 168*(-c[21]+c[ 5]) + 228*(-c[11]+c[ 8]) + 288*(-c[ 0]+c[12]) + 420*(-c[ 7]+c[10])))+
                       (u4.z*     (6*(-c[21]-c[19]+c[20]+c[22]) + 18*(-c[11]+c[10]) + 42*(-c[24]-c[25]-c[ 7]-c[ 6]+c[ 8]+c[ 5]+c[26]+c[23]))+
                        u3.z*u1.w*(12*(c[20]) + 36*(c[22]) + 60*(-c[21]-c[19]) + 72*(-c[ 0]-c[18]) + 108*(c[26]+c[23]) + 120*(-c[ 6]) + 144*(-c[25]) + 192*(-c[ 9]+c[12]) + 228*(-c[11]+c[ 8]+c[ 5]) + 264*(-c[ 7]) + 300*(c[10]))+
                        u2.z*u2.w*(6*(c[20]) + 30*(c[ 4]+c[ 2]) + 48*(-c[18]+c[17]+c[15]) + 60*(c[22]) + 90*(c[26]+c[23]) + 120*(-c[ 6]) + 132*(-c[21]-c[19]) + 192*(-c[25]) + 288*(-c[ 9]) + 306*(-c[11]) + 342*(c[ 8]+c[ 5]) + 372*(-c[ 0]) + 396*(c[12]) + 468*(-c[ 7]) + 576*(c[10]))+
                        u1.z*u3.w*(24*(-c[18]+c[26]+c[23]) + 36*(c[ 4]+c[ 2]+c[22]) + 48*(-c[ 6]) + 84*(c[17]+c[15]) + 96*(-c[25]) + 120*(-c[21]-c[19]) + 180*(-c[11]-c[ 9]) + 204*(c[ 8]+c[ 5]) + 336*(c[12]) + 360*(-c[ 0]) + 384*(-c[ 7]) + 444*(c[10]))+
                             u4.w*(6*(-c[ 6]+c[22]) + 12*(-c[18]-c[25]+c[ 4]+c[ 2]) + 39*(-c[11]-c[ 9]-c[21]-c[19]+c[ 8]+c[17]+c[ 5]+c[15]) + 102*(-c[ 0]+c[12]) + 120*(-c[ 7]+c[10]))));

    dij.y += u4.x*(     (          (96*(-c[ 3]-c[10]+c[11]+c[ 2]))));
    dij.y += u3.x*(u1.y*(          (12*(-c[18]-c[16]+c[15]+c[13]) + 48*(-c[ 8]-c[12]-c[ 6]-c[ 9]+c[ 4]+c[ 7]+c[ 5]+c[ 1]) + 264*(c[ 2]) + 384*(-c[ 3]-c[10]) + 504*(c[11])))+
                      (u1.z*     (24*(-c[16]+c[15]) + 96*(-c[ 8]-c[ 6]+c[ 7]+c[ 5]) + 264*(-c[ 3]+c[ 2]) + 504*(-c[10]+c[11]))+
                            u1.w*(12*(-c[16]-c[13]+c[15]+c[18]) + 48*(-c[ 8]-c[ 4]-c[ 6]-c[ 1]+c[12]+c[ 9]+c[ 7]+c[ 5]) + 264*(-c[ 3]) + 384*(c[11]+c[ 2]) + 504*(-c[10]))));
    dij.y += u2.x*(u2.y*(          (6*(-c[25]) + 12*(c[17]+c[22]+c[14]) + 18*(c[20]+c[26]+c[15]+c[13]) + 36*(c[ 0]) + 54*(-c[18]-c[16]) + 108*(c[ 5]+c[ 1]) + 132*(c[ 7]+c[ 4]) + 138*(-c[ 9]-c[ 6]) + 180*(-c[12]) + 198*(-c[ 8]) + 264*(c[ 2]) + 516*(-c[10]-c[ 3]) + 912*(c[11])))+
                 u1.y*(u1.z*     (12*(c[24]+c[20]+c[22]) + 24*(-c[25]+c[17]+c[14]) + 36*(c[26]) + 72*(-c[18]+c[15]) + 96*(c[ 4]+c[ 1]) + 144*(-c[16]) + 156*(-c[ 9]) + 192*(-c[12]) + 360*(c[ 5]) + 408*(c[ 7]) + 420*(-c[ 6]) + 468*(-c[ 8]) + 540*(c[ 2]) + 684*(-c[ 3]) + 1368*(-c[10]) + 1836*(c[11]))+
                            u1.w*(12*(-c[21]+c[22]) + 24*(-c[25]+c[26]) + 72*(-c[16]+c[15]) + 264*(-c[ 6]+c[ 5]) + 312*(-c[ 8]+c[ 7]) + 780*(-c[ 3]+c[ 2]) + 1464*(-c[10]+c[11])))+
                      (u2.z*     (18*(-c[25]-c[23]+c[24]+c[26]) + 72*(-c[16]+c[15]) + 216*(-c[ 3]+c[ 2]) + 270*(-c[ 8]-c[ 6]+c[ 5]+c[ 7]) + 864*(-c[10]+c[11]))+
                       u1.z*u1.w*(12*(-c[23]-c[21]-c[19]) + 24*(-c[17]-c[14]+c[26]) + 36*(-c[25]) + 72*(-c[16]+c[18]) + 96*(-c[ 4]-c[ 1]) + 144*(c[15]) + 156*(c[ 9]) + 192*(c[12]) + 360*(-c[ 6]) + 408*(-c[ 8]) + 420*(c[ 5]) + 468*(c[ 7]) + 540*(-c[ 3]) + 684*(c[ 2]) + 1368*(c[11]) + 1836*(-c[10]))+
                            u2.w*(6*(c[26]) + 12*(-c[17]-c[21]-c[14]) + 18*(-c[25]-c[16]-c[13]-c[19]) + 36*(-c[ 0]) + 54*(c[18]+c[15]) + 108*(-c[ 6]-c[ 1]) + 132*(-c[ 8]-c[ 4]) + 138*(c[ 9]+c[ 5]) + 180*(c[12]) + 198*(c[ 7]) + 264*(-c[ 3]) + 516*(c[11]+c[ 2]) + 912*(-c[10]))));
    dij.y += u1.x*(u3.y*(          (12*(-c[25]) + 24*(c[ 1]+c[ 5]) + 60*(-c[ 9]-c[ 6]) + 72*(c[22]+c[ 2]) + 96*(c[20]+c[26]) + 108*(-c[18]-c[16]) + 156*(c[ 7]+c[ 4]) + 228*(-c[10]-c[ 3]) + 288*(c[ 0]) + 336*(-c[12]) + 372*(-c[ 8]) + 528*(c[11])))+
                 u2.y*(u1.z*     (12*(c[14]) + 24*(c[17]+c[15]) + 36*(c[24]) + 72*(-c[25]+c[ 1]) + 132*(-c[ 9]+c[22]) + 156*(c[20]) + 216*(c[ 5]+c[ 4]) + 252*(c[26]) + 276*(-c[16]) + 288*(-c[18]+c[ 2]) + 384*(-c[ 6]) + 504*(-c[ 3]+c[ 0]) + 564*(c[ 7]) + 696*(-c[12]) + 900*(-c[ 8]) + 948*(-c[10]) + 1704*(c[11]))+
                            u1.w*(12*(c[14]+c[13]) + 36*(-c[21]+c[15]) + 72*(-c[ 9]+c[20]+c[ 1]) + 84*(-c[25]) + 108*(-c[16]+c[22]) + 120*(-c[18]) + 168*(c[ 4]+c[26]) + 216*(c[ 5]) + 288*(c[ 0]) + 324*(-c[ 6]) + 360*(-c[12]) + 456*(c[ 2]) + 516*(c[ 7]) + 696*(-c[ 3]) + 708*(-c[ 8]) + 1140*(-c[10]) + 1524*(c[11])))+
                 u1.y*(u2.z*     (12*(c[17]+c[14]) + 48*(c[ 4]+c[ 1]) + 60*(c[20]+c[22]) + 72*(c[15]) + 96*(c[24]) + 120*(-c[25]) + 132*(-c[ 9]) + 216*(-c[18]-c[16]+c[26]) + 288*(c[ 0]+c[ 2]) + 312*(-c[12]) + 360*(-c[ 3]) + 396*(c[ 5]) + 516*(-c[ 6]) + 636*(c[ 7]) + 756*(-c[ 8]) + 1260*(-c[10]) + 1656*(c[11]))+
                       u1.z*u1.w*(48*(-c[19]+c[20]) + 96*(-c[21]+c[22]) + 192*(-c[16]+c[15]) + 288*(-c[25]+c[26]) + 744*(-c[ 6]+c[ 5]) + 936*(-c[ 3]+c[ 2]) + 1320*(-c[ 8]+c[ 7]) + 2904*(-c[10]+c[11]))+
                            u2.w*(12*(-c[14]-c[13]) + 36*(-c[16]+c[22]) + 72*(-c[ 1]-c[19]+c[ 9]) + 84*(c[26]) + 108*(-c[21]+c[15]) + 120*(c[18]) + 168*(-c[ 4]-c[25]) + 216*(-c[ 6]) + 288*(-c[ 0]) + 324*(c[ 5]) + 360*(c[12]) + 456*(-c[ 3]) + 516*(-c[ 8]) + 696*(c[ 2]) + 708*(c[ 7]) + 1140*(c[11]) + 1524*(-c[10])))+
                      (u3.z*     (48*(-c[16]+c[15]) + 60*(-c[25]-c[23]+c[24]+c[26]) + 72*(-c[ 3]+c[ 2]) + 204*(-c[ 8]-c[ 6]+c[ 5]+c[ 7]) + 456*(-c[10]+c[11]))+
                       u2.z*u1.w*(12*(-c[17]-c[14]) + 48*(-c[ 4]-c[ 1]) + 60*(-c[21]-c[19]) + 72*(-c[16]) + 96*(-c[23]) + 120*(c[26]) + 132*(c[ 9]) + 216*(-c[25]+c[18]+c[15]) + 288*(-c[ 0]-c[ 3]) + 312*(c[12]) + 360*(c[ 2]) + 396*(-c[ 6]) + 516*(c[ 5]) + 636*(-c[ 8]) + 756*(c[ 7]) + 1260*(c[11]) + 1656*(-c[10]))+
                       u1.z*u2.w*(12*(-c[14]) + 24*(-c[17]-c[16]) + 36*(-c[23]) + 72*(-c[ 1]+c[26]) + 132*(-c[21]+c[ 9]) + 156*(-c[19]) + 216*(-c[ 6]-c[ 4]) + 252*(-c[25]) + 276*(c[15]) + 288*(-c[ 3]+c[18]) + 384*(c[ 5]) + 504*(-c[ 0]+c[ 2]) + 564*(-c[ 8]) + 696*(c[12]) + 900*(c[ 7]) + 948*(c[11]) + 1704*(-c[10]))+
                            u3.w*(12*(c[26]) + 24*(-c[ 6]-c[ 1]) + 60*(c[ 9]+c[ 5]) + 72*(-c[21]-c[ 3]) + 96*(-c[25]-c[19]) + 108*(c[18]+c[15]) + 156*(-c[ 8]-c[ 4]) + 228*(c[11]+c[ 2]) + 288*(-c[ 0]) + 336*(c[12]) + 372*(c[ 7]) + 528*(-c[10]))));
    dij.y +=      (u4.y*(          (6*(-c[25]+c[ 2]) + 12*(-c[ 9]-c[ 6]+c[17]+c[22]) + 39*(-c[10]-c[18]-c[ 3]-c[16]+c[ 7]+c[26]+c[ 4]+c[20]) + 102*(-c[12]+c[ 0]) + 120*(-c[ 8]+c[11])))+
                 u3.y*(u1.z*     (24*(-c[ 9]+c[24]+c[ 5]) + 36*(c[17]+c[22]+c[ 2]) + 48*(-c[25]) + 84*(c[ 4]+c[20]) + 96*(-c[ 6]) + 120*(-c[ 3]-c[16]) + 180*(-c[18]-c[10]) + 204*(c[ 7]+c[26]) + 336*(c[ 0]) + 360*(-c[12]) + 384*(-c[ 8]) + 444*(c[11]))+
                            u1.w*(12*(-c[ 9]+c[17]) + 24*(-c[21]+c[ 5]) + 48*(-c[16]+c[20]) + 60*(-c[25]+c[ 2]) + 84*(-c[ 6]+c[22]) + 108*(-c[18]+c[ 4]) + 168*(-c[ 3]+c[26]) + 228*(-c[10]+c[ 7]) + 288*(-c[12]+c[ 0]) + 420*(-c[ 8]+c[11])))+
                 u2.y*(u2.z*     (6*(c[15]) + 30*(c[17]+c[22]) + 48*(-c[ 9]+c[ 4]+c[20]) + 60*(c[ 2]) + 90*(c[ 5]+c[24]) + 120*(-c[25]) + 132*(-c[ 3]-c[16]) + 192*(-c[ 6]) + 288*(-c[18]) + 306*(-c[10]) + 342*(c[ 7]+c[26]) + 372*(-c[12]) + 396*(c[ 0]) + 468*(-c[ 8]) + 576*(c[11]))+
                       u1.z*u1.w*(12*(-c[19]) + 24*(c[15]) + 36*(c[17]) + 60*(c[20]) + 72*(-c[21]) + 120*(-c[16]+c[ 4]) + 144*(c[22]) + 180*(c[ 5]) + 204*(-c[18]) + 228*(c[ 2]) + 288*(-c[ 6]) + 312*(-c[25]) + 348*(-c[ 3]) + 384*(c[ 0]) + 480*(-c[12]) + 516*(c[26]) + 828*(-c[10]+c[ 7]) + 1044*(-c[ 8]) + 1188*(c[11]))+
                            u2.w*(18*(-c[16]-c[19]+c[20]+c[15]) + 90*(-c[ 6]-c[21]+c[ 5]+c[22]) + 180*(-c[25]-c[ 3]+c[26]+c[ 2]) + 486*(-c[ 8]-c[10]+c[11]+c[ 7])))+
                 u1.y*(u3.z*     (12*(c[15]) + 36*(c[ 2]) + 60*(-c[16]-c[ 3]) + 72*(-c[12]-c[ 9]) + 108*(c[24]+c[ 5]) + 120*(-c[25]) + 144*(-c[ 6]) + 192*(-c[18]+c[ 0]) + 228*(-c[10]+c[ 7]+c[26]) + 264*(-c[ 8]) + 300*(c[11]))+
                       u2.z*u1.w*(12*(-c[19]+c[20]) + 48*(-c[21]+c[22]) + 84*(-c[16]+c[15]) + 228*(-c[ 3]+c[ 2]) + 300*(-c[ 6]+c[ 5]) + 480*(-c[25]+c[26]) + 900*(-c[ 8]+c[ 7]) + 1044*(-c[10]+c[11]))+
                       u1.z*u2.w*(12*(c[20]) + 24*(-c[16]) + 36*(-c[17]) + 60*(-c[19]) + 72*(c[22]) + 120*(-c[ 4]+c[15]) + 144*(-c[21]) + 180*(-c[ 6]) + 204*(c[18]) + 228*(-c[ 3]) + 288*(c[ 5]) + 312*(c[26]) + 348*(c[ 2]) + 384*(-c[ 0]) + 480*(c[12]) + 516*(-c[25]) + 828*(-c[ 8]+c[11]) + 1044*(c[ 7]) + 1188*(-c[10]))+
                            u3.w*(12*(-c[17]+c[ 9]) + 24*(-c[ 6]+c[22]) + 48*(-c[19]+c[15]) + 60*(-c[ 3]+c[26]) + 84*(-c[21]+c[ 5]) + 108*(-c[ 4]+c[18]) + 168*(-c[25]+c[ 2]) + 228*(-c[ 8]+c[11]) + 288*(-c[ 0]+c[12]) + 420*(-c[10]+c[ 7])))+
                      (u4.z*     (6*(-c[16]-c[ 3]+c[ 2]+c[15]) + 18*(-c[10]+c[11]) + 42*(-c[ 8]-c[25]-c[ 6]-c[23]+c[24]+c[ 5]+c[ 7]+c[26]))+
                       u3.z*u1.w*(12*(-c[16]) + 36*(-c[ 3]) + 60*(c[ 2]+c[15]) + 72*(c[12]+c[ 9]) + 108*(-c[ 6]-c[23]) + 120*(c[26]) + 144*(c[ 5]) + 192*(-c[ 0]+c[18]) + 228*(-c[ 8]-c[25]+c[11]) + 264*(c[ 7]) + 300*(-c[10]))+
                       u2.z*u2.w*(6*(-c[16]) + 30*(-c[17]-c[21]) + 48*(-c[ 4]-c[19]+c[ 9]) + 60*(-c[ 3]) + 90*(-c[ 6]-c[23]) + 120*(c[26]) + 132*(c[ 2]+c[15]) + 192*(c[ 5]) + 288*(c[18]) + 306*(c[11]) + 342*(-c[ 8]-c[25]) + 372*(c[12]) + 396*(-c[ 0]) + 468*(c[ 7]) + 576*(-c[10]))+
                       u1.z*u3.w*(24*(-c[ 6]-c[23]+c[ 9]) + 36*(-c[21]-c[17]-c[ 3]) + 48*(c[26]) + 84*(-c[19]-c[ 4]) + 96*(c[ 5]) + 120*(c[ 2]+c[15]) + 180*(c[11]+c[18]) + 204*(-c[ 8]-c[25]) + 336*(-c[ 0]) + 360*(c[12]) + 384*(c[ 7]) + 444*(-c[10]))+
                            u4.w*(6*(-c[ 3]+c[26]) + 12*(-c[17]-c[21]+c[ 9]+c[ 5]) + 39*(-c[ 8]-c[ 4]-c[25]-c[19]+c[11]+c[18]+c[ 2]+c[15]) + 102*(-c[ 0]+c[12]) + 120*(-c[10]+c[ 7]))));

    dij.z += u4.x*(     (          (96*(-c[ 4]-c[ 9]+c[12]+c[ 1]))));
    dij.z += u3.x*(u1.y*(          (12*(-c[18]-c[17]+c[13]+c[14]) + 48*(-c[11]-c[ 8]-c[10]-c[ 7]+c[ 6]+c[ 2]+c[ 5]+c[ 3]) + 264*(c[ 1]) + 384*(-c[ 9]-c[ 4]) + 504*(c[12])))+
                      (u1.z*     (24*(-c[17]+c[14]) + 96*(-c[ 8]-c[ 7]+c[ 6]+c[ 5]) + 264*(-c[ 4]+c[ 1]) + 504*(-c[ 9]+c[12]))+
                            u1.w*(12*(-c[18]-c[17]+c[13]+c[14]) + 48*(-c[ 8]-c[11]-c[10]-c[ 7]+c[ 5]+c[ 2]+c[ 6]+c[ 3]) + 264*(c[ 1]) + 384*(-c[ 4]-c[ 9]) + 504*(c[12]))));
    dij.z += u2.x*(u2.y*(          (6*(-c[24]) + 12*(c[16]+c[20]+c[15]) + 18*(c[26]+c[22]+c[14]+c[13]) + 36*(c[ 0]) + 54*(-c[18]-c[17]) + 108*(c[ 5]+c[ 2]) + 132*(c[ 6]+c[ 3]) + 138*(-c[10]-c[ 7]) + 180*(-c[11]) + 198*(-c[ 8]) + 264*(c[ 1]) + 516*(-c[ 9]-c[ 4]) + 912*(c[12])))+
                 u1.y*(u1.z*     (12*(c[25]+c[20]+c[22]) + 24*(-c[24]+c[16]+c[15]) + 36*(c[26]) + 72*(-c[18]+c[14]) + 96*(c[ 3]+c[ 2]) + 144*(-c[17]) + 156*(-c[10]) + 192*(-c[11]) + 360*(c[ 5]) + 408*(c[ 6]) + 420*(-c[ 7]) + 468*(-c[ 8]) + 540*(c[ 1]) + 684*(-c[ 4]) + 1368*(-c[ 9]) + 1836*(c[12]))+
                            u1.w*(12*(c[25]+c[26]+c[22]+c[21]) + 24*(c[15]+c[16]) + 36*(c[14]+c[13]) + 108*(-c[18]-c[17]) + 240*(c[ 5]+c[ 2]+c[ 6]+c[ 3]) + 300*(-c[11]-c[ 8]-c[10]-c[ 7]) + 552*(c[ 1]) + 1056*(-c[ 4]-c[ 9]) + 1848*(c[12])))+
                      (u2.z*     (18*(-c[24]-c[23]+c[25]+c[26]) + 72*(-c[17]+c[14]) + 216*(-c[ 4]+c[ 1]) + 270*(-c[ 8]-c[ 7]+c[ 5]+c[ 6]) + 864*(-c[ 9]+c[12]))+
                       u1.z*u1.w*(12*(c[26]+c[21]+c[19]) + 24*(-c[23]+c[15]+c[16]) + 36*(c[25]) + 72*(-c[18]+c[14]) + 96*(c[ 2]+c[ 3]) + 144*(-c[17]) + 156*(-c[11]) + 192*(-c[10]) + 360*(c[ 6]) + 408*(c[ 5]) + 420*(-c[ 8]) + 468*(-c[ 7]) + 540*(c[ 1]) + 684*(-c[ 4]) + 1368*(-c[ 9]) + 1836*(c[12]))+
                            u2.w*(6*(-c[23]) + 12*(c[15]+c[19]+c[16]) + 18*(c[25]+c[21]+c[14]+c[13]) + 36*(c[ 0]) + 54*(-c[18]-c[17]) + 108*(c[ 3]+c[ 6]) + 132*(c[ 5]+c[ 2]) + 138*(-c[ 8]-c[11]) + 180*(-c[10]) + 198*(-c[ 7]) + 264*(c[ 1]) + 516*(-c[ 4]-c[ 9]) + 912*(c[12]))));
    dij.z += u1.x*(u3.y*(          (12*(-c[24]) + 24*(c[ 2]+c[ 5]) + 60*(-c[10]-c[ 7]) + 72*(c[20]+c[ 1]) + 96*(c[26]+c[22]) + 108*(-c[18]-c[17]) + 156*(c[ 6]+c[ 3]) + 228*(-c[ 9]-c[ 4]) + 288*(c[ 0]) + 336*(-c[11]) + 372*(-c[ 8]) + 528*(c[12])))+
                 u2.y*(u1.z*     (12*(c[15]) + 24*(c[16]+c[14]) + 36*(c[25]) + 72*(-c[24]+c[ 2]) + 132*(-c[10]+c[20]) + 156*(c[22]) + 216*(c[ 5]+c[ 3]) + 252*(c[26]) + 276*(-c[17]) + 288*(-c[18]+c[ 1]) + 384*(-c[ 7]) + 504*(-c[ 4]+c[ 0]) + 564*(c[ 6]) + 696*(-c[11]) + 900*(-c[ 8]) + 948*(-c[ 9]) + 1704*(c[12]))+
                            u1.w*(24*(c[15]+c[14]+c[13]) + 36*(c[25]+c[21]) + 48*(c[16]+c[20]) + 120*(c[26]+c[22]) + 216*(c[ 5]+c[ 2]) + 276*(-c[18]-c[17]) + 288*(c[ 0]) + 312*(c[ 6]+c[ 3]) + 336*(-c[10]-c[ 7]) + 360*(c[ 1]) + 588*(-c[11]-c[ 8]) + 840*(-c[ 9]-c[ 4]) + 1896*(c[12])))+
                 u1.y*(u2.z*     (12*(c[16]+c[15]) + 48*(c[ 3]+c[ 2]) + 60*(c[20]+c[22]) + 72*(c[14]) + 96*(c[25]) + 120*(-c[24]) + 132*(-c[10]) + 216*(-c[18]-c[17]+c[26]) + 288*(c[ 0]+c[ 1]) + 312*(-c[11]) + 360*(-c[ 4]) + 396*(c[ 5]) + 516*(-c[ 7]) + 636*(c[ 6]) + 756*(-c[ 8]) + 1260*(-c[ 9]) + 1656*(c[12]))+
                       u1.z*u1.w*(48*(c[20]+c[19]) + 72*(c[16]+c[15]) + 96*(c[22]+c[14]+c[21]) + 216*(c[25]+c[26]) + 288*(c[ 3]+c[ 2]) + 528*(-c[17]) + 576*(-c[18]+c[ 0]) + 720*(-c[11]-c[10]+c[ 1]) + 768*(c[ 5]+c[ 6]) + 1128*(-c[ 8]-c[ 7]) + 1152*(-c[ 4]) + 2208*(-c[ 9]) + 3792*(c[12]))+
                            u2.w*(24*(c[14]+c[13]+c[16]) + 36*(c[26]+c[22]) + 48*(c[15]+c[19]) + 120*(c[25]+c[21]) + 216*(c[ 3]+c[ 6]) + 276*(-c[18]-c[17]) + 288*(c[ 0]) + 312*(c[ 5]+c[ 2]) + 336*(-c[11]-c[ 8]) + 360*(c[ 1]) + 588*(-c[10]-c[ 7]) + 840*(-c[ 4]-c[ 9]) + 1896*(c[12])))+
                      (u3.z*     (48*(-c[17]+c[14]) + 60*(-c[24]-c[23]+c[25]+c[26]) + 72*(-c[ 4]+c[ 1]) + 204*(-c[ 8]-c[ 7]+c[ 5]+c[ 6]) + 456*(-c[ 9]+c[12]))+
                       u2.z*u1.w*(12*(c[15]+c[16]) + 48*(c[ 2]+c[ 3]) + 60*(c[21]+c[19]) + 72*(c[14]) + 96*(c[26]) + 120*(-c[23]) + 132*(-c[11]) + 216*(-c[18]-c[17]+c[25]) + 288*(c[ 0]+c[ 1]) + 312*(-c[10]) + 360*(-c[ 4]) + 396*(c[ 6]) + 516*(-c[ 8]) + 636*(c[ 5]) + 756*(-c[ 7]) + 1260*(-c[ 9]) + 1656*(c[12]))+
                       u1.z*u2.w*(12*(c[16]) + 24*(c[15]+c[14]) + 36*(c[26]) + 72*(-c[23]+c[ 3]) + 132*(-c[11]+c[19]) + 156*(c[21]) + 216*(c[ 2]+c[ 6]) + 252*(c[25]) + 276*(-c[17]) + 288*(-c[18]+c[ 1]) + 384*(-c[ 8]) + 504*(-c[ 4]+c[ 0]) + 564*(c[ 5]) + 696*(-c[10]) + 900*(-c[ 7]) + 948*(-c[ 9]) + 1704*(c[12]))+
                            u3.w*(12*(-c[23]) + 24*(c[ 3]+c[ 6]) + 60*(-c[ 8]-c[11]) + 72*(c[19]+c[ 1]) + 96*(c[25]+c[21]) + 108*(-c[17]-c[18]) + 156*(c[ 5]+c[ 2]) + 228*(-c[ 4]-c[ 9]) + 288*(c[ 0]) + 336*(-c[10]) + 372*(-c[ 7]) + 528*(c[12]))));
    dij.z +=      (u4.y*(          (6*(-c[24]+c[ 1]) + 12*(-c[10]-c[ 7]+c[16]+c[20]) + 39*(-c[ 9]-c[18]-c[ 4]-c[17]+c[ 6]+c[26]+c[ 3]+c[22]) + 102*(-c[11]+c[ 0]) + 120*(-c[ 8]+c[12])))+
                 u3.y*(u1.z*     (24*(-c[10]+c[25]+c[ 5]) + 36*(c[16]+c[20]+c[ 1]) + 48*(-c[24]) + 84*(c[ 3]+c[22]) + 96*(-c[ 7]) + 120*(-c[ 4]-c[17]) + 180*(-c[18]-c[ 9]) + 204*(c[ 6]+c[26]) + 336*(c[ 0]) + 360*(-c[11]) + 384*(-c[ 8]) + 444*(c[12]))+
                            u1.w*(24*(c[16]+c[20]+c[25]+c[ 2]+c[ 5]+c[21]) + 48*(c[ 1]) + 72*(-c[10]-c[ 7]) + 132*(c[ 6]+c[26]+c[ 3]+c[22]) + 180*(-c[18]-c[ 9]-c[ 4]-c[17]) + 336*(-c[11]-c[ 8]+c[ 0]) + 480*(c[12])))+
                 u2.y*(u2.z*     (6*(c[14]) + 30*(c[16]+c[20]) + 48*(-c[10]+c[ 3]+c[22]) + 60*(c[ 1]) + 90*(c[25]+c[ 5]) + 120*(-c[24]) + 132*(-c[ 4]-c[17]) + 192*(-c[ 7]) + 288*(-c[18]) + 306*(-c[ 9]) + 342*(c[ 6]+c[26]) + 372*(-c[11]) + 396*(c[ 0]) + 468*(-c[ 8]) + 576*(c[12]))+
                       u1.z*u1.w*(12*(c[15]+c[14]+c[19]) + 48*(c[16]+c[20]) + 72*(c[ 2]+c[21]) + 180*(c[ 1]) + 192*(c[ 3]+c[22]) + 216*(c[25]+c[ 5]) + 264*(-c[10]) + 420*(-c[ 4]-c[17]+c[ 6]+c[26]) + 480*(-c[ 7]) + 660*(-c[18]) + 696*(-c[ 9]) + 744*(-c[11]) + 792*(-c[ 8]) + 912*(c[ 0]) + 1452*(c[12]))+
                            u2.w*(6*(c[14]+c[13]) + 12*(c[20]+c[15]+c[19]+c[16]) + 108*(c[25]+c[ 5]+c[ 6]+c[26]+c[ 3]+c[22]+c[21]+c[ 2]+c[ 1]) + 264*(-c[11]-c[ 8]-c[10]-c[ 7]) + 270*(-c[18]-c[17]) + 288*(-c[ 9]-c[ 4]) + 408*(c[ 0]) + 732*(c[12])))+
                 u1.y*(u3.z*     (12*(c[14]) + 36*(c[ 1]) + 60*(-c[17]-c[ 4]) + 72*(-c[11]-c[10]) + 108*(c[25]+c[ 5]) + 120*(-c[24]) + 144*(-c[ 7]) + 192*(-c[18]+c[ 0]) + 228*(-c[ 9]+c[ 6]+c[26]) + 264*(-c[ 8]) + 300*(c[12]))+
                       u2.z*u1.w*(12*(c[16]+c[20]+c[15]+c[19]) + 24*(c[14]) + 48*(c[ 3]+c[22]+c[ 2]+c[21]) + 168*(c[ 1]) + 312*(-c[ 4]-c[17]) + 384*(-c[11]-c[10]) + 420*(c[25]+c[ 5]+c[ 6]+c[26]) + 648*(-c[ 8]-c[ 7]) + 792*(-c[18]) + 864*(-c[ 9]+c[ 0]) + 1368*(c[12]))+
                       u1.z*u2.w*(12*(c[20]+c[14]+c[16]) + 48*(c[19]+c[15]) + 72*(c[ 3]+c[22]) + 180*(c[ 1]) + 192*(c[21]+c[ 2]) + 216*(c[ 6]+c[26]) + 264*(-c[11]) + 420*(-c[17]-c[ 4]+c[25]+c[ 5]) + 480*(-c[ 8]) + 660*(-c[18]) + 696*(-c[ 9]) + 744*(-c[10]) + 792*(-c[ 7]) + 912*(c[ 0]) + 1452*(c[12]))+
                            u3.w*(24*(c[19]+c[15]+c[ 3]+c[26]+c[22]+c[ 6]) + 48*(c[ 1]) + 72*(-c[ 8]-c[11]) + 132*(c[25]+c[ 5]+c[21]+c[ 2]) + 180*(-c[17]-c[ 4]-c[18]-c[ 9]) + 336*(-c[10]-c[ 7]+c[ 0]) + 480*(c[12])))+
                      (u4.z*     (6*(-c[17]-c[ 4]+c[14]+c[ 1]) + 18*(-c[ 9]+c[12]) + 42*(-c[ 8]-c[24]-c[ 7]-c[23]+c[25]+c[ 5]+c[ 6]+c[26]))+
                       u3.z*u1.w*(12*(c[14]) + 36*(c[ 1]) + 60*(-c[17]-c[ 4]) + 72*(-c[11]-c[10]) + 108*(c[ 6]+c[26]) + 120*(-c[23]) + 144*(-c[ 8]) + 192*(-c[18]+c[ 0]) + 228*(-c[ 9]+c[25]+c[ 5]) + 264*(-c[ 7]) + 300*(c[12]))+
                       u2.z*u2.w*(6*(c[14]) + 30*(c[19]+c[15]) + 48*(-c[11]+c[21]+c[ 2]) + 60*(c[ 1]) + 90*(c[ 6]+c[26]) + 120*(-c[23]) + 132*(-c[ 4]-c[17]) + 192*(-c[ 8]) + 288*(-c[18]) + 306*(-c[ 9]) + 342*(c[25]+c[ 5]) + 372*(-c[10]) + 396*(c[ 0]) + 468*(-c[ 7]) + 576*(c[12]))+
                       u1.z*u3.w*(24*(-c[11]+c[26]+c[ 6]) + 36*(c[19]+c[15]+c[ 1]) + 48*(-c[23]) + 84*(c[21]+c[ 2]) + 96*(-c[ 8]) + 120*(-c[17]-c[ 4]) + 180*(-c[18]-c[ 9]) + 204*(c[25]+c[ 5]) + 336*(c[ 0]) + 360*(-c[10]) + 384*(-c[ 7]) + 444*(c[12]))+
                            u4.w*(6*(-c[23]+c[ 1]) + 12*(-c[ 8]-c[11]+c[19]+c[15]) + 39*(-c[17]-c[ 4]-c[18]-c[ 9]+c[25]+c[21]+c[ 5]+c[ 2]) + 102*(-c[10]+c[ 0]) + 120*(-c[ 7]+c[12]))));

    return vec3[2](dii*SCALE_D2, dij*SCALE_D2);
}


vec3 compute_gradient(vec3 p_in)
{
    vec3 g = eval_g();
    g = R*(P*g) * scale_axes;
    return g;
}


vec3[2] compute_2nd_derivatives(vec3 p_in)
{
    vec3[2] expr = eval_d2();
    expr[0] =    P*expr[0]  * scale_axes     * scale_axes;      //Dxx,Dyy,Dzz
    expr[1] = R*(P*expr[1]) * scale_axes.yzx * scale_axes.zxy;  //Dyz,Dzx,Dxy
    return expr;
}


vec2 min_max_curvature(vec3 g, vec3 d2[2])
{
    float one_over_len_g = 1.0/length(g);

    mat3  H = mat3(d2[0].x, d2[1].z, d2[1].y,
                   d2[1].z, d2[0].y, d2[1].x,
                   d2[1].y, d2[1].x, d2[0].z);

    vec3  n = -g*one_over_len_g;
    mat3  P = mat3(1.0) - mat3(n.x*n, n.y*n, n.z*n);

    mat3  M   = -P*H*P*one_over_len_g;
    mat3  MMt = M*transpose(M);

    float T = M[0][0] + M[1][1] + M[2][2];
    float F = sqrt(MMt[0][0] + MMt[1][1] + MMt[2][2]);

    float k_min = (T - sqrt(2.0*F*F - T*T))*0.5;
    float k_max = (T + sqrt(2.0*F*F - T*T))*0.5;

    return vec2(k_max, k_min);
}


vec4 Blinn_Phong(vec3 n, vec4 pos_eye, TMaterial material, TLight light)
{
    vec3 l;
    if(light.position.w == 1.0) // positional light
        l = normalize((light.position - pos_eye).xyz);
    else                        // directional light
        l = normalize((light.position).xyz);
    
    vec3  v = -normalize(pos_eye.xyz);
    vec3  h = normalize(l + v);
    float l_dot_n = max(dot(l, n), 0.0);

    vec3  ambient = light.ambient * material.ambient;
    vec3  diffuse = light.diffuse * material.diffuse * l_dot_n;
    vec3  specular = vec3(0.0);

    if(l_dot_n >= 0.0)
        specular = light.specular * material.specular * pow(max(dot(h, n), 0.0), material.shininess);

    return vec4(ambient + diffuse + specular, 1);
}


TMaterial get_material(vec3 g, vec3 d2[2], int face)
{
    switch(render_mode)
    {
        case RENDER_MODE_CURVATURE:
        {
            vec2 curv = min_max_curvature(g, d2);
            float scale_k = 0.005;
            vec2  tc = vec2(scale_k*curv+0.5);
            return TMaterial(vec3(.1),
                             texture(tex_colormap_2d, tc).xyz,
                             vec3(1),
                             128.0*0.5);
            break;
        }
        case RENDER_MODE_BLINN_PHONG:
        {
            return uMaterial[face];
            break;
        }
    }
    return TMaterial(vec3(1), vec3(1), vec3(1), 128.0*0.5);
}


#define EVAL(p) (preprocess(p), fetch_coefficients(), eval_f())
void main() {
    vec3 start = texture(tex_front, vTexCoord).xyz*dim - vec3(0.5);
    vec3 end = texture(tex_back, vTexCoord).xyz*dim - vec3(0.5);

    vec3 p = start;
    vec3 p_prev;
    vec3 dir = normalize(end-start);

    float step = scale_step*dim.x;

    float len = 0;
    float len_full = length(end - start);
    float voxel, voxel_prev;

    voxel = EVAL(p);

    float   orientation = 2.0*float(voxel < level)-1.0;     // equivalent to (voxel<level?1:-1)

    for(int i = 0 ; i < 1000 ; i++)
    {
        p   += step*dir;
        len += step;

        if(len > len_full) {
            fColor = vec4(1);
            return;
        }
        voxel = EVAL(p);

        if(orientation*(voxel-level) > 0)
        {
            // One step of Regula Falsi
            if(abs(voxel-voxel_prev) > 0.00001)
            {
                p = (p*(voxel_prev-level)-p_prev*(voxel-level))/(voxel_prev-voxel);
                preprocess(p);
                fetch_coefficients();
            }
            vec4 p_iso = vec4(p/scale_axes - vec3(.5),orientation);
            vec3 g     = compute_gradient(p);
            vec3[2] d2 = compute_2nd_derivatives(p);

            fColor = Blinn_Phong(normalize(mat3(MV)*(-p_iso.w*g)),
                                 MV*vec4(p_iso.xyz,1),
                                 get_material(g, d2, int(0.5*(1.0-p_iso.w))),
                                 uLight);
            return;
        }
        voxel_prev = voxel;
        p_prev = p;
    }
}
